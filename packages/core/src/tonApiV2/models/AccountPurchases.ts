/* tslint:disable */
/* eslint-disable */
/**
 * REST api to TON blockchain explorer
 * Provide access to indexed TON blockchain
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@tonkeeper.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Purchase } from './Purchase';
import {
    PurchaseFromJSON,
    PurchaseFromJSONTyped,
    PurchaseToJSON,
    PurchaseToJSONTyped,
} from './Purchase';

/**
 * 
 * @export
 * @interface AccountPurchases
 */
export interface AccountPurchases {
    /**
     * 
     * @type {Array<Purchase>}
     * @memberof AccountPurchases
     */
    purchases: Array<Purchase>;
    /**
     * 
     * @type {number}
     * @memberof AccountPurchases
     */
    nextFrom: number;
}

/**
 * Check if a given object implements the AccountPurchases interface.
 */
export function instanceOfAccountPurchases(value: object): value is AccountPurchases {
    if (!('purchases' in value) || value['purchases'] === undefined) return false;
    if (!('nextFrom' in value) || value['nextFrom'] === undefined) return false;
    return true;
}

export function AccountPurchasesFromJSON(json: any): AccountPurchases {
    return AccountPurchasesFromJSONTyped(json, false);
}

export function AccountPurchasesFromJSONTyped(json: any, ignoreDiscriminator: boolean): AccountPurchases {
    if (json == null) {
        return json;
    }
    return {
        
        'purchases': ((json['purchases'] as Array<any>).map(PurchaseFromJSON)),
        'nextFrom': json['next_from'],
    };
}

  export function AccountPurchasesToJSON(json: any): AccountPurchases {
      return AccountPurchasesToJSONTyped(json, false);
  }

  export function AccountPurchasesToJSONTyped(value?: AccountPurchases | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'purchases': ((value['purchases'] as Array<any>).map(PurchaseToJSON)),
        'next_from': value['nextFrom'],
    };
}

