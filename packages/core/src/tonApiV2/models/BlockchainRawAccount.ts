/* tslint:disable */
/* eslint-disable */
/**
 * REST api to TON blockchain explorer
 * Provide access to indexed TON blockchain
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@tonkeeper.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AccountStatus } from './AccountStatus';
import {
    AccountStatusFromJSON,
    AccountStatusFromJSONTyped,
    AccountStatusToJSON,
    AccountStatusToJSONTyped,
} from './AccountStatus';
import type { BlockchainRawAccountLibrariesInner } from './BlockchainRawAccountLibrariesInner';
import {
    BlockchainRawAccountLibrariesInnerFromJSON,
    BlockchainRawAccountLibrariesInnerFromJSONTyped,
    BlockchainRawAccountLibrariesInnerToJSON,
    BlockchainRawAccountLibrariesInnerToJSONTyped,
} from './BlockchainRawAccountLibrariesInner';
import type { AccountStorageInfo } from './AccountStorageInfo';
import {
    AccountStorageInfoFromJSON,
    AccountStorageInfoFromJSONTyped,
    AccountStorageInfoToJSON,
    AccountStorageInfoToJSONTyped,
} from './AccountStorageInfo';

/**
 * 
 * @export
 * @interface BlockchainRawAccount
 */
export interface BlockchainRawAccount {
    /**
     * 
     * @type {string}
     * @memberof BlockchainRawAccount
     */
    address: string;
    /**
     * 
     * @type {number}
     * @memberof BlockchainRawAccount
     */
    balance: number;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof BlockchainRawAccount
     */
    extraBalance?: { [key: string]: string; };
    /**
     * 
     * @type {string}
     * @memberof BlockchainRawAccount
     */
    code?: string;
    /**
     * 
     * @type {string}
     * @memberof BlockchainRawAccount
     */
    data?: string;
    /**
     * 
     * @type {number}
     * @memberof BlockchainRawAccount
     */
    lastTransactionLt: number;
    /**
     * 
     * @type {string}
     * @memberof BlockchainRawAccount
     */
    lastTransactionHash?: string;
    /**
     * 
     * @type {string}
     * @memberof BlockchainRawAccount
     */
    frozenHash?: string;
    /**
     * 
     * @type {AccountStatus}
     * @memberof BlockchainRawAccount
     */
    status: AccountStatus;
    /**
     * 
     * @type {AccountStorageInfo}
     * @memberof BlockchainRawAccount
     */
    storage: AccountStorageInfo;
    /**
     * 
     * @type {Array<BlockchainRawAccountLibrariesInner>}
     * @memberof BlockchainRawAccount
     */
    libraries?: Array<BlockchainRawAccountLibrariesInner>;
}



/**
 * Check if a given object implements the BlockchainRawAccount interface.
 */
export function instanceOfBlockchainRawAccount(value: object): value is BlockchainRawAccount {
    if (!('address' in value) || value['address'] === undefined) return false;
    if (!('balance' in value) || value['balance'] === undefined) return false;
    if (!('lastTransactionLt' in value) || value['lastTransactionLt'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('storage' in value) || value['storage'] === undefined) return false;
    return true;
}

export function BlockchainRawAccountFromJSON(json: any): BlockchainRawAccount {
    return BlockchainRawAccountFromJSONTyped(json, false);
}

export function BlockchainRawAccountFromJSONTyped(json: any, ignoreDiscriminator: boolean): BlockchainRawAccount {
    if (json == null) {
        return json;
    }
    return {
        
        'address': json['address'],
        'balance': json['balance'],
        'extraBalance': json['extra_balance'] == null ? undefined : json['extra_balance'],
        'code': json['code'] == null ? undefined : json['code'],
        'data': json['data'] == null ? undefined : json['data'],
        'lastTransactionLt': json['last_transaction_lt'],
        'lastTransactionHash': json['last_transaction_hash'] == null ? undefined : json['last_transaction_hash'],
        'frozenHash': json['frozen_hash'] == null ? undefined : json['frozen_hash'],
        'status': AccountStatusFromJSON(json['status']),
        'storage': AccountStorageInfoFromJSON(json['storage']),
        'libraries': json['libraries'] == null ? undefined : ((json['libraries'] as Array<any>).map(BlockchainRawAccountLibrariesInnerFromJSON)),
    };
}

export function BlockchainRawAccountToJSON(json: any): BlockchainRawAccount {
    return BlockchainRawAccountToJSONTyped(json, false);
}

export function BlockchainRawAccountToJSONTyped(value?: BlockchainRawAccount | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'address': value['address'],
        'balance': value['balance'],
        'extra_balance': value['extraBalance'],
        'code': value['code'],
        'data': value['data'],
        'last_transaction_lt': value['lastTransactionLt'],
        'last_transaction_hash': value['lastTransactionHash'],
        'frozen_hash': value['frozenHash'],
        'status': AccountStatusToJSON(value['status']),
        'storage': AccountStorageInfoToJSON(value['storage']),
        'libraries': value['libraries'] == null ? undefined : ((value['libraries'] as Array<any>).map(BlockchainRawAccountLibrariesInnerToJSON)),
    };
}

