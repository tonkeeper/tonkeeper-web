/* tslint:disable */
/* eslint-disable */
/**
 * REST api to TON blockchain explorer
 * Provide access to indexed TON blockchain
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@tonkeeper.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TonConnectProofRequestProof } from './TonConnectProofRequestProof';
import {
    TonConnectProofRequestProofFromJSON,
    TonConnectProofRequestProofFromJSONTyped,
    TonConnectProofRequestProofToJSON,
    TonConnectProofRequestProofToJSONTyped,
} from './TonConnectProofRequestProof';

/**
 * 
 * @export
 * @interface TonConnectProofRequest
 */
export interface TonConnectProofRequest {
    /**
     * 
     * @type {string}
     * @memberof TonConnectProofRequest
     */
    address: string;
    /**
     * 
     * @type {TonConnectProofRequestProof}
     * @memberof TonConnectProofRequest
     */
    proof: TonConnectProofRequestProof;
}

/**
 * Check if a given object implements the TonConnectProofRequest interface.
 */
export function instanceOfTonConnectProofRequest(value: object): value is TonConnectProofRequest {
    if (!('address' in value) || value['address'] === undefined) return false;
    if (!('proof' in value) || value['proof'] === undefined) return false;
    return true;
}

export function TonConnectProofRequestFromJSON(json: any): TonConnectProofRequest {
    return TonConnectProofRequestFromJSONTyped(json, false);
}

export function TonConnectProofRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): TonConnectProofRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'address': json['address'],
        'proof': TonConnectProofRequestProofFromJSON(json['proof']),
    };
}

  export function TonConnectProofRequestToJSON(json: any): TonConnectProofRequest {
      return TonConnectProofRequestToJSONTyped(json, false);
  }

  export function TonConnectProofRequestToJSONTyped(value?: TonConnectProofRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'address': value['address'],
        'proof': TonConnectProofRequestProofToJSON(value['proof']),
    };
}

