/* tslint:disable */
/* eslint-disable */
/**
 * REST api to TON blockchain explorer
 * Provide access to indexed TON blockchain
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@tonkeeper.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Transaction } from './Transaction';
import {
    TransactionFromJSON,
    TransactionFromJSONTyped,
    TransactionToJSON,
    TransactionToJSONTyped,
} from './Transaction';

/**
 * 
 * @export
 * @interface Trace
 */
export interface Trace {
    /**
     * 
     * @type {Transaction}
     * @memberof Trace
     */
    transaction: Transaction;
    /**
     * 
     * @type {Array<string>}
     * @memberof Trace
     */
    interfaces: Array<string>;
    /**
     * 
     * @type {Array<Trace>}
     * @memberof Trace
     */
    children?: Array<Trace>;
    /**
     * 
     * @type {boolean}
     * @memberof Trace
     */
    emulated?: boolean;
}

/**
 * Check if a given object implements the Trace interface.
 */
export function instanceOfTrace(value: object): value is Trace {
    if (!('transaction' in value) || value['transaction'] === undefined) return false;
    if (!('interfaces' in value) || value['interfaces'] === undefined) return false;
    return true;
}

export function TraceFromJSON(json: any): Trace {
    return TraceFromJSONTyped(json, false);
}

export function TraceFromJSONTyped(json: any, ignoreDiscriminator: boolean): Trace {
    if (json == null) {
        return json;
    }
    return {
        
        'transaction': TransactionFromJSON(json['transaction']),
        'interfaces': json['interfaces'],
        'children': json['children'] == null ? undefined : ((json['children'] as Array<any>).map(TraceFromJSON)),
        'emulated': json['emulated'] == null ? undefined : json['emulated'],
    };
}

  export function TraceToJSON(json: any): Trace {
      return TraceToJSONTyped(json, false);
  }

  export function TraceToJSONTyped(value?: Trace | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'transaction': TransactionToJSON(value['transaction']),
        'interfaces': value['interfaces'],
        'children': value['children'] == null ? undefined : ((value['children'] as Array<any>).map(TraceToJSON)),
        'emulated': value['emulated'],
    };
}

