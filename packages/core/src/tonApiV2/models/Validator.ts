/* tslint:disable */
/* eslint-disable */
/**
 * REST api to TON blockchain explorer
 * Provide access to indexed TON blockchain
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@tonkeeper.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Validator
 */
export interface Validator {
    /**
     * 
     * @type {string}
     * @memberof Validator
     */
    address: string;
    /**
     * 
     * @type {string}
     * @memberof Validator
     */
    adnlAddress: string;
    /**
     * 
     * @type {number}
     * @memberof Validator
     */
    stake: number;
    /**
     * 
     * @type {number}
     * @memberof Validator
     */
    maxFactor: number;
}

/**
 * Check if a given object implements the Validator interface.
 */
export function instanceOfValidator(value: object): value is Validator {
    if (!('address' in value) || value['address'] === undefined) return false;
    if (!('adnlAddress' in value) || value['adnlAddress'] === undefined) return false;
    if (!('stake' in value) || value['stake'] === undefined) return false;
    if (!('maxFactor' in value) || value['maxFactor'] === undefined) return false;
    return true;
}

export function ValidatorFromJSON(json: any): Validator {
    return ValidatorFromJSONTyped(json, false);
}

export function ValidatorFromJSONTyped(json: any, ignoreDiscriminator: boolean): Validator {
    if (json == null) {
        return json;
    }
    return {
        
        'address': json['address'],
        'adnlAddress': json['adnl_address'],
        'stake': json['stake'],
        'maxFactor': json['max_factor'],
    };
}

  export function ValidatorToJSON(json: any): Validator {
      return ValidatorToJSONTyped(json, false);
  }

  export function ValidatorToJSONTyped(value?: Validator | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'address': value['address'],
        'adnl_address': value['adnlAddress'],
        'stake': value['stake'],
        'max_factor': value['maxFactor'],
    };
}

