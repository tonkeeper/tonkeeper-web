/* tslint:disable */
/* eslint-disable */
/**
 * REST api to TON blockchain explorer
 * Provide access to indexed TON blockchain
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@tonkeeper.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { JettonVerificationType } from './JettonVerificationType';
import {
    JettonVerificationTypeFromJSON,
    JettonVerificationTypeFromJSONTyped,
    JettonVerificationTypeToJSON,
    JettonVerificationTypeToJSONTyped,
} from './JettonVerificationType';
import type { JettonMetadata } from './JettonMetadata';
import {
    JettonMetadataFromJSON,
    JettonMetadataFromJSONTyped,
    JettonMetadataToJSON,
    JettonMetadataToJSONTyped,
} from './JettonMetadata';
import type { AccountAddress } from './AccountAddress';
import {
    AccountAddressFromJSON,
    AccountAddressFromJSONTyped,
    AccountAddressToJSON,
    AccountAddressToJSONTyped,
} from './AccountAddress';

/**
 * 
 * @export
 * @interface JettonInfo
 */
export interface JettonInfo {
    /**
     * 
     * @type {boolean}
     * @memberof JettonInfo
     */
    mintable: boolean;
    /**
     * 
     * @type {string}
     * @memberof JettonInfo
     */
    totalSupply: string;
    /**
     * 
     * @type {AccountAddress}
     * @memberof JettonInfo
     */
    admin?: AccountAddress;
    /**
     * 
     * @type {JettonMetadata}
     * @memberof JettonInfo
     */
    metadata: JettonMetadata;
    /**
     * 
     * @type {string}
     * @memberof JettonInfo
     */
    preview: string;
    /**
     * 
     * @type {JettonVerificationType}
     * @memberof JettonInfo
     */
    verification: JettonVerificationType;
    /**
     * 
     * @type {number}
     * @memberof JettonInfo
     */
    holdersCount: number;
    /**
     * 
     * @type {number}
     * @memberof JettonInfo
     */
    score?: number;
}



/**
 * Check if a given object implements the JettonInfo interface.
 */
export function instanceOfJettonInfo(value: object): value is JettonInfo {
    if (!('mintable' in value) || value['mintable'] === undefined) return false;
    if (!('totalSupply' in value) || value['totalSupply'] === undefined) return false;
    if (!('metadata' in value) || value['metadata'] === undefined) return false;
    if (!('preview' in value) || value['preview'] === undefined) return false;
    if (!('verification' in value) || value['verification'] === undefined) return false;
    if (!('holdersCount' in value) || value['holdersCount'] === undefined) return false;
    return true;
}

export function JettonInfoFromJSON(json: any): JettonInfo {
    return JettonInfoFromJSONTyped(json, false);
}

export function JettonInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): JettonInfo {
    if (json == null) {
        return json;
    }
    return {
        
        'mintable': json['mintable'],
        'totalSupply': json['total_supply'],
        'admin': json['admin'] == null ? undefined : AccountAddressFromJSON(json['admin']),
        'metadata': JettonMetadataFromJSON(json['metadata']),
        'preview': json['preview'],
        'verification': JettonVerificationTypeFromJSON(json['verification']),
        'holdersCount': json['holders_count'],
        'score': json['score'] == null ? undefined : json['score'],
    };
}

  export function JettonInfoToJSON(json: any): JettonInfo {
      return JettonInfoToJSONTyped(json, false);
  }

  export function JettonInfoToJSONTyped(value?: JettonInfo | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'mintable': value['mintable'],
        'total_supply': value['totalSupply'],
        'admin': AccountAddressToJSON(value['admin']),
        'metadata': JettonMetadataToJSON(value['metadata']),
        'preview': value['preview'],
        'verification': JettonVerificationTypeToJSON(value['verification']),
        'holders_count': value['holdersCount'],
        'score': value['score'],
    };
}

