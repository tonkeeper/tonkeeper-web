/* tslint:disable */
/* eslint-disable */
/**
 * REST api to TON blockchain explorer
 * Provide access to indexed TON blockchain
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@tonkeeper.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AccountStatus } from './AccountStatus';
import {
    AccountStatusFromJSON,
    AccountStatusFromJSONTyped,
    AccountStatusToJSON,
    AccountStatusToJSONTyped,
} from './AccountStatus';

/**
 * 
 * @export
 * @interface WalletPlugin
 */
export interface WalletPlugin {
    /**
     * 
     * @type {string}
     * @memberof WalletPlugin
     */
    address: string;
    /**
     * 
     * @type {string}
     * @memberof WalletPlugin
     */
    type: string;
    /**
     * 
     * @type {AccountStatus}
     * @memberof WalletPlugin
     */
    status: AccountStatus;
}



/**
 * Check if a given object implements the WalletPlugin interface.
 */
export function instanceOfWalletPlugin(value: object): value is WalletPlugin {
    if (!('address' in value) || value['address'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    return true;
}

export function WalletPluginFromJSON(json: any): WalletPlugin {
    return WalletPluginFromJSONTyped(json, false);
}

export function WalletPluginFromJSONTyped(json: any, ignoreDiscriminator: boolean): WalletPlugin {
    if (json == null) {
        return json;
    }
    return {
        
        'address': json['address'],
        'type': json['type'],
        'status': AccountStatusFromJSON(json['status']),
    };
}

  export function WalletPluginToJSON(json: any): WalletPlugin {
      return WalletPluginToJSONTyped(json, false);
  }

  export function WalletPluginToJSONTyped(value?: WalletPlugin | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'address': value['address'],
        'type': value['type'],
        'status': AccountStatusToJSON(value['status']),
    };
}

