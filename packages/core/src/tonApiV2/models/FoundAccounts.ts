/* tslint:disable */
/* eslint-disable */
/**
 * REST api to TON blockchain explorer
 * Provide access to indexed TON blockchain
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@tonkeeper.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { FoundAccountsAddressesInner } from './FoundAccountsAddressesInner';
import {
    FoundAccountsAddressesInnerFromJSON,
    FoundAccountsAddressesInnerFromJSONTyped,
    FoundAccountsAddressesInnerToJSON,
    FoundAccountsAddressesInnerToJSONTyped,
} from './FoundAccountsAddressesInner';

/**
 * 
 * @export
 * @interface FoundAccounts
 */
export interface FoundAccounts {
    /**
     * 
     * @type {Array<FoundAccountsAddressesInner>}
     * @memberof FoundAccounts
     */
    addresses: Array<FoundAccountsAddressesInner>;
}

/**
 * Check if a given object implements the FoundAccounts interface.
 */
export function instanceOfFoundAccounts(value: object): value is FoundAccounts {
    if (!('addresses' in value) || value['addresses'] === undefined) return false;
    return true;
}

export function FoundAccountsFromJSON(json: any): FoundAccounts {
    return FoundAccountsFromJSONTyped(json, false);
}

export function FoundAccountsFromJSONTyped(json: any, ignoreDiscriminator: boolean): FoundAccounts {
    if (json == null) {
        return json;
    }
    return {
        
        'addresses': ((json['addresses'] as Array<any>).map(FoundAccountsAddressesInnerFromJSON)),
    };
}

  export function FoundAccountsToJSON(json: any): FoundAccounts {
      return FoundAccountsToJSONTyped(json, false);
  }

  export function FoundAccountsToJSONTyped(value?: FoundAccounts | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'addresses': ((value['addresses'] as Array<any>).map(FoundAccountsAddressesInnerToJSON)),
    };
}

