/* tslint:disable */
/* eslint-disable */
/**
 * REST api to TON blockchain explorer
 * Provide access to indexed TON blockchain
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@tonkeeper.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ConfigProposalSetup } from './ConfigProposalSetup';
import {
    ConfigProposalSetupFromJSON,
    ConfigProposalSetupFromJSONTyped,
    ConfigProposalSetupToJSON,
    ConfigProposalSetupToJSONTyped,
} from './ConfigProposalSetup';

/**
 * This parameter indicates under what conditions proposals to change the TON configuration are accepted.
 * @export
 * @interface BlockchainConfig11
 */
export interface BlockchainConfig11 {
    /**
     * 
     * @type {ConfigProposalSetup}
     * @memberof BlockchainConfig11
     */
    normalParams: ConfigProposalSetup;
    /**
     * 
     * @type {ConfigProposalSetup}
     * @memberof BlockchainConfig11
     */
    criticalParams: ConfigProposalSetup;
}

/**
 * Check if a given object implements the BlockchainConfig11 interface.
 */
export function instanceOfBlockchainConfig11(value: object): value is BlockchainConfig11 {
    if (!('normalParams' in value) || value['normalParams'] === undefined) return false;
    if (!('criticalParams' in value) || value['criticalParams'] === undefined) return false;
    return true;
}

export function BlockchainConfig11FromJSON(json: any): BlockchainConfig11 {
    return BlockchainConfig11FromJSONTyped(json, false);
}

export function BlockchainConfig11FromJSONTyped(json: any, ignoreDiscriminator: boolean): BlockchainConfig11 {
    if (json == null) {
        return json;
    }
    return {
        
        'normalParams': ConfigProposalSetupFromJSON(json['normal_params']),
        'criticalParams': ConfigProposalSetupFromJSON(json['critical_params']),
    };
}

  export function BlockchainConfig11ToJSON(json: any): BlockchainConfig11 {
      return BlockchainConfig11ToJSONTyped(json, false);
  }

  export function BlockchainConfig11ToJSONTyped(value?: BlockchainConfig11 | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'normal_params': ConfigProposalSetupToJSON(value['normalParams']),
        'critical_params': ConfigProposalSetupToJSON(value['criticalParams']),
    };
}

