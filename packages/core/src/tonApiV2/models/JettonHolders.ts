/* tslint:disable */
/* eslint-disable */
/**
 * REST api to TON blockchain explorer
 * Provide access to indexed TON blockchain
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@tonkeeper.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { JettonHoldersAddressesInner } from './JettonHoldersAddressesInner';
import {
    JettonHoldersAddressesInnerFromJSON,
    JettonHoldersAddressesInnerFromJSONTyped,
    JettonHoldersAddressesInnerToJSON,
    JettonHoldersAddressesInnerToJSONTyped,
} from './JettonHoldersAddressesInner';

/**
 * 
 * @export
 * @interface JettonHolders
 */
export interface JettonHolders {
    /**
     * 
     * @type {Array<JettonHoldersAddressesInner>}
     * @memberof JettonHolders
     */
    addresses: Array<JettonHoldersAddressesInner>;
    /**
     * total number of holders
     * @type {number}
     * @memberof JettonHolders
     */
    total: number;
}

/**
 * Check if a given object implements the JettonHolders interface.
 */
export function instanceOfJettonHolders(value: object): value is JettonHolders {
    if (!('addresses' in value) || value['addresses'] === undefined) return false;
    if (!('total' in value) || value['total'] === undefined) return false;
    return true;
}

export function JettonHoldersFromJSON(json: any): JettonHolders {
    return JettonHoldersFromJSONTyped(json, false);
}

export function JettonHoldersFromJSONTyped(json: any, ignoreDiscriminator: boolean): JettonHolders {
    if (json == null) {
        return json;
    }
    return {
        
        'addresses': ((json['addresses'] as Array<any>).map(JettonHoldersAddressesInnerFromJSON)),
        'total': json['total'],
    };
}

  export function JettonHoldersToJSON(json: any): JettonHolders {
      return JettonHoldersToJSONTyped(json, false);
  }

  export function JettonHoldersToJSONTyped(value?: JettonHolders | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'addresses': ((value['addresses'] as Array<any>).map(JettonHoldersAddressesInnerToJSON)),
        'total': value['total'],
    };
}

