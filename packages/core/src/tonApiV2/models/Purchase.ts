/* tslint:disable */
/* eslint-disable */
/**
 * REST api to TON blockchain explorer
 * Provide access to indexed TON blockchain
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@tonkeeper.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Price } from './Price';
import {
    PriceFromJSON,
    PriceFromJSONTyped,
    PriceToJSON,
    PriceToJSONTyped,
} from './Price';
import type { Metadata } from './Metadata';
import {
    MetadataFromJSON,
    MetadataFromJSONTyped,
    MetadataToJSON,
    MetadataToJSONTyped,
} from './Metadata';
import type { AccountAddress } from './AccountAddress';
import {
    AccountAddressFromJSON,
    AccountAddressFromJSONTyped,
    AccountAddressToJSON,
    AccountAddressToJSONTyped,
} from './AccountAddress';

/**
 * 
 * @export
 * @interface Purchase
 */
export interface Purchase {
    /**
     * 
     * @type {string}
     * @memberof Purchase
     */
    eventId: string;
    /**
     * 
     * @type {string}
     * @memberof Purchase
     */
    invoiceId: string;
    /**
     * 
     * @type {AccountAddress}
     * @memberof Purchase
     */
    source: AccountAddress;
    /**
     * 
     * @type {AccountAddress}
     * @memberof Purchase
     */
    destination: AccountAddress;
    /**
     * 
     * @type {number}
     * @memberof Purchase
     */
    lt: number;
    /**
     * 
     * @type {number}
     * @memberof Purchase
     */
    utime: number;
    /**
     * 
     * @type {Price}
     * @memberof Purchase
     */
    amount: Price;
    /**
     * 
     * @type {Metadata}
     * @memberof Purchase
     */
    metadata: Metadata;
}

/**
 * Check if a given object implements the Purchase interface.
 */
export function instanceOfPurchase(value: object): value is Purchase {
    if (!('eventId' in value) || value['eventId'] === undefined) return false;
    if (!('invoiceId' in value) || value['invoiceId'] === undefined) return false;
    if (!('source' in value) || value['source'] === undefined) return false;
    if (!('destination' in value) || value['destination'] === undefined) return false;
    if (!('lt' in value) || value['lt'] === undefined) return false;
    if (!('utime' in value) || value['utime'] === undefined) return false;
    if (!('amount' in value) || value['amount'] === undefined) return false;
    if (!('metadata' in value) || value['metadata'] === undefined) return false;
    return true;
}

export function PurchaseFromJSON(json: any): Purchase {
    return PurchaseFromJSONTyped(json, false);
}

export function PurchaseFromJSONTyped(json: any, ignoreDiscriminator: boolean): Purchase {
    if (json == null) {
        return json;
    }
    return {
        
        'eventId': json['event_id'],
        'invoiceId': json['invoice_id'],
        'source': AccountAddressFromJSON(json['source']),
        'destination': AccountAddressFromJSON(json['destination']),
        'lt': json['lt'],
        'utime': json['utime'],
        'amount': PriceFromJSON(json['amount']),
        'metadata': MetadataFromJSON(json['metadata']),
    };
}

  export function PurchaseToJSON(json: any): Purchase {
      return PurchaseToJSONTyped(json, false);
  }

  export function PurchaseToJSONTyped(value?: Purchase | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'event_id': value['eventId'],
        'invoice_id': value['invoiceId'],
        'source': AccountAddressToJSON(value['source']),
        'destination': AccountAddressToJSON(value['destination']),
        'lt': value['lt'],
        'utime': value['utime'],
        'amount': PriceToJSON(value['amount']),
        'metadata': MetadataToJSON(value['metadata']),
    };
}

