/* tslint:disable */
/* eslint-disable */
/**
 * REST api to TON blockchain explorer
 * Provide access to indexed TON blockchain
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@tonkeeper.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { OracleBridgeParams } from './OracleBridgeParams';
import {
    OracleBridgeParamsFromJSON,
    OracleBridgeParamsFromJSONTyped,
    OracleBridgeParamsToJSON,
    OracleBridgeParamsToJSONTyped,
} from './OracleBridgeParams';

/**
 * Bridge parameters for wrapping TON in other networks.
 * @export
 * @interface BlockchainConfig71
 */
export interface BlockchainConfig71 {
    /**
     * 
     * @type {OracleBridgeParams}
     * @memberof BlockchainConfig71
     */
    oracleBridgeParams: OracleBridgeParams;
}

/**
 * Check if a given object implements the BlockchainConfig71 interface.
 */
export function instanceOfBlockchainConfig71(value: object): value is BlockchainConfig71 {
    if (!('oracleBridgeParams' in value) || value['oracleBridgeParams'] === undefined) return false;
    return true;
}

export function BlockchainConfig71FromJSON(json: any): BlockchainConfig71 {
    return BlockchainConfig71FromJSONTyped(json, false);
}

export function BlockchainConfig71FromJSONTyped(json: any, ignoreDiscriminator: boolean): BlockchainConfig71 {
    if (json == null) {
        return json;
    }
    return {
        
        'oracleBridgeParams': OracleBridgeParamsFromJSON(json['oracle_bridge_params']),
    };
}

  export function BlockchainConfig71ToJSON(json: any): BlockchainConfig71 {
      return BlockchainConfig71ToJSONTyped(json, false);
  }

  export function BlockchainConfig71ToJSONTyped(value?: BlockchainConfig71 | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'oracle_bridge_params': OracleBridgeParamsToJSON(value['oracleBridgeParams']),
    };
}

