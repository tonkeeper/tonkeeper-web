/* tslint:disable */
/* eslint-disable */
/**
 * REST api to TON blockchain explorer
 * Provide access to indexed TON blockchain
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@tonkeeper.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AccountAddress } from './AccountAddress';
import {
    AccountAddressFromJSON,
    AccountAddressFromJSONTyped,
    AccountAddressToJSON,
    AccountAddressToJSONTyped,
} from './AccountAddress';

/**
 * 
 * @export
 * @interface UnSubscriptionAction
 */
export interface UnSubscriptionAction {
    /**
     * 
     * @type {AccountAddress}
     * @memberof UnSubscriptionAction
     */
    subscriber: AccountAddress;
    /**
     * 
     * @type {string}
     * @memberof UnSubscriptionAction
     */
    subscription: string;
    /**
     * 
     * @type {AccountAddress}
     * @memberof UnSubscriptionAction
     */
    beneficiary: AccountAddress;
}

/**
 * Check if a given object implements the UnSubscriptionAction interface.
 */
export function instanceOfUnSubscriptionAction(value: object): value is UnSubscriptionAction {
    if (!('subscriber' in value) || value['subscriber'] === undefined) return false;
    if (!('subscription' in value) || value['subscription'] === undefined) return false;
    if (!('beneficiary' in value) || value['beneficiary'] === undefined) return false;
    return true;
}

export function UnSubscriptionActionFromJSON(json: any): UnSubscriptionAction {
    return UnSubscriptionActionFromJSONTyped(json, false);
}

export function UnSubscriptionActionFromJSONTyped(json: any, ignoreDiscriminator: boolean): UnSubscriptionAction {
    if (json == null) {
        return json;
    }
    return {
        
        'subscriber': AccountAddressFromJSON(json['subscriber']),
        'subscription': json['subscription'],
        'beneficiary': AccountAddressFromJSON(json['beneficiary']),
    };
}

  export function UnSubscriptionActionToJSON(json: any): UnSubscriptionAction {
      return UnSubscriptionActionToJSONTyped(json, false);
  }

  export function UnSubscriptionActionToJSONTyped(value?: UnSubscriptionAction | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'subscriber': AccountAddressToJSON(value['subscriber']),
        'subscription': value['subscription'],
        'beneficiary': AccountAddressToJSON(value['beneficiary']),
    };
}

