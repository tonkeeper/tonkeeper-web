/* tslint:disable */
/* eslint-disable */
/**
 * REST api to TON blockchain explorer
 * Provide access to indexed TON blockchain
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@tonkeeper.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { BlockRaw } from './BlockRaw';
import {
    BlockRawFromJSON,
    BlockRawFromJSONTyped,
    BlockRawToJSON,
    BlockRawToJSONTyped,
} from './BlockRaw';

/**
 * 
 * @export
 * @interface GetRawShardInfo200Response
 */
export interface GetRawShardInfo200Response {
    /**
     * 
     * @type {BlockRaw}
     * @memberof GetRawShardInfo200Response
     */
    id: BlockRaw;
    /**
     * 
     * @type {BlockRaw}
     * @memberof GetRawShardInfo200Response
     */
    shardblk: BlockRaw;
    /**
     * 
     * @type {string}
     * @memberof GetRawShardInfo200Response
     */
    shardProof: string;
    /**
     * 
     * @type {string}
     * @memberof GetRawShardInfo200Response
     */
    shardDescr: string;
}

/**
 * Check if a given object implements the GetRawShardInfo200Response interface.
 */
export function instanceOfGetRawShardInfo200Response(value: object): value is GetRawShardInfo200Response {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('shardblk' in value) || value['shardblk'] === undefined) return false;
    if (!('shardProof' in value) || value['shardProof'] === undefined) return false;
    if (!('shardDescr' in value) || value['shardDescr'] === undefined) return false;
    return true;
}

export function GetRawShardInfo200ResponseFromJSON(json: any): GetRawShardInfo200Response {
    return GetRawShardInfo200ResponseFromJSONTyped(json, false);
}

export function GetRawShardInfo200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetRawShardInfo200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'id': BlockRawFromJSON(json['id']),
        'shardblk': BlockRawFromJSON(json['shardblk']),
        'shardProof': json['shard_proof'],
        'shardDescr': json['shard_descr'],
    };
}

  export function GetRawShardInfo200ResponseToJSON(json: any): GetRawShardInfo200Response {
      return GetRawShardInfo200ResponseToJSONTyped(json, false);
  }

  export function GetRawShardInfo200ResponseToJSONTyped(value?: GetRawShardInfo200Response | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': BlockRawToJSON(value['id']),
        'shardblk': BlockRawToJSON(value['shardblk']),
        'shard_proof': value['shardProof'],
        'shard_descr': value['shardDescr'],
    };
}

