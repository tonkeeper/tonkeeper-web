/* tslint:disable */
/* eslint-disable */
/**
 * REST api to TON blockchain explorer
 * Provide access to indexed TON blockchain
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@tonkeeper.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Risk } from './Risk';
import {
    RiskFromJSON,
    RiskFromJSONTyped,
    RiskToJSON,
    RiskToJSONTyped,
} from './Risk';

/**
 * 
 * @export
 * @interface MultisigOrder
 */
export interface MultisigOrder {
    /**
     * 
     * @type {string}
     * @memberof MultisigOrder
     */
    address: string;
    /**
     * 
     * @type {number}
     * @memberof MultisigOrder
     */
    orderSeqno: number;
    /**
     * 
     * @type {number}
     * @memberof MultisigOrder
     */
    threshold: number;
    /**
     * 
     * @type {boolean}
     * @memberof MultisigOrder
     */
    sentForExecution: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof MultisigOrder
     */
    signers: Array<string>;
    /**
     * 
     * @type {number}
     * @memberof MultisigOrder
     */
    approvalsNum: number;
    /**
     * 
     * @type {number}
     * @memberof MultisigOrder
     */
    expirationDate: number;
    /**
     * 
     * @type {Risk}
     * @memberof MultisigOrder
     */
    risk: Risk;
    /**
     * 
     * @type {number}
     * @memberof MultisigOrder
     */
    creationDate: number;
    /**
     * 
     * @type {Array<string>}
     * @memberof MultisigOrder
     */
    signedBy: Array<string>;
}

/**
 * Check if a given object implements the MultisigOrder interface.
 */
export function instanceOfMultisigOrder(value: object): value is MultisigOrder {
    if (!('address' in value) || value['address'] === undefined) return false;
    if (!('orderSeqno' in value) || value['orderSeqno'] === undefined) return false;
    if (!('threshold' in value) || value['threshold'] === undefined) return false;
    if (!('sentForExecution' in value) || value['sentForExecution'] === undefined) return false;
    if (!('signers' in value) || value['signers'] === undefined) return false;
    if (!('approvalsNum' in value) || value['approvalsNum'] === undefined) return false;
    if (!('expirationDate' in value) || value['expirationDate'] === undefined) return false;
    if (!('risk' in value) || value['risk'] === undefined) return false;
    if (!('creationDate' in value) || value['creationDate'] === undefined) return false;
    if (!('signedBy' in value) || value['signedBy'] === undefined) return false;
    return true;
}

export function MultisigOrderFromJSON(json: any): MultisigOrder {
    return MultisigOrderFromJSONTyped(json, false);
}

export function MultisigOrderFromJSONTyped(json: any, ignoreDiscriminator: boolean): MultisigOrder {
    if (json == null) {
        return json;
    }
    return {
        
        'address': json['address'],
        'orderSeqno': json['order_seqno'],
        'threshold': json['threshold'],
        'sentForExecution': json['sent_for_execution'],
        'signers': json['signers'],
        'approvalsNum': json['approvals_num'],
        'expirationDate': json['expiration_date'],
        'risk': RiskFromJSON(json['risk']),
        'creationDate': json['creation_date'],
        'signedBy': json['signed_by'],
    };
}

export function MultisigOrderToJSON(json: any): MultisigOrder {
    return MultisigOrderToJSONTyped(json, false);
}

export function MultisigOrderToJSONTyped(value?: MultisigOrder | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'address': value['address'],
        'order_seqno': value['orderSeqno'],
        'threshold': value['threshold'],
        'sent_for_execution': value['sentForExecution'],
        'signers': value['signers'],
        'approvals_num': value['approvalsNum'],
        'expiration_date': value['expirationDate'],
        'risk': RiskToJSON(value['risk']),
        'creation_date': value['creationDate'],
        'signed_by': value['signedBy'],
    };
}

