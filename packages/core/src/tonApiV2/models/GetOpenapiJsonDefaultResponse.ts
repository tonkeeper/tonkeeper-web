/* tslint:disable */
/* eslint-disable */
/**
 * REST api to TON blockchain explorer
 * Provide access to indexed TON blockchain
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@tonkeeper.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GetOpenapiJsonDefaultResponse
 */
export interface GetOpenapiJsonDefaultResponse {
    /**
     * 
     * @type {string}
     * @memberof GetOpenapiJsonDefaultResponse
     */
    error: string;
    /**
     * 
     * @type {number}
     * @memberof GetOpenapiJsonDefaultResponse
     */
    errorCode?: number;
}

/**
 * Check if a given object implements the GetOpenapiJsonDefaultResponse interface.
 */
export function instanceOfGetOpenapiJsonDefaultResponse(value: object): value is GetOpenapiJsonDefaultResponse {
    if (!('error' in value) || value['error'] === undefined) return false;
    return true;
}

export function GetOpenapiJsonDefaultResponseFromJSON(json: any): GetOpenapiJsonDefaultResponse {
    return GetOpenapiJsonDefaultResponseFromJSONTyped(json, false);
}

export function GetOpenapiJsonDefaultResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetOpenapiJsonDefaultResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'error': json['error'],
        'errorCode': json['error_code'] == null ? undefined : json['error_code'],
    };
}

  export function GetOpenapiJsonDefaultResponseToJSON(json: any): GetOpenapiJsonDefaultResponse {
      return GetOpenapiJsonDefaultResponseToJSONTyped(json, false);
  }

  export function GetOpenapiJsonDefaultResponseToJSONTyped(value?: GetOpenapiJsonDefaultResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'error': value['error'],
        'error_code': value['errorCode'],
    };
}

