/* tslint:disable */
/* eslint-disable */
/**
 * REST api to TON blockchain explorer
 * Provide access to indexed TON blockchain
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@tonkeeper.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Subscription
 */
export interface Subscription {
    /**
     * 
     * @type {string}
     * @memberof Subscription
     */
    address: string;
    /**
     * 
     * @type {string}
     * @memberof Subscription
     */
    walletAddress: string;
    /**
     * 
     * @type {string}
     * @memberof Subscription
     */
    beneficiaryAddress: string;
    /**
     * 
     * @type {number}
     * @memberof Subscription
     */
    amount: number;
    /**
     * 
     * @type {number}
     * @memberof Subscription
     */
    period: number;
    /**
     * 
     * @type {number}
     * @memberof Subscription
     */
    startTime: number;
    /**
     * 
     * @type {number}
     * @memberof Subscription
     */
    timeout: number;
    /**
     * 
     * @type {number}
     * @memberof Subscription
     */
    lastPaymentTime: number;
    /**
     * 
     * @type {number}
     * @memberof Subscription
     */
    lastRequestTime: number;
    /**
     * 
     * @type {number}
     * @memberof Subscription
     */
    subscriptionId: number;
    /**
     * 
     * @type {number}
     * @memberof Subscription
     */
    failedAttempts: number;
}

/**
 * Check if a given object implements the Subscription interface.
 */
export function instanceOfSubscription(value: object): value is Subscription {
    if (!('address' in value) || value['address'] === undefined) return false;
    if (!('walletAddress' in value) || value['walletAddress'] === undefined) return false;
    if (!('beneficiaryAddress' in value) || value['beneficiaryAddress'] === undefined) return false;
    if (!('amount' in value) || value['amount'] === undefined) return false;
    if (!('period' in value) || value['period'] === undefined) return false;
    if (!('startTime' in value) || value['startTime'] === undefined) return false;
    if (!('timeout' in value) || value['timeout'] === undefined) return false;
    if (!('lastPaymentTime' in value) || value['lastPaymentTime'] === undefined) return false;
    if (!('lastRequestTime' in value) || value['lastRequestTime'] === undefined) return false;
    if (!('subscriptionId' in value) || value['subscriptionId'] === undefined) return false;
    if (!('failedAttempts' in value) || value['failedAttempts'] === undefined) return false;
    return true;
}

export function SubscriptionFromJSON(json: any): Subscription {
    return SubscriptionFromJSONTyped(json, false);
}

export function SubscriptionFromJSONTyped(json: any, ignoreDiscriminator: boolean): Subscription {
    if (json == null) {
        return json;
    }
    return {
        
        'address': json['address'],
        'walletAddress': json['wallet_address'],
        'beneficiaryAddress': json['beneficiary_address'],
        'amount': json['amount'],
        'period': json['period'],
        'startTime': json['start_time'],
        'timeout': json['timeout'],
        'lastPaymentTime': json['last_payment_time'],
        'lastRequestTime': json['last_request_time'],
        'subscriptionId': json['subscription_id'],
        'failedAttempts': json['failed_attempts'],
    };
}

export function SubscriptionToJSON(json: any): Subscription {
    return SubscriptionToJSONTyped(json, false);
}

export function SubscriptionToJSONTyped(value?: Subscription | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'address': value['address'],
        'wallet_address': value['walletAddress'],
        'beneficiary_address': value['beneficiaryAddress'],
        'amount': value['amount'],
        'period': value['period'],
        'start_time': value['startTime'],
        'timeout': value['timeout'],
        'last_payment_time': value['lastPaymentTime'],
        'last_request_time': value['lastRequestTime'],
        'subscription_id': value['subscriptionId'],
        'failed_attempts': value['failedAttempts'],
    };
}

