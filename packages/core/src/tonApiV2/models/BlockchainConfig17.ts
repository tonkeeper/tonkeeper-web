/* tslint:disable */
/* eslint-disable */
/**
 * REST api to TON blockchain explorer
 * Provide access to indexed TON blockchain
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@tonkeeper.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * The stake parameters configuration in the TON blockchain.
 * @export
 * @interface BlockchainConfig17
 */
export interface BlockchainConfig17 {
    /**
     * 
     * @type {string}
     * @memberof BlockchainConfig17
     */
    minStake: string;
    /**
     * 
     * @type {string}
     * @memberof BlockchainConfig17
     */
    maxStake: string;
    /**
     * 
     * @type {string}
     * @memberof BlockchainConfig17
     */
    minTotalStake: string;
    /**
     * 
     * @type {number}
     * @memberof BlockchainConfig17
     */
    maxStakeFactor: number;
}

/**
 * Check if a given object implements the BlockchainConfig17 interface.
 */
export function instanceOfBlockchainConfig17(value: object): value is BlockchainConfig17 {
    if (!('minStake' in value) || value['minStake'] === undefined) return false;
    if (!('maxStake' in value) || value['maxStake'] === undefined) return false;
    if (!('minTotalStake' in value) || value['minTotalStake'] === undefined) return false;
    if (!('maxStakeFactor' in value) || value['maxStakeFactor'] === undefined) return false;
    return true;
}

export function BlockchainConfig17FromJSON(json: any): BlockchainConfig17 {
    return BlockchainConfig17FromJSONTyped(json, false);
}

export function BlockchainConfig17FromJSONTyped(json: any, ignoreDiscriminator: boolean): BlockchainConfig17 {
    if (json == null) {
        return json;
    }
    return {
        
        'minStake': json['min_stake'],
        'maxStake': json['max_stake'],
        'minTotalStake': json['min_total_stake'],
        'maxStakeFactor': json['max_stake_factor'],
    };
}

  export function BlockchainConfig17ToJSON(json: any): BlockchainConfig17 {
      return BlockchainConfig17ToJSONTyped(json, false);
  }

  export function BlockchainConfig17ToJSONTyped(value?: BlockchainConfig17 | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'min_stake': value['minStake'],
        'max_stake': value['maxStake'],
        'min_total_stake': value['minTotalStake'],
        'max_stake_factor': value['maxStakeFactor'],
    };
}

