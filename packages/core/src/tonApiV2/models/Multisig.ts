/* tslint:disable */
/* eslint-disable */
/**
 * REST api to TON blockchain explorer
 * Provide access to indexed TON blockchain
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@tonkeeper.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MultisigOrder } from './MultisigOrder';
import {
    MultisigOrderFromJSON,
    MultisigOrderFromJSONTyped,
    MultisigOrderToJSON,
    MultisigOrderToJSONTyped,
} from './MultisigOrder';

/**
 * 
 * @export
 * @interface Multisig
 */
export interface Multisig {
    /**
     * 
     * @type {string}
     * @memberof Multisig
     */
    address: string;
    /**
     * 
     * @type {number}
     * @memberof Multisig
     */
    seqno: number;
    /**
     * 
     * @type {number}
     * @memberof Multisig
     */
    threshold: number;
    /**
     * 
     * @type {Array<string>}
     * @memberof Multisig
     */
    signers: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof Multisig
     */
    proposers: Array<string>;
    /**
     * 
     * @type {Array<MultisigOrder>}
     * @memberof Multisig
     */
    orders: Array<MultisigOrder>;
}

/**
 * Check if a given object implements the Multisig interface.
 */
export function instanceOfMultisig(value: object): value is Multisig {
    if (!('address' in value) || value['address'] === undefined) return false;
    if (!('seqno' in value) || value['seqno'] === undefined) return false;
    if (!('threshold' in value) || value['threshold'] === undefined) return false;
    if (!('signers' in value) || value['signers'] === undefined) return false;
    if (!('proposers' in value) || value['proposers'] === undefined) return false;
    if (!('orders' in value) || value['orders'] === undefined) return false;
    return true;
}

export function MultisigFromJSON(json: any): Multisig {
    return MultisigFromJSONTyped(json, false);
}

export function MultisigFromJSONTyped(json: any, ignoreDiscriminator: boolean): Multisig {
    if (json == null) {
        return json;
    }
    return {
        
        'address': json['address'],
        'seqno': json['seqno'],
        'threshold': json['threshold'],
        'signers': json['signers'],
        'proposers': json['proposers'],
        'orders': ((json['orders'] as Array<any>).map(MultisigOrderFromJSON)),
    };
}

  export function MultisigToJSON(json: any): Multisig {
      return MultisigToJSONTyped(json, false);
  }

  export function MultisigToJSONTyped(value?: Multisig | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'address': value['address'],
        'seqno': value['seqno'],
        'threshold': value['threshold'],
        'signers': value['signers'],
        'proposers': value['proposers'],
        'orders': ((value['orders'] as Array<any>).map(MultisigOrderToJSON)),
    };
}

