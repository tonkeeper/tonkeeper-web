/* tslint:disable */
/* eslint-disable */
/**
 * REST api to TON blockchain explorer
 * Provide access to indexed TON blockchain
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@tonkeeper.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  AccountPurchases,
  GetOpenapiJsonDefaultResponse,
} from '../models/index';
import {
    AccountPurchasesFromJSON,
    AccountPurchasesToJSON,
    GetOpenapiJsonDefaultResponseFromJSON,
    GetOpenapiJsonDefaultResponseToJSON,
} from '../models/index';

export interface GetPurchaseHistoryRequest {
    accountId: string;
    beforeLt?: number;
    limit?: number;
}

/**
 * PurchasesApi - interface
 * 
 * @export
 * @interface PurchasesApiInterface
 */
export interface PurchasesApiInterface {
    /**
     * Get history of purchases
     * @param {string} accountId account ID
     * @param {number} [beforeLt] omit this parameter to get last invoices
     * @param {number} [limit] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PurchasesApiInterface
     */
    getPurchaseHistoryRaw(requestParameters: GetPurchaseHistoryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AccountPurchases>>;

    /**
     * Get history of purchases
     */
    getPurchaseHistory(requestParameters: GetPurchaseHistoryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AccountPurchases>;

}

/**
 * 
 */
export class PurchasesApi extends runtime.BaseAPI implements PurchasesApiInterface {

    /**
     * Get history of purchases
     */
    async getPurchaseHistoryRaw(requestParameters: GetPurchaseHistoryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AccountPurchases>> {
        if (requestParameters['accountId'] == null) {
            throw new runtime.RequiredError(
                'accountId',
                'Required parameter "accountId" was null or undefined when calling getPurchaseHistory().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['beforeLt'] != null) {
            queryParameters['before_lt'] = requestParameters['beforeLt'];
        }

        if (requestParameters['limit'] != null) {
            queryParameters['limit'] = requestParameters['limit'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/v2/purchases/{account_id}/history`.replace(`{${"account_id"}}`, encodeURIComponent(String(requestParameters['accountId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => AccountPurchasesFromJSON(jsonValue));
    }

    /**
     * Get history of purchases
     */
    async getPurchaseHistory(requestParameters: GetPurchaseHistoryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AccountPurchases> {
        const response = await this.getPurchaseHistoryRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
