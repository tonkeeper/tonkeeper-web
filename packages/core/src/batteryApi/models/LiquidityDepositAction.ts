/* tslint:disable */
/* eslint-disable */
/**
 * Custodial-Battery REST API.
 * REST API for Custodial Battery which provides gas to different networks to help execute transactions.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@tonkeeper.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { VaultDepositInfo } from './VaultDepositInfo';
import {
    VaultDepositInfoFromJSON,
    VaultDepositInfoFromJSONTyped,
    VaultDepositInfoToJSON,
    VaultDepositInfoToJSONTyped,
} from './VaultDepositInfo';
import type { Protocol } from './Protocol';
import {
    ProtocolFromJSON,
    ProtocolFromJSONTyped,
    ProtocolToJSON,
    ProtocolToJSONTyped,
} from './Protocol';
import type { AccountAddress } from './AccountAddress';
import {
    AccountAddressFromJSON,
    AccountAddressFromJSONTyped,
    AccountAddressToJSON,
    AccountAddressToJSONTyped,
} from './AccountAddress';

/**
 * 
 * @export
 * @interface LiquidityDepositAction
 */
export interface LiquidityDepositAction {
    /**
     * 
     * @type {Protocol}
     * @memberof LiquidityDepositAction
     */
    protocol: Protocol;
    /**
     * 
     * @type {AccountAddress}
     * @memberof LiquidityDepositAction
     */
    from: AccountAddress;
    /**
     * 
     * @type {Array<VaultDepositInfo>}
     * @memberof LiquidityDepositAction
     */
    tokens: Array<VaultDepositInfo>;
}

/**
 * Check if a given object implements the LiquidityDepositAction interface.
 */
export function instanceOfLiquidityDepositAction(value: object): value is LiquidityDepositAction {
    if (!('protocol' in value) || value['protocol'] === undefined) return false;
    if (!('from' in value) || value['from'] === undefined) return false;
    if (!('tokens' in value) || value['tokens'] === undefined) return false;
    return true;
}

export function LiquidityDepositActionFromJSON(json: any): LiquidityDepositAction {
    return LiquidityDepositActionFromJSONTyped(json, false);
}

export function LiquidityDepositActionFromJSONTyped(json: any, ignoreDiscriminator: boolean): LiquidityDepositAction {
    if (json == null) {
        return json;
    }
    return {
        
        'protocol': ProtocolFromJSON(json['protocol']),
        'from': AccountAddressFromJSON(json['from']),
        'tokens': ((json['tokens'] as Array<any>).map(VaultDepositInfoFromJSON)),
    };
}

  export function LiquidityDepositActionToJSON(json: any): LiquidityDepositAction {
      return LiquidityDepositActionToJSONTyped(json, false);
  }

  export function LiquidityDepositActionToJSONTyped(value?: LiquidityDepositAction | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'protocol': ProtocolToJSON(value['protocol']),
        'from': AccountAddressToJSON(value['from']),
        'tokens': ((value['tokens'] as Array<any>).map(VaultDepositInfoToJSON)),
    };
}

