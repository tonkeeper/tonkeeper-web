/* tslint:disable */
/* eslint-disable */
/**
 * Custodial-Battery REST API.
 * REST API for Custodial Battery which provides gas to different networks to help execute transactions.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@tonkeeper.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TronTransactionsListTransactionsInner
 */
export interface TronTransactionsListTransactionsInner {
    /**
     * 
     * @type {string}
     * @memberof TronTransactionsListTransactionsInner
     */
    txid: string;
    /**
     * 
     * @type {string}
     * @memberof TronTransactionsListTransactionsInner
     */
    fromAccount: string;
    /**
     * 
     * @type {string}
     * @memberof TronTransactionsListTransactionsInner
     */
    toAccount: string;
    /**
     * 
     * @type {string}
     * @memberof TronTransactionsListTransactionsInner
     */
    amount: string;
    /**
     * 
     * @type {boolean}
     * @memberof TronTransactionsListTransactionsInner
     */
    isPending: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof TronTransactionsListTransactionsInner
     */
    isFailed: boolean;
    /**
     * 
     * @type {number}
     * @memberof TronTransactionsListTransactionsInner
     */
    batteryCharges: number;
    /**
     * 
     * @type {number}
     * @memberof TronTransactionsListTransactionsInner
     */
    timestamp: number;
}

/**
 * Check if a given object implements the TronTransactionsListTransactionsInner interface.
 */
export function instanceOfTronTransactionsListTransactionsInner(value: object): value is TronTransactionsListTransactionsInner {
    if (!('txid' in value) || value['txid'] === undefined) return false;
    if (!('fromAccount' in value) || value['fromAccount'] === undefined) return false;
    if (!('toAccount' in value) || value['toAccount'] === undefined) return false;
    if (!('amount' in value) || value['amount'] === undefined) return false;
    if (!('isPending' in value) || value['isPending'] === undefined) return false;
    if (!('isFailed' in value) || value['isFailed'] === undefined) return false;
    if (!('batteryCharges' in value) || value['batteryCharges'] === undefined) return false;
    if (!('timestamp' in value) || value['timestamp'] === undefined) return false;
    return true;
}

export function TronTransactionsListTransactionsInnerFromJSON(json: any): TronTransactionsListTransactionsInner {
    return TronTransactionsListTransactionsInnerFromJSONTyped(json, false);
}

export function TronTransactionsListTransactionsInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): TronTransactionsListTransactionsInner {
    if (json == null) {
        return json;
    }
    return {
        
        'txid': json['txid'],
        'fromAccount': json['from_account'],
        'toAccount': json['to_account'],
        'amount': json['amount'],
        'isPending': json['is_pending'],
        'isFailed': json['is_failed'],
        'batteryCharges': json['battery_charges'],
        'timestamp': json['timestamp'],
    };
}

  export function TronTransactionsListTransactionsInnerToJSON(json: any): TronTransactionsListTransactionsInner {
      return TronTransactionsListTransactionsInnerToJSONTyped(json, false);
  }

  export function TronTransactionsListTransactionsInnerToJSONTyped(value?: TronTransactionsListTransactionsInner | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'txid': value['txid'],
        'from_account': value['fromAccount'],
        'to_account': value['toAccount'],
        'amount': value['amount'],
        'is_pending': value['isPending'],
        'is_failed': value['isFailed'],
        'battery_charges': value['batteryCharges'],
        'timestamp': value['timestamp'],
    };
}

