/* tslint:disable */
/* eslint-disable */
/**
 * Custodial-Battery REST API.
 * REST API for Custodial Battery which provides gas to different networks to help execute transactions.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@tonkeeper.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface EstimatedTronTxInstantFeeAcceptedAssetsInner
 */
export interface EstimatedTronTxInstantFeeAcceptedAssetsInner {
    /**
     * 
     * @type {string}
     * @memberof EstimatedTronTxInstantFeeAcceptedAssetsInner
     */
    type: EstimatedTronTxInstantFeeAcceptedAssetsInnerTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof EstimatedTronTxInstantFeeAcceptedAssetsInner
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof EstimatedTronTxInstantFeeAcceptedAssetsInner
     */
    jettonMasterId?: string;
    /**
     * 
     * @type {string}
     * @memberof EstimatedTronTxInstantFeeAcceptedAssetsInner
     */
    amountNano: string;
    /**
     * 
     * @type {number}
     * @memberof EstimatedTronTxInstantFeeAcceptedAssetsInner
     */
    decimals: number;
}


/**
 * @export
 */
export const EstimatedTronTxInstantFeeAcceptedAssetsInnerTypeEnum = {
    Jetton: 'jetton',
    Ton: 'ton'
} as const;
export type EstimatedTronTxInstantFeeAcceptedAssetsInnerTypeEnum = typeof EstimatedTronTxInstantFeeAcceptedAssetsInnerTypeEnum[keyof typeof EstimatedTronTxInstantFeeAcceptedAssetsInnerTypeEnum];


/**
 * Check if a given object implements the EstimatedTronTxInstantFeeAcceptedAssetsInner interface.
 */
export function instanceOfEstimatedTronTxInstantFeeAcceptedAssetsInner(value: object): value is EstimatedTronTxInstantFeeAcceptedAssetsInner {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('amountNano' in value) || value['amountNano'] === undefined) return false;
    if (!('decimals' in value) || value['decimals'] === undefined) return false;
    return true;
}

export function EstimatedTronTxInstantFeeAcceptedAssetsInnerFromJSON(json: any): EstimatedTronTxInstantFeeAcceptedAssetsInner {
    return EstimatedTronTxInstantFeeAcceptedAssetsInnerFromJSONTyped(json, false);
}

export function EstimatedTronTxInstantFeeAcceptedAssetsInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): EstimatedTronTxInstantFeeAcceptedAssetsInner {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'name': json['name'],
        'jettonMasterId': json['jetton_master_id'] == null ? undefined : json['jetton_master_id'],
        'amountNano': json['amount_nano'],
        'decimals': json['decimals'],
    };
}

  export function EstimatedTronTxInstantFeeAcceptedAssetsInnerToJSON(json: any): EstimatedTronTxInstantFeeAcceptedAssetsInner {
      return EstimatedTronTxInstantFeeAcceptedAssetsInnerToJSONTyped(json, false);
  }

  export function EstimatedTronTxInstantFeeAcceptedAssetsInnerToJSONTyped(value?: EstimatedTronTxInstantFeeAcceptedAssetsInner | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'name': value['name'],
        'jetton_master_id': value['jettonMasterId'],
        'amount_nano': value['amountNano'],
        'decimals': value['decimals'],
    };
}

