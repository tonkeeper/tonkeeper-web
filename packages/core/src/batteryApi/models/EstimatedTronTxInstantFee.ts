/* tslint:disable */
/* eslint-disable */
/**
 * Custodial-Battery REST API.
 * REST API for Custodial Battery which provides gas to different networks to help execute transactions.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@tonkeeper.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EstimatedTronTxInstantFeeAcceptedAssetsInner } from './EstimatedTronTxInstantFeeAcceptedAssetsInner';
import {
    EstimatedTronTxInstantFeeAcceptedAssetsInnerFromJSON,
    EstimatedTronTxInstantFeeAcceptedAssetsInnerFromJSONTyped,
    EstimatedTronTxInstantFeeAcceptedAssetsInnerToJSON,
    EstimatedTronTxInstantFeeAcceptedAssetsInnerToJSONTyped,
} from './EstimatedTronTxInstantFeeAcceptedAssetsInner';

/**
 * 
 * @export
 * @interface EstimatedTronTxInstantFee
 */
export interface EstimatedTronTxInstantFee {
    /**
     * 
     * @type {string}
     * @memberof EstimatedTronTxInstantFee
     */
    feeAddress: string;
    /**
     * 
     * @type {Array<EstimatedTronTxInstantFeeAcceptedAssetsInner>}
     * @memberof EstimatedTronTxInstantFee
     */
    acceptedAssets: Array<EstimatedTronTxInstantFeeAcceptedAssetsInner>;
}

/**
 * Check if a given object implements the EstimatedTronTxInstantFee interface.
 */
export function instanceOfEstimatedTronTxInstantFee(value: object): value is EstimatedTronTxInstantFee {
    if (!('feeAddress' in value) || value['feeAddress'] === undefined) return false;
    if (!('acceptedAssets' in value) || value['acceptedAssets'] === undefined) return false;
    return true;
}

export function EstimatedTronTxInstantFeeFromJSON(json: any): EstimatedTronTxInstantFee {
    return EstimatedTronTxInstantFeeFromJSONTyped(json, false);
}

export function EstimatedTronTxInstantFeeFromJSONTyped(json: any, ignoreDiscriminator: boolean): EstimatedTronTxInstantFee {
    if (json == null) {
        return json;
    }
    return {
        
        'feeAddress': json['fee_address'],
        'acceptedAssets': ((json['accepted_assets'] as Array<any>).map(EstimatedTronTxInstantFeeAcceptedAssetsInnerFromJSON)),
    };
}

  export function EstimatedTronTxInstantFeeToJSON(json: any): EstimatedTronTxInstantFee {
      return EstimatedTronTxInstantFeeToJSONTyped(json, false);
  }

  export function EstimatedTronTxInstantFeeToJSONTyped(value?: EstimatedTronTxInstantFee | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'fee_address': value['feeAddress'],
        'accepted_assets': ((value['acceptedAssets'] as Array<any>).map(EstimatedTronTxInstantFeeAcceptedAssetsInnerToJSON)),
    };
}

