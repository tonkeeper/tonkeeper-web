/* tslint:disable */
/* eslint-disable */
/**
 * Custodial-Battery REST API.
 * REST API for Custodial Battery which provides gas to different networks to help execute transactions.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@tonkeeper.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TronAvailableTransfers
 */
export interface TronAvailableTransfers {
    /**
     * Number of available free TRON transfers
     * @type {number}
     * @memberof TronAvailableTransfers
     */
    availableTransfers: number;
    /**
     * Availability type. 'inactive' if source is telegram.
     * @type {string}
     * @memberof TronAvailableTransfers
     */
    type: string;
    /**
     * Unix timestamp of next free transfers reset date (either next month after last reset or next charge date, whichever is closer)
     * @type {number}
     * @memberof TronAvailableTransfers
     */
    nextResetDate?: number;
}

/**
 * Check if a given object implements the TronAvailableTransfers interface.
 */
export function instanceOfTronAvailableTransfers(value: object): value is TronAvailableTransfers {
    if (!('availableTransfers' in value) || value['availableTransfers'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function TronAvailableTransfersFromJSON(json: any): TronAvailableTransfers {
    return TronAvailableTransfersFromJSONTyped(json, false);
}

export function TronAvailableTransfersFromJSONTyped(
    json: any,
    ignoreDiscriminator: boolean
): TronAvailableTransfers {
    if (json == null) {
        return json;
    }
    return {
        
        'availableTransfers': json['available_transfers'],
        'type': json['type'],
        'nextResetDate': json['next_reset_date'] == null ? undefined : json['next_reset_date'],
    };
}

export function TronAvailableTransfersToJSON(json: any): TronAvailableTransfers {
    return TronAvailableTransfersToJSONTyped(json, false);
}

export function TronAvailableTransfersToJSONTyped(
    value?: TronAvailableTransfers | null,
    ignoreDiscriminator: boolean = false
): any {
    if (value == null) {
        return value;
    }

    return {
        
        'available_transfers': value['availableTransfers'],
        'type': value['type'],
        'next_reset_date': value['nextResetDate'],
    };
}
