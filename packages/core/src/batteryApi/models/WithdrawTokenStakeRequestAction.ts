/* tslint:disable */
/* eslint-disable */
/**
 * Custodial-Battery REST API.
 * REST API for Custodial Battery which provides gas to different networks to help execute transactions.
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: support@tonkeeper.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Price } from './Price';
import {
    PriceFromJSON,
    PriceFromJSONTyped,
    PriceToJSON,
    PriceToJSONTyped,
} from './Price';
import type { Protocol } from './Protocol';
import {
    ProtocolFromJSON,
    ProtocolFromJSONTyped,
    ProtocolToJSON,
    ProtocolToJSONTyped,
} from './Protocol';
import type { AccountAddress } from './AccountAddress';
import {
    AccountAddressFromJSON,
    AccountAddressFromJSONTyped,
    AccountAddressToJSON,
    AccountAddressToJSONTyped,
} from './AccountAddress';

/**
 * 
 * @export
 * @interface WithdrawTokenStakeRequestAction
 */
export interface WithdrawTokenStakeRequestAction {
    /**
     * 
     * @type {AccountAddress}
     * @memberof WithdrawTokenStakeRequestAction
     */
    staker: AccountAddress;
    /**
     * 
     * @type {Protocol}
     * @memberof WithdrawTokenStakeRequestAction
     */
    protocol: Protocol;
    /**
     * 
     * @type {Price}
     * @memberof WithdrawTokenStakeRequestAction
     */
    stakeMeta?: Price;
}

/**
 * Check if a given object implements the WithdrawTokenStakeRequestAction interface.
 */
export function instanceOfWithdrawTokenStakeRequestAction(value: object): value is WithdrawTokenStakeRequestAction {
    if (!('staker' in value) || value['staker'] === undefined) return false;
    if (!('protocol' in value) || value['protocol'] === undefined) return false;
    return true;
}

export function WithdrawTokenStakeRequestActionFromJSON(json: any): WithdrawTokenStakeRequestAction {
    return WithdrawTokenStakeRequestActionFromJSONTyped(json, false);
}

export function WithdrawTokenStakeRequestActionFromJSONTyped(json: any, ignoreDiscriminator: boolean): WithdrawTokenStakeRequestAction {
    if (json == null) {
        return json;
    }
    return {
        
        'staker': AccountAddressFromJSON(json['staker']),
        'protocol': ProtocolFromJSON(json['protocol']),
        'stakeMeta': json['stake_meta'] == null ? undefined : PriceFromJSON(json['stake_meta']),
    };
}

  export function WithdrawTokenStakeRequestActionToJSON(json: any): WithdrawTokenStakeRequestAction {
      return WithdrawTokenStakeRequestActionToJSONTyped(json, false);
  }

  export function WithdrawTokenStakeRequestActionToJSONTyped(value?: WithdrawTokenStakeRequestAction | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'staker': AccountAddressToJSON(value['staker']),
        'protocol': ProtocolToJSON(value['protocol']),
        'stake_meta': PriceToJSON(value['stakeMeta']),
    };
}

