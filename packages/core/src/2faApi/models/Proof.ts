/* tslint:disable */
/* eslint-disable */
/**
 * REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: contact@tonaps.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Proof
 */
export interface Proof {
    /**
     * 
     * @type {number}
     * @memberof Proof
     */
    timestamp: number;
    /**
     * 
     * @type {string}
     * @memberof Proof
     */
    domain: string;
    /**
     * 
     * @type {string}
     * @memberof Proof
     */
    signature: string;
    /**
     * 
     * @type {string}
     * @memberof Proof
     */
    payload: string;
    /**
     * 
     * @type {string}
     * @memberof Proof
     */
    stateInit: string;
}

/**
 * Check if a given object implements the Proof interface.
 */
export function instanceOfProof(value: object): value is Proof {
    if (!('timestamp' in value) || value['timestamp'] === undefined) return false;
    if (!('domain' in value) || value['domain'] === undefined) return false;
    if (!('signature' in value) || value['signature'] === undefined) return false;
    if (!('payload' in value) || value['payload'] === undefined) return false;
    if (!('stateInit' in value) || value['stateInit'] === undefined) return false;
    return true;
}

export function ProofFromJSON(json: any): Proof {
    return ProofFromJSONTyped(json, false);
}

export function ProofFromJSONTyped(json: any, ignoreDiscriminator: boolean): Proof {
    if (json == null) {
        return json;
    }
    return {
        
        'timestamp': json['timestamp'],
        'domain': json['domain'],
        'signature': json['signature'],
        'payload': json['payload'],
        'stateInit': json['state_init'],
    };
}

  export function ProofToJSON(json: any): Proof {
      return ProofToJSONTyped(json, false);
  }

  export function ProofToJSONTyped(value?: Proof | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'timestamp': value['timestamp'],
        'domain': value['domain'],
        'signature': value['signature'],
        'payload': value['payload'],
        'state_init': value['stateInit'],
    };
}

