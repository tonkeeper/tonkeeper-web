/* tslint:disable */
/* eslint-disable */
/**
 * REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: contact@tonaps.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ErrorCode } from './ErrorCode';
import {
    ErrorCodeFromJSON,
    ErrorCodeFromJSONTyped,
    ErrorCodeToJSON,
    ErrorCodeToJSONTyped,
} from './ErrorCode';

/**
 * 
 * @export
 * @interface PingReadyGet500Response
 */
export interface PingReadyGet500Response {
    /**
     * Error message
     * @type {string}
     * @memberof PingReadyGet500Response
     */
    error: string;
    /**
     * 
     * @type {ErrorCode}
     * @memberof PingReadyGet500Response
     */
    code: ErrorCode;
}



/**
 * Check if a given object implements the PingReadyGet500Response interface.
 */
export function instanceOfPingReadyGet500Response(value: object): value is PingReadyGet500Response {
    if (!('error' in value) || value['error'] === undefined) return false;
    if (!('code' in value) || value['code'] === undefined) return false;
    return true;
}

export function PingReadyGet500ResponseFromJSON(json: any): PingReadyGet500Response {
    return PingReadyGet500ResponseFromJSONTyped(json, false);
}

export function PingReadyGet500ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PingReadyGet500Response {
    if (json == null) {
        return json;
    }
    return {
        
        'error': json['error'],
        'code': ErrorCodeFromJSON(json['code']),
    };
}

  export function PingReadyGet500ResponseToJSON(json: any): PingReadyGet500Response {
      return PingReadyGet500ResponseToJSONTyped(json, false);
  }

  export function PingReadyGet500ResponseToJSONTyped(value?: PingReadyGet500Response | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'error': value['error'],
        'code': ErrorCodeToJSON(value['code']),
    };
}

