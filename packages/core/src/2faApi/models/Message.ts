/* tslint:disable */
/* eslint-disable */
/**
 * REST API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: contact@tonaps.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MessageState } from './MessageState';
import {
    MessageStateFromJSON,
    MessageStateFromJSONTyped,
    MessageStateToJSON,
    MessageStateToJSONTyped,
} from './MessageState';

/**
 * 
 * @export
 * @interface Message
 */
export interface Message {
    /**
     * 
     * @type {string}
     * @memberof Message
     */
    id: string;
    /**
     * 
     * @type {MessageState}
     * @memberof Message
     */
    state: MessageState;
    /**
     * 
     * @type {string}
     * @memberof Message
     */
    extMsg?: string;
    /**
     * 
     * @type {number}
     * @memberof Message
     */
    dateCreate: number;
}



/**
 * Check if a given object implements the Message interface.
 */
export function instanceOfMessage(value: object): value is Message {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('state' in value) || value['state'] === undefined) return false;
    if (!('dateCreate' in value) || value['dateCreate'] === undefined) return false;
    return true;
}

export function MessageFromJSON(json: any): Message {
    return MessageFromJSONTyped(json, false);
}

export function MessageFromJSONTyped(json: any, ignoreDiscriminator: boolean): Message {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'state': MessageStateFromJSON(json['state']),
        'extMsg': json['ext_msg'] == null ? undefined : json['ext_msg'],
        'dateCreate': json['date_create'],
    };
}

  export function MessageToJSON(json: any): Message {
      return MessageToJSONTyped(json, false);
  }

  export function MessageToJSONTyped(value?: Message | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'state': MessageStateToJSON(value['state']),
        'ext_msg': value['extMsg'],
        'date_create': value['dateCreate'],
    };
}

