openapi: 3.0.2
info:
  title: Custodial-Battery REST API.
  version: 0.0.1
  description: REST API for Custodial Battery which provides gas to different networks to help execute transactions.
  contact:
    name: Support
    email: support@tonkeeper.com
servers:
  - url: "https://battery.tonkeeper.com"
  - url: "https://testnet-battery.tonkeeper.com"
paths:
  /tonconnect/payload:
    get:
      description: Get a payload for further token receipt
      operationId: getTonConnectPayload
      tags:
        - Connect
      responses:
        '200':
          description: payload
          content:
            application/json:
              schema:
                type: object
                required:
                  - payload
                properties:
                  payload:
                    type: string
                    example: "84jHVNLQmZsAAAAAZB0Zryi2wqVJI-KaKNXOvCijEi46YyYzkaSHyJrMPBMOkVZa"
        'default':
          $ref: '#/components/responses/Error'
  /tonconnect/proof:
    post:
      description: Account verification and token issuance
      operationId: tonConnectProof
      tags:
        - Wallet
      requestBody:
        $ref: "#/components/requestBodies/TonConnectProof"
      responses:
        '200':
          description: auth token
          content:
            application/json:
              schema:
                type: object
                required:
                  - token
                properties:
                  token:
                    type: string
                    example: "NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODQ3..."
        'default':
          $ref: '#/components/responses/Error'
  /status:
    get:
      description: This method returns information about the current status of Battery Service.
      operationId: getStatus
      parameters:
        - $ref: '#/components/parameters/token'
      responses:
        '200':
          description: TBD
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        'default':
          $ref: '#/components/responses/Error'
  /config:
    get:
      description: This method returns information about Battery Service.
      operationId: getConfig
      responses:
        '200':
          description: TBD
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Config'
        'default':
          $ref: '#/components/responses/Error'
  /promo-used:
    get:
      operationId: getPromoUsed
      parameters:
        - name: promo
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: TBD
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromoUsed'
        'default':
          $ref: '#/components/responses/Error'
  /battery-charged:
    get:
      description: This method returns information about a user's balance.
      operationId: getBatteryCharged
      parameters:
        - name: account_id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: TBD
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatteryCharged'
        'default':
          $ref: '#/components/responses/Error'
  /balance:
    get:
      description: This method returns information about a user's balance.
      operationId: getBalance
      parameters:
        - $ref: '#/components/parameters/token'
        - $ref: '#/components/parameters/balanceUnits'
      responses:
        '200':
          description: TBD
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Balance'
        'default':
          $ref: '#/components/responses/Error'
  /wallet/emulate:
    post:
      description: Emulate sending message to blockchain
      operationId: emulateMessageToWallet
      tags:
        - Emulation
      parameters:
        - $ref: '#/components/parameters/i18n'
        - $ref: '#/components/parameters/token'
      requestBody:
        $ref: "#/components/requestBodies/Boc"
      responses:
        '200':
          description: emulated message
          headers:
            Allowed-By-Battery:
              required: true
              schema:
                type: boolean
                example: "true"
            Supported-By-Battery:
              required: true
              schema:
                type: boolean
                example: "true"
            Reject-Reason:
              schema:
                type: string
                example: "message is too large"
          content:
            application/json:
              schema:
                additionalProperties: true
                example: { }
        'default':
          $ref: '#/components/responses/Error'
  /message:
    post:
      description: Send message to blockchain
      operationId: sendMessage
      parameters:
        - $ref: '#/components/parameters/token'
      requestBody:
        $ref: "#/components/requestBodies/Boc"
      responses:
        '200':
          description: "success"
        'default':
          $ref: '#/components/responses/Error'
  /v0/tron/config:
    get:
      operationId: getTronConfig
      responses:
        '200':
          description: TBD
          content:
            application/json:
              schema:
                type: object
                required:
                  - safety_margin_percent
                properties:
                  safety_margin_percent:
                    type: string
                    example: "1.5"
        'default':
          $ref: '#/components/responses/Error'
  /v0/tron/estimate:
    get:
      description: Estimate cost of sending a tx in Tron network
      operationId: tronEstimate
      parameters:
        - name: energy
          in: query
          required: false
          schema:
            type: integer
            maximum: 1000000
        - name: bandwidth
          in: query
          required: false
          schema:
            type: integer
            maximum: 10000
        - name: wallet
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: TBD
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EstimatedTronTx'
        'default':
          $ref: '#/components/responses/Error'
  /v0/tron/send:
    post:
      description: send TRON tx
      operationId: tronSend
      parameters:
        - $ref: '#/components/parameters/token'
      requestBody:
        $ref: "#/components/requestBodies/TronTx"
      responses:
        '200':
          description: TBD
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SentTronTx'
        'default':
          $ref: '#/components/responses/Error'
  /v0/tron/transactions:
    get:
      operationId: getTronTransactions
      parameters:
        - $ref: '#/components/parameters/token'
        - $ref: '#/components/parameters/limitQuery'
        - $ref: '#/components/parameters/maxTimestamp'
      responses:
        '200':
          description: TBD
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TronTransactionsList'
        'default':
          $ref: '#/components/responses/Error'
  /purchase-battery/android:
    post:
      description: verify an in-app purchase
      operationId: androidBatteryPurchase
      parameters:
        - $ref: '#/components/parameters/token'
      requestBody:
        $ref: "#/components/requestBodies/AndroidBatteryPurchase"
      responses:
        '200':
          description: TBD
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AndroidBatteryPurchaseStatus'
        'default':
          $ref: '#/components/responses/Error'
  /purchase-battery/ios/app-store-notification:
    post:
      operationId: appStoreNotification
      requestBody:
        $ref: "#/components/requestBodies/appStoreNotification"
      responses:
        '200':
          description: TBD
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/appStoreResponse'
        'default':
          $ref: '#/components/responses/Error'
  /purchase-battery/ios:
    post:
      description: verify an in-app purchase
      operationId: iosBatteryPurchase
      parameters:
        - $ref: '#/components/parameters/token'
      requestBody:
        $ref: "#/components/requestBodies/iOSBatteryPurchase"
      responses:
        '200':
          description: TBD
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/iOSBatteryPurchaseStatus'
        'default':
          $ref: '#/components/responses/Error'
  /purchase-battery/promo-code:
    post:
      description: charge battery with promo code
      operationId: promoCodeBatteryPurchase
      parameters:
        - $ref: '#/components/parameters/i18n'
        - $ref: '#/components/parameters/token'
      requestBody:
        $ref: "#/components/requestBodies/promoCodeBatteryPurchase"
      responses:
        '200':
          description: TBD
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/promoCodeBatteryPurchaseStatus'
        'default':
          $ref: '#/components/responses/Error'
  /purchase-battery/verify-purchase-promo:
    get:
      operationId: verifyPurchasePromo
      parameters:
        - name: promo
          in: query
          schema:
            type: string
            maxLength: 100
      responses:
        '200':
          description: "all good"
          content:
            application/json:
              schema:
                additionalProperties: true
                example: { }
        'default':
          $ref: '#/components/responses/Error'
  /recharge-methods:
    get:
      description: This method returns on-chain recharge methods.
      operationId: getRechargeMethods
      parameters:
        - name: include_recharge_only
          in: query
          schema:
            type: boolean
            default: true
      responses:
        '200':
          description: TBD
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RechargeMethods'
        'default':
          $ref: '#/components/responses/Error'
  /request-refund:
    post:
      operationId: requestRefund
      parameters:
        - $ref: '#/components/parameters/token'
      requestBody:
        $ref: "#/components/requestBodies/requestRefund"
      responses:
        '200':
          description: success
        'default':
          $ref: '#/components/responses/Error'
  /purchases:
    get:
      description: This method returns a list of purchases made by a specific user.
      operationId: getPurchases
      parameters:
        - $ref: '#/components/parameters/token'
        - $ref: '#/components/parameters/limitQuery'
        - $ref: '#/components/parameters/offsetQuery'
        - name: include_gifts_on_the_way
          in: query
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: TBD
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Purchases'
        'default':
          $ref: '#/components/responses/Error'
  /transactions:
    get:
      description: This method returns a list of transactions made by a specific user.
      operationId: getTransactions
      parameters:
        - $ref: '#/components/parameters/token'
        - $ref: '#/components/parameters/limitQuery'
        - $ref: '#/components/parameters/offsetQuery'
      responses:
        '200':
          description: TBD
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transactions'
        'default':
          $ref: '#/components/responses/Error'
  /gasless/estimate-cost/{jetton_master}:
    post:
      operationId: estimateGaslessCost
      parameters:
        - $ref: '#/components/parameters/jettonMasterParameter'
        - $ref: '#/components/parameters/optionalToken'
        - name: wallet_address
          in: query
          schema:
            type: string
          required: false
        - name: wallet_public_key
          in: query
          schema:
            type: string
          required: false
      requestBody:
        $ref: "#/components/requestBodies/gaslessEstimateCost"
      responses:
        '200':
          description: TBD
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GaslessEstimation'
        'default':
          $ref: '#/components/responses/Error'
  /restricted/promo-campaign:
    post:
      operationId: createPromoCampaign
      parameters:
        - $ref: '#/components/parameters/adminToken'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - participants
                - name
              properties:
                name:
                  type: string
                participants:
                  type: array
                  items:
                    type: object
                    required:
                      - address
                      - amount
                    properties:
                      address:
                        type: string
                      amount:
                        type: string
                        description: amount in TON
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                required:
                  - participants
                properties:
                  participants:
                    type: array
                    items:
                      type: object
                      required:
                        - address
                      properties:
                        address:
                          type: string
                        balance_increased:
                          type: string
                        error:
                          type: string
        'default':
          $ref: '#/components/responses/Error'
  /restricted/apply-promo:
    post:
      operationId: applyPromo
      parameters:
        - $ref: '#/components/parameters/adminToken'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - promo_code
                - public_key
              properties:
                public_key:
                  type: string
                promo_code:
                  type: string
                  example: "1234567890"
      responses:
        '200':
          description: TBD
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/promoCodeBatteryPurchaseStatus'
        'default':
          $ref: '#/components/responses/Error'
  /restricted/create-custom-refund:
    post:
      operationId: createCustomRefund
      parameters:
        - $ref: '#/components/parameters/adminToken'
      requestBody:
        $ref: "#/components/requestBodies/customRefund"
      responses:
        '200':
          description: "all good"
          content:
            application/json:
              schema:
                additionalProperties: true
                example: { }
        'default':
          $ref: '#/components/responses/Error'
  /restricted/users/{user_id}/reset-balance:
    post:
      operationId: resetUserBalance
      parameters:
        - $ref: '#/components/parameters/adminToken'
        - name: user_id
          in: path
          schema:
            type: integer
            format: int64
          required: true
      requestBody:
        $ref: "#/components/requestBodies/resetUserBalance"
      responses:
        '200':
          description: "all good"
          content:
            application/json:
              schema:
                additionalProperties: true
                example: { }
        'default':
          $ref: '#/components/responses/Error'
  /restricted/purchases/{purchase_id}/extend-refund-period:
    post:
      operationId: extendRefundPeriod
      parameters:
        - $ref: '#/components/parameters/adminToken'
        - name: purchase_id
          in: path
          schema:
            type: integer
            format: int64
          required: true
      responses:
        '200':
          description: "all good"
          content:
            application/json:
              schema:
                additionalProperties: true
                example: { }
        'default':
          $ref: '#/components/responses/Error'
  /jetton-metadata/{name}.json:
    get:
      operationId: getJettonMetadata
      tags:
        - Emulation
      parameters:
        - name: name
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                additionalProperties: true
                example: { }
        'default':
          $ref: '#/components/responses/Error'
  /enterprise/wallets/{wallet_id}/config:
    get:
      operationId: enterpriseGetWalletConfig
      parameters:
        - $ref: '#/components/parameters/enterpriseAccessToken'
        - name: wallet_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: TBD
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnterpriseWalletConfig'
        'default':
          $ref: '#/components/responses/Error'
  /enterprise/wallets/{wallet_id}/estimate:
    post:
      operationId: enterpriseEstimate
      parameters:
        - $ref: '#/components/parameters/enterpriseAccessToken'
        - name: wallet_id
          in: path
          schema:
            type: string
          required: true
      requestBody:
        $ref: "#/components/requestBodies/EnterpriseSendingBoc"
      responses:
        '200':
          description: TBD
          content:
            application/json:
              schema:
                type: object
                required:
                  - estimated_upfront_payment
                properties:
                  estimated_upfront_payment:
                    type: string
        'default':
          $ref: '#/components/responses/Error'
  /enterprise/wallets/{wallet_id}/send:
    post:
      operationId: enterpriseSend
      parameters:
        - $ref: '#/components/parameters/enterpriseAccessToken'
        - name: wallet_id
          in: path
          schema:
            type: string
          required: true
      requestBody:
        $ref: "#/components/requestBodies/EnterpriseSendingBoc"
      responses:
        '200':
          description: "success"
          content:
            application/json:
              schema:
                type: object
                required:
                  - msg_id
                properties:
                  msg_id:
                    type: string
        'default':
          $ref: '#/components/responses/Error'
  /enterprise/messages/{msg_id}:
    get:
      operationId: enterpriseGetMessage
      parameters:
        - $ref: '#/components/parameters/enterpriseAccessToken'
        - name: msg_id
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: "success"
          content:
            application/json:
              schema:
                type: object
                required:
                  - status
                properties:
                  payment_tx_hash:
                    type: string
                  committed_tx_hash:
                    type: string
                  status:
                    type: string
                    enum:
                      - pending
                      - completed
                      - failed
                  final_cost:
                    type: string
                  failed_reason:
                    type: string
        'default':
          $ref: '#/components/responses/Error'
  /enterprise/status:
    get:
      operationId: enterpriseGetStatus
      parameters:
        - $ref: '#/components/parameters/enterpriseAccessToken'
      responses:
        '200':
          description: "success"
          content:
            application/json:
              schema:
                type: object
                required:
                  - balance
                  - wallet
                properties:
                  balance:
                    type: string
                  wallet:
                    type: string
        'default':
          $ref: '#/components/responses/Error'
components:
  parameters:
    enterpriseAccessToken:
      in: header
      name: X-Enterprise-Auth
      schema:
        type: string
        example: NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODQ3...
      required: true
    token:
      in: header
      name: X-TonConnect-Auth
      schema:
        type: string
        example: NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODQ3...
      required: true
    optionalToken:
      in: header
      name: X-TonConnect-Auth
      schema:
        type: string
        example: NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODQ3...
      required: false
    adminToken:
      in: query
      name: token
      schema:
        type: string
      required: true
    jettonMasterParameter:
      in: path
      name: jetton_master
      required: true
      schema:
        type: string
    purchaseId:
      in: query
      name: id
      required: true
      schema:
        type: integer
    limitQuery:
      in: query
      name: limit
      required: false
      schema:
        type: integer
        default: 1000
        maximum: 1000
    offsetQuery:
      in: query
      name: offset
      required: false
      schema:
        type: integer
        default: 0
    maxTimestamp:
      in: query
      name: max_timestamp
      required: false
      schema:
        type: integer
        format: int64
    i18n:
      in: header
      name: Accept-Language
      required: false
      schema:
        type: string
        example: "ru-RU,ru;q=0.5"
        default: "en"
    balanceUnits:
      in: query
      name: units
      schema:
        type: string
        default: "usd"
        enum:
          - usd
          - ton
  requestBodies:
    TonConnectProof:
      description: "Data that is expected from TON Connect"
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - address
              - proof
            properties:
              address:
                type: string
                example: "0:97146a46acc2654y27947f14c4a4b14273e954f78bc017790b41208b0043200b"
              proof:
                type: object
                required:
                  - timestamp
                  - domain
                  - signature
                  - payload
                properties:
                  timestamp:
                    type: integer
                    format: int64
                    example: "1678275313"
                  domain:
                    type: object
                    required:
                      - value
                    properties:
                      length_bytes:
                        type: integer
                        format: int32
                      value:
                        type: string
                  signature:
                    type: string
                  payload:
                    type: string
                    example: "84jHVNLQmZsAAAAAZB0Zryi2wqVJI-KaKNXOvCijEi46YyYzkaSHyJrMPBMOkVZa"
                  state_init:
                    type: string
    EnterpriseSendingBoc:
      description: bag-of-cells serialized to base64
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - boc
              - wallet_public_key
            properties:
              boc:
                type: string
                example: te6ccgECBQEAARUAAkWIAWTtae+KgtbrX26Bep8JSq8lFLfGOoyGR/xwdjfvpvEaHg
              wallet_public_key:
                type: string

    TronTx:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - tx
              - wallet
            properties:
              tx:
                type: string
              energy:
                type: integer
              bandwidth:
                type: integer
              wallet:
                type: string
    Boc:
      description: bag-of-cells serialized to base64
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - boc
            properties:
              boc:
                type: string
                example: te6ccgECBQEAARUAAkWIAWTtae+KgtbrX26Bep8JSq8lFLfGOoyGR/xwdjfvpvEaHg

    AndroidBatteryPurchase:
      description: In-App purchase
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - purchases
            properties:
              purchases:
                type: array
                items:
                  type: object
                  required:
                    - token
                    - product_id
                  properties:
                    token:
                      type: string
                      example: 0:2cf3b5b8c891e517c9addbda1c0386a09ccacbb0e3faf630b51cfc8152325acb
                    product_id:
                      type: string
                      example: 0:2cf3b5b8c891e517c9addbda1c0386a09ccacbb0e3faf630b51cfc8152325acb
                    promo:
                      type: string
                      example: "HAMSTER"

    appStoreNotification:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - signedPayload
            properties:
              signedPayload:
                type: string
    iOSBatteryPurchase:
      description: In-App purchase
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - transactions
            properties:
              transactions:
                type: array
                items:
                  type: object
                  required:
                    - id
                  properties:
                    id:
                      type: string
                    promo:
                      type: string
                      example: "HAMSTER"
    gaslessEstimateCost:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - payload
            properties:
              battery:
                type: boolean
                default: true
              payload:
                type: string

    resetUserBalance:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - reason
            properties:
              reason:
                type: string
    customRefund:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - amount
              - currency
              - comment
              - reason
              - destination
            properties:
              relayer_event_id:
                type: integer
              amount:
                type: string
                example: "10.250"
              currency:
                type: string
              comment:
                type: string
              reason:
                type: string
              destination:
                type: string

    requestRefund:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              user_purchase_id:
                type: integer
                deprecated: true
                example: 43
              purchase_id:
                type: integer
                example: 43
    promoCodeBatteryPurchase:
      description: charge battery with promo code
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - promo_code
            properties:
              promo_code:
                type: string
                example: "1234567890"
  schemas:
    Error:
      type: object
      required:
        - error
      properties:
        error:
          type: string
          example: error description
    Status:
      type: object
      required:
        - pending_transactions
      properties:
        pending_transactions:
          type: array
          items:
            type: object
            required:
              - id
            properties:
              id:
                type: string
    EnterpriseWalletConfig:
      type: object
      required:
        - excess_account
      properties:
        excess_account:
          type: string
          description: when building a message to transfer an NFT or Jetton, use this address to send excess funds back to Battery Service.
          example: 0:da6b1b6663a0e4d18cc8574ccd9db5296e367dd9324706f3bbd9eb1cd2caf0bf

    RelayerSendingEstimation:
      type: object
      required:
        - commission
      properties:
        commission:
          type: string
    Config:
      type: object
      required:
        - excess_account
        - fund_receiver
        - message_ttl
        - charge_cost
        - gas_proxy
      properties:
        charge_cost:
          description: "cost of 1 charge in TON"
          type: string
          example: "0.0026"
        fund_receiver:
          type: string
          description: "with zero balance it is possible to transfer some jettons (stablecoins, jusdt, etc) to this address to refill the balance. Such transfers would be paid by Battery Service."
          example: 0:07331e629e39d006d86a8cc7659c10a97c671f7535dc8b7f251a1a944dda348e
        excess_account:
          type: string
          description: when building a message to transfer an NFT or Jetton, use this address to send excess funds back to Battery Service.
          example: 0:da6b1b6663a0e4d18cc8574ccd9db5296e367dd9324706f3bbd9eb1cd2caf0bf
        message_ttl:
          type: integer
          description: "ttl for message in seconds"
          example: 300
        gas_proxy:
          type: array
          items:
            type: object
            required:
              - address
            properties:
              address:
                type: string
    GaslessEstimation:
      type: object
      required:
        - commission
      properties:
        commission:
          type: string
    PromoUsed:
      type: object
      required:
        - promo_used
      properties:
        promo_used:
          type: boolean
    BatteryCharged:
      type: object
      required:
        - battery_charged
      properties:
        battery_charged:
          type: boolean
    Balance:
      type: object
      required:
        - balance
        - units
        - reserved
      properties:
        balance:
          type: string
          example: "10.250"
        reserved:
          type: string
          example: "0.3"
          description: "reserved amount in units (TON/USD)"
        units:
          type: string
          example: "usd"
          enum:
            - usd
            - ton
    RechargeMethods:
      type: object
      required:
        - methods
      properties:
        methods:
          type: array
          items:
            type: object
            required:
              - type
              - symbol
              - decimals
              - rate
              - support_gasless
              - support_recharge
            properties:
              image:
                type: string
                example: "https://example.com/image.png"
              jetton_master:
                type: string
              min_bootstrap_value:
                type: string
                example: "10.0"
              type:
                type: string
                enum:
                  - jetton
                  - ton
              rate:
                type: string
                example: "10.250"
              symbol:
                type: string
                example: "usdt"
              decimals:
                type: integer
                example: 6
              support_gasless:
                type: boolean
                example: true
              support_recharge:
                type: boolean
                example: true
    Purchases:
      type: object
      required:
        - purchases
        - total_purchases
      properties:
        total_purchases:
          type: integer
          example: 1
        purchases:
          type: array
          items:
            type: object
            required:
              - user_purchase_id
              - purchase_id
              - type
              - charges
              - datetime
            properties:
              promo:
                type: string
              for_account_id:
                type: string
              user_purchase_id:
                type: integer
                deprecated: true
                example: 2
              purchase_id:
                type: integer
                example: 2
              type:
                type: string
                example: "android"
                enum:
                  - android
                  - ios
                  - promo-code
                  - crypto
                  - gift
                  - on-the-way-gift
              amount:
                description: "Amount describes the amount paid by the user for this purchase when we know it. For crypto purchases it is always set."
                type: string
                example: "10.250"
              charges:
                type: integer
                example: 1200
              currency:
                description: "Currency is set when we know it. For crypto purchases it is always set."
                type: string
                example: "USDT"
              datetime:
                type: string
                example: "2006-01-02T15:04:05Z07:00"
              refund_information:
                type: object
                required:
                  - pending_refund
                  - fully_refunded
                  - partially_refunded
                properties:
                  fully_refunded:
                    type: boolean
                  partially_refunded:
                    type: boolean
                  pending_refund:
                    type: boolean
                  refunded:
                    type: object
                    required:
                      - amount
                      - charges
                    properties:
                      amount:
                        type: string
                        example: "10.250"
                      charges:
                        type: integer
                        example: 1200
                  refundable:
                    type: object
                    required:
                      - amount
                      - charges
                    properties:
                      amount:
                        type: string
                        example: "10.250"
                      charges:
                        type: integer
                        example: 1200
    EstimatedTronTx:
      type: object
      required:
        - energy_charges
        - bandwidth_charges
        - activation_charges
        - total_charges
      properties:
        energy_charges:
          type: integer
        bandwidth_charges:
          type: integer
        activation_charges:
          type: integer
        total_charges:
          type: integer
    SentTronTx:
      type: object
      required:
        - status
      properties:
        status:
          type: string
    TronTransactionsList:
      type: object
      required:
        - transactions
      properties:
        transactions:
          type: array
          items:
            type: object
            required:
              - txid
              - timestamp
              - from_account
              - to_account
              - amount
              - is_pending
              - is_failed
              - battery_charges
            properties:
              txid:
                type: string
              from_account:
                type: string
              to_account:
                type: string
              amount:
                type: string
              is_pending:
                type: boolean
              is_failed:
                type: boolean
              battery_charges:
                type: integer
              timestamp:
                type: integer
                format: int64
    AndroidBatteryPurchaseStatus:
      type: object
      required:
        - purchases
      properties:
        purchases:
          type: array
          items:
            type: object
            required:
              - product_id
              - token
              - success
            properties:
              product_id:
                type: string
                example: "1000000790000000"
              token:
                type: string
                example: "1000000790000000"
              success:
                type: boolean
                example: true
              error:
                type: object
                required:
                  - msg
                  - code
                properties:
                  msg:
                    type: string
                    example: "Temporary error. Try again later."
                  code:
                    type: string
                    example: "invalid-product-id"
                    enum:
                      - invalid-product-id
                      - user-not-found
                      - purchase-is-already-used
                      - temporary-error
                      - unknown

    appStoreResponse:
      type: object
    iOSBatteryPurchaseStatus:
      type: object
      required:
        - transactions
      properties:
        transactions:
          type: array
          items:
            type: object
            required:
              - transaction_id
              - success
            properties:
              transaction_id:
                type: string
                example: "1000000790000000"
              success:
                type: boolean
                example: true
              error:
                type: object
                required:
                  - msg
                  - code
                properties:
                  msg:
                    type: string
                    example: "Temporary error. Try again later."
                  code:
                    type: string
                    example: "invalid-bundle-id"
                    enum:
                      - invalid-bundle-id
                      - invalid-product-id
                      - user-not-found
                      - purchase-is-already-used
                      - temporary-error
                      - unknown
    promoCodeBatteryPurchaseStatus:
      type: object
      required:
        - success
        - balance_change
      properties:
        balance_change:
          type: string
          example: "10.250"
        success:
          type: boolean
          example: true
        error:
          type: object
          required:
            - msg
            - code
          properties:
            msg:
              type: string
              example: "Temporary error. Try again later."
            code:
              type: string
              example: "promo-code-not-found"
              enum:
                - promo-code-not-found
                - promo-exceeded-attempts
                - temporary-error
    Transactions:
      type: object
      required:
        - transactions
        - total_transactions
      properties:
        total_transactions:
          type: integer
          example: 1
        next_offset:
          type: integer
          description: if set, then there are more transactions to be loaded. Use this value as offset parameter in the next request.
          example: 10
        transactions:
          type: array
          items:
            type: object
            required:
              - id
              - paid_amount
              - status
              - created_at
            properties:
              id:
                type: string
              paid_amount:
                type: string
                description: represents the amount of money paid by the user for this transaction.
                example: "10.250"
              status:
                type: string
                example: "10.250"
                enum:
                  - pending
                  - completed
                  - failed
              created_at:
                type: string
                example: "2006-01-02T15:04:05Z07:00"
    AccountAddress:
      type: object
      required:
        - address
        - is_scam
        - is_wallet
      properties:
        address:
          type: string
          format: address
          example: 0:10C1073837B93FDAAD594284CE8B8EFF7B9CF25427440EB2FC682762E1471365
        name:
          type: string
          example: Ton foundation
          description: Display name. Data collected from different sources like moderation lists, dns, collections names and over.
        is_scam:
          type: boolean
          example: true
          description: Is this account was marked as part of scammers activity
        icon:
          type: string
          example: https://ton.org/logo.png
        is_wallet:
          type: boolean
          example: true
    BlockCurrencyCollection:
      type: object
      required:
        - grams
        - other
      properties:
        grams:
          type: integer
          format: int64
          example: 10000000000
          x-js-format: bigint
        other:
          type: array
          items:
            type: object
            required:
              - id
              - value
            properties:
              id:
                type: integer
                format: int64
                example: 13
              value:
                type: string
                x-js-format: bigint
                example: "10000000000"
    BlockValueFlow:
      type: object
      required:
        - from_prev_blk
        - to_next_blk
        - imported
        - exported
        - fees_collected
        - fees_imported
        - recovered
        - created
        - minted
      properties:
        from_prev_blk:
          $ref: '#/components/schemas/BlockCurrencyCollection'
        to_next_blk:
          $ref: '#/components/schemas/BlockCurrencyCollection'
        imported:
          $ref: '#/components/schemas/BlockCurrencyCollection'
        exported:
          $ref: '#/components/schemas/BlockCurrencyCollection'
        fees_collected:
          $ref: '#/components/schemas/BlockCurrencyCollection'
        burned:
          $ref: '#/components/schemas/BlockCurrencyCollection'
        fees_imported:
          $ref: '#/components/schemas/BlockCurrencyCollection'
        recovered:
          $ref: '#/components/schemas/BlockCurrencyCollection'
        created:
          $ref: '#/components/schemas/BlockCurrencyCollection'
        minted:
          $ref: '#/components/schemas/BlockCurrencyCollection'
    ServiceStatus:
      type: object
      required:
        - indexing_latency
        - rest_online
        - last_known_masterchain_seqno
      properties:
        rest_online:
          type: boolean
          default: true
        indexing_latency:
          type: integer
          example: 100
        last_known_masterchain_seqno:
          type: integer
          example: 123456
          format: int32
    ReducedBlock:
      type: object
      required:
        - workchain_id
        - shard
        - seqno
        - tx_quantity
        - utime
        - shards_blocks
        - parent
      properties:
        workchain_id:
          type: integer
          example: 0
          format: int32
        shard:
          type: string
          # x-js-format: bigint ???
          example: "8000000000000000"
        seqno:
          type: integer
          example: 21734019
          format: int32
        master_ref:
          type: string
          example: (-1,4234234,8000000000000000)
        tx_quantity:
          type: integer
          example: 130
        utime:
          type: integer
          format: int64
          example: 23814011000000
        shards_blocks:
          type: array
          items:
            type: string
            example: "[ (0,4234235,8000000000000000) ]"
        parent:
          type: array
          items:
            type: string
            example: "[ (0,21734018,8000000000000000) ]"
    BlockchainBlock:
      type: object
      required:
        - workchain_id
        - shard
        - seqno
        - root_hash
        - file_hash
        - global_id
        - value_flow
        - version
        - after_merge
        - before_split
        - after_split
        - want_split
        - want_merge
        - key_block
        - gen_utime
        - start_lt
        - end_lt
        - vert_seqno
        - gen_catchain_seqno
        - min_ref_mc_seqno
        - prev_key_block_seqno
        - prev_refs
        - in_msg_descr_length
        - out_msg_descr_length
        - rand_seed
        - created_by
        - tx_quantity
      properties:
        tx_quantity:
          type: integer
          example: 130
        value_flow:
          $ref: '#/components/schemas/BlockValueFlow'
        workchain_id:
          type: integer
          example: 0
          format: int32
        shard:
          type: string
          # x-js-format: bigint ???
          example: "8000000000000000"
        seqno:
          type: integer
          example: 21734019
          format: int32
        root_hash:
          type: string
          example: 131D0C65055F04E9C19D687B51BC70F952FD9CA6F02C2801D3B89964A779DF85
        file_hash:
          type: string
          example: A6A0BD6608672B11B79538A50B2204E748305C12AA0DED9C16CF0006CE3AF8DB
        global_id:
          type: integer
          example: -239
          format: int32
        version:
          type: integer
          example: 0
          format: int32
        after_merge:
          type: boolean
          example: true
        before_split:
          type: boolean
          example: true
        after_split:
          type: boolean
          example: true
        want_split:
          type: boolean
          example: true
        want_merge:
          type: boolean
          example: true
        key_block:
          type: boolean
          example: true
        gen_utime:
          type: integer
          format: int64
          example: 1674826775
        start_lt:
          type: integer
          format: int64
          example: 23814011000000
          x-js-format: bigint
        end_lt:
          type: integer
          format: int64
          example: 23814011000001
          x-js-format: bigint
        vert_seqno:
          type: integer
          example: 0
          format: int32
        gen_catchain_seqno:
          type: integer
          example: 0
          format: int32
        min_ref_mc_seqno:
          type: integer
          example: 0
          format: int32
        prev_key_block_seqno:
          type: integer
          example: 0
          format: int32
        gen_software_version:
          type: integer
          example: 0
          format: int32
        gen_software_capabilities:
          type: integer
          format: int64
          example: 0
        master_ref:
          type: string
          example: (-1,4234234,8000000000000000)
        prev_refs:
          type: array
          items:
            type: string
            example: [ (-1,4234235,8000000000000000) ]
        in_msg_descr_length:
          type: integer
          format: int64
          example: 0
        out_msg_descr_length:
          type: integer
          format: int64
          example: 0
        rand_seed:
          type: string
          example: 131D0C65055F04E9C19D687B51BC70F952FD9CA6F02C2801D3B89964A779DF85
        created_by:
          type: string
          example: A6A0BD6608672B11B79538A50B2204E748305C12AA0DED9C16CF0006CE3AF8DB
    BlockchainBlocks:
      type: object
      required:
        - blocks
      properties:
        blocks:
          type: array
          items:
            $ref: '#/components/schemas/BlockchainBlock'
    ReducedBlocks:
      type: object
      required:
        - blocks
      properties:
        blocks:
          type: array
          items:
            $ref: '#/components/schemas/ReducedBlock'
    BlockchainBlockShards:
      type: object
      required:
        - shards
      properties:
        shards:
          type: array
          items:
            type: object
            required:
              - last_known_block_id
              - last_known_block
            properties:
              last_known_block_id:
                type: string
                example: (0,8000000000000000,4234234)
              last_known_block:
                $ref: '#/components/schemas/BlockchainBlock'
    AccountStatus:
      type: string
      example: active
      enum:
        - nonexist
        - uninit
        - active
        - frozen
    StateInit:
      type: object
      required:
        - boc
        - interfaces
      properties:
        boc:
          type: string
          format: cell
          example: b5ee9c72010106010044000114ff00f4a413f4bcf2c80b01020120020302014804050004f2300038d06c21d31f30ed44d0d33f3001c00197a4c8cb3fc9ed549330f206e20011a13431da89a1a67e61
        interfaces:
          type: array
          items:
            type: string
    Message:
      type: object
      required:
        - msg_type
        - created_lt
        - ihr_disabled
        - bounce
        - bounced
        - value
        - fwd_fee
        - ihr_fee
        - import_fee
        - created_at
        - hash
      properties:
        msg_type:
          type: string
          example: int_msg
          enum:
            - int_msg
            - ext_in_msg
            - ext_out_msg
        created_lt:
          type: integer
          format: int64
          example: 25713146000001
          x-js-format: bigint
        ihr_disabled:
          type: boolean
          example: true
        bounce:
          type: boolean
          example: true
        bounced:
          type: boolean
          example: true
        value:
          type: integer
          format: int64
          x-js-format: bigint
          example: 60000000
        fwd_fee:
          type: integer
          format: int64
          x-js-format: bigint
          example: 5681002
        ihr_fee:
          type: integer
          format: int64
          x-js-format: bigint
          example: 5681002
        destination:
          $ref: '#/components/schemas/AccountAddress'
        source:
          $ref: '#/components/schemas/AccountAddress'
        import_fee:
          type: integer
          format: int64
          x-js-format: bigint
          example: 5681002
        created_at:
          type: integer
          format: int64
          example: 5681002
        op_code:
          type: string
          x-js-format: bigint
          example: "0xdeadbeaf"
        init:
          $ref: '#/components/schemas/StateInit'
        hash:
          type: string
          example: "1219de582369ac80ee1afe12147930f458a54ff1eea612611a8bc6bd31581a6c"
        raw_body:
          type: string
          format: cell
          description: hex-encoded BoC with raw message body
          example: "B5EE9C7201010101001100001D00048656C6C6F2C20776F726C64218"
        decoded_op_name:
          type: string
          example: "nft_transfer"
        decoded_body: { } # Free-form JSON value
    TransactionType:
      type: string
      example: TransOrd
      enum:
        - TransOrd
        - TransTickTock
        - TransSplitPrepare
        - TransSplitInstall
        - TransMergePrepare
        - TransMergeInstall
        - TransStorage
    AccStatusChange:
      type: string
      example: acst_unchanged
      enum:
        - acst_unchanged
        - acst_frozen
        - acst_deleted
    ComputeSkipReason:
      type: string
      example: cskip_no_state
      enum:
        - cskip_no_state
        - cskip_bad_state
        - cskip_no_gas
    BouncePhaseType:
      type: string
      example: cskip_no_state
      enum:
        - TrPhaseBounceNegfunds
        - TrPhaseBounceNofunds
        - TrPhaseBounceOk
    ComputePhase:
      type: object
      required:
        - skipped
      properties:
        skipped:
          type: boolean
          example: true
        skip_reason:
          $ref: '#/components/schemas/ComputeSkipReason'
        success:
          type: boolean
          example: true
        gas_fees:
          type: integer
          format: int64
          x-js-format: bigint
          example: 1000
        gas_used:
          type: integer
          format: int64
          x-js-format: bigint
          example: 10000
        vm_steps:
          type: integer
          format: int32
          example: 5
        exit_code:
          type: integer
          format: int32
          example: 0
        exit_code_description:
          type: string
    StoragePhase:
      type: object
      required:
        - fees_collected
        - status_change
      properties:
        fees_collected:
          type: integer
          format: int64
          x-js-format: bigint
          example: 25713146000001
        fees_due:
          type: integer
          format: int64
          x-js-format: bigint
          example: 25713146000001
        status_change:
          $ref: '#/components/schemas/AccStatusChange'
    CreditPhase:
      type: object
      required:
        - fees_collected
        - credit
      properties:
        fees_collected:
          type: integer
          format: int64
          x-js-format: bigint
          example: 100
        credit:
          type: integer
          format: int64
          x-js-format: bigint
          example: 1000
    ActionPhase:
      type: object
      required:
        - success
        - result_code
        - total_actions
        - skipped_actions
        - fwd_fees
        - total_fees
      properties:
        success:
          type: boolean
          example: true
        result_code:
          type: integer
          format: int32
          example: 5
        total_actions:
          type: integer
          format: int32
          example: 5
        skipped_actions:
          type: integer
          format: int32
          example: 5
        fwd_fees:
          type: integer
          format: int64
          x-js-format: bigint
          example: 1000
        total_fees:
          type: integer
          format: int64
          x-js-format: bigint
          example: 1000
        result_code_description:
          type: string
    Transaction:
      type: object
      required:
        - hash
        - lt
        - account
        - end_balance
        - success
        - utime
        - orig_status
        - end_status
        - total_fees
        - transaction_type
        - state_update_old
        - state_update_new
        - out_msgs
        - block
        - aborted
        - destroyed
        - raw
      properties:
        hash:
          type: string
          example: 55e8809519cd3c49098c9ee45afdafcea7a894a74d0f628d94a115a50e045122
        lt:
          type: integer
          format: int64
          example: 25713146000001
          x-js-format: bigint
        account:
          $ref: '#/components/schemas/AccountAddress'
        success:
          type: boolean
          example: true
        utime:
          type: integer
          format: int64
          example: 1645544908
        orig_status:
          $ref: '#/components/schemas/AccountStatus'
        end_status:
          $ref: '#/components/schemas/AccountStatus'
        total_fees:
          type: integer
          format: int64
          x-js-format: bigint
          example: 25713146000001
        end_balance:
          type: integer
          format: int64
          x-js-format: bigint
          example: 25713146000001
        transaction_type:
          $ref: '#/components/schemas/TransactionType'
        state_update_old:
          type: string
          example: 55e8809519cd3c49098c9ee45afdafcea7a894a74d0f628d94a115a50e045122
        state_update_new:
          type: string
          example: 55e8809519cd3c49098c9ee45afdafcea7a894a74d0f628d94a115a50e045122
        in_msg:
          $ref: '#/components/schemas/Message'
        out_msgs:
          type: array
          items:
            $ref: '#/components/schemas/Message'
        block:
          type: string
          example: (-1,4234234,8000000000000000)
        prev_trans_hash:
          type: string
          example: 55e8809519cd3c49098c9ee45afdafcea7a894a74d0f628d94a115a50e045122
        prev_trans_lt:
          type: integer
          format: int64
          x-js-format: bigint
          example: 25713146000001
        compute_phase:
          $ref: '#/components/schemas/ComputePhase'
        storage_phase:
          $ref: '#/components/schemas/StoragePhase'
        credit_phase:
          $ref: '#/components/schemas/CreditPhase'
        action_phase:
          $ref: '#/components/schemas/ActionPhase'
        bounce_phase:
          $ref: '#/components/schemas/BouncePhaseType'
        aborted:
          type: boolean
          example: true
        destroyed:
          type: boolean
          example: true
        raw:
          type: string
          format: cell
          description: "hex encoded boc with raw transaction"
          example: "b5ee9c72410206010001380003b372cf3b5b8c891e517c9addbda1c0386a09ccacbb0e3faf630b51cfc8152325acb00002ac5795c0e41fdf79135cb7da03cc623b165d614b562a51eeccd8a5e097f405abf6b37f4e73000002ac5629732c1666887ed000144030480102030101a004008272abc8f2971aa4404ac6da1597720f348b2e1247b1ad9f55cbd3b6812f0a5f08b269bb65039fb1f6074d00f794e857f6dfd01131d299df456af10a8a4943d4d165000d0c80608840492001ab48015581f575c3b8c6ab3d6"
    ConfigProposalSetup:
      type: object
      required:
        - min_tot_rounds
        - max_tot_rounds
        - min_wins
        - max_losses
        - min_store_sec
        - max_store_sec
        - bit_price
        - cell_price
      properties:
        min_tot_rounds:
          type: integer
          example: 2
        max_tot_rounds:
          type: integer
          example: 6
        min_wins:
          type: integer
          example: 2
        max_losses:
          type: integer
          example: 6
        min_store_sec:
          type: integer
          format: int64
          example: 1000000
        max_store_sec:
          type: integer
          format: int64
          example: 10000000
        bit_price:
          type: integer
          format: int64
          example: 1
        cell_price:
          type: integer
          format: int64
          example: 500
    GasLimitPrices:
      type: object
      required:
        - gas_price
        - gas_limit
        - gas_credit
        - block_gas_limit
        - freeze_due_limit
        - delete_due_limit
      properties:
        special_gas_limit:
          type: integer
          format: int64
        flat_gas_limit:
          type: integer
          format: int64
        flat_gas_price:
          type: integer
          format: int64
        gas_price:
          type: integer
          format: int64
          example: 1
        gas_limit:
          type: integer
          format: int64
          example: 1000000
        gas_credit:
          type: integer
          format: int64
          example: 1000000
        block_gas_limit:
          type: integer
          format: int64
          example: 1000000
        freeze_due_limit:
          type: integer
          format: int64
          example: 1000000
        delete_due_limit:
          type: integer
          format: int64
          example: 1000000
    BlockParamLimits:
      type: object
      required:
        - underload
        - soft_limit
        - hard_limit
      properties:
        underload:
          type: integer
          format: int64
          example: 1000000
        soft_limit:
          type: integer
          format: int64
          example: 1000000
        hard_limit:
          type: integer
          format: int64
          example: 1000000
    BlockLimits:
      type: object
      required:
        - bytes
        - gas
        - lt_delta
      properties:
        bytes:
          $ref: '#/components/schemas/BlockParamLimits'
        gas:
          $ref: '#/components/schemas/BlockParamLimits'
        lt_delta:
          $ref: '#/components/schemas/BlockParamLimits'
    MsgForwardPrices:
      type: object
      required:
        - lump_price
        - bit_price
        - cell_price
        - ihr_price_factor
        - first_frac
        - next_frac
      properties:
        lump_price:
          type: integer
          format: int64
          example: 1000000
        bit_price:
          type: integer
          format: int64
          example: 1000000
        cell_price:
          type: integer
          format: int64
          example: 1000000
        ihr_price_factor:
          type: integer
          format: int64
          example: 1000000
        first_frac:
          type: integer
          format: int64
          example: 1000000
        next_frac:
          type: integer
          format: int64
          example: 1000000
    WorkchainDescr:
      type: object
      required:
        - workchain
        - enabled_since
        - actual_min_split
        - min_split
        - max_split
        - basic
        - active
        - accept_msgs
        - flags
        - zerostate_root_hash
        - zerostate_file_hash
        - version
      properties:
        workchain:
          type: integer
          format: int
          example: 0
        enabled_since:
          type: integer
          format: int64
          example: 1000000
        actual_min_split:
          type: integer
          format: int
          example: 1000000
        min_split:
          type: integer
          format: int
          example: 1000000
        max_split:
          type: integer
          format: int
          example: 1000000
        basic:
          type: integer
          example: 1000000
        active:
          type: boolean
          example: true
        accept_msgs:
          type: boolean
          example: true
        flags:
          type: integer
          format: int
          example: 1000000
        zerostate_root_hash:
          type: string
          example: "131D0C65055F04E9C19D687B51BC70F952FD9CA6F02C2801D3B89964A779DF85"
        zerostate_file_hash:
          type: string
          example: "A6A0BD6608672B11B79538A50B2204E748305C12AA0DED9C16CF0006CE3AF8DB"
        version:
          type: integer
          format: int64
          example: 1000000
    MisbehaviourPunishmentConfig:
      type: object
      required:
        - default_flat_fine
        - default_proportional_fine
        - severity_flat_mult
        - severity_proportional_mult
        - unpunishable_interval
        - long_interval
        - long_flat_mult
        - long_proportional_mult
        - medium_interval
        - medium_flat_mult
        - medium_proportional_mult
      properties:
        default_flat_fine:
          type: integer
          format: int64
          example: 1000000
        default_proportional_fine:
          type: integer
          format: int64
          example: 1000000
        severity_flat_mult:
          type: integer
          example: 1000000
        severity_proportional_mult:
          type: integer
          example: 1000000
        unpunishable_interval:
          type: integer
          example: 1000000
        long_interval:
          type: integer
          example: 1000000
        long_flat_mult:
          type: integer
          example: 1000000
        long_proportional_mult:
          type: integer
          example: 1000000
        medium_interval:
          type: integer
          example: 1000000
        medium_flat_mult:
          type: integer
          example: 1000000
        medium_proportional_mult:
          type: integer
          example: 1000000

    SizeLimitsConfig:
      type: object
      required:
        - max_msg_bits
        - max_msg_cells
        - max_library_cells
        - max_vm_data_depth
        - max_ext_msg_size
        - max_ext_msg_depth
      properties:
        max_msg_bits:
          type: integer
          format: int64
          example: 1000000
        max_msg_cells:
          type: integer
          format: int64
          example: 1000000
        max_library_cells:
          type: integer
          format: int64
          example: 1000000
        max_vm_data_depth:
          type: integer
          format: int
          example: 1000000
        max_ext_msg_size:
          type: integer
          format: int64
          example: 1000000
        max_ext_msg_depth:
          type: integer
          format: int
          example: 1000000
        max_acc_state_cells:
          type: integer
          format: int64
          example: 1000000
        max_acc_state_bits:
          type: integer
          format: int64
          example: 1000000
    ValidatorsSet:
      type: object
      required:
        - utime_since
        - utime_until
        - total
        - main
        - list
      properties:
        utime_since:
          type: integer
        utime_until:
          type: integer
        total:
          type: integer
        main:
          type: integer
        total_weight:
          type: string
          x-js-format: bigint
          example: "1152921504606846800"
        list:
          type: array
          items:
            type: object
            required:
              - public_key
              - weight
            properties:
              public_key:
                type: string
              weight:
                type: integer
                format: int64
                x-js-format: bigint
              adnl_addr:
                type: string
                example: "45061C1D4EC44A937D0318589E13C73D151D1CEF5D3C0E53AFBCF56A6C2FE2BD"
    Oracle:
      type: object
      required:
        - address
        - secp_pubkey
      properties:
        address:
          type: string
          format: address
          example: 0:55e8809519cd3c49098c9ee45afdafcea7a894a74d0f628d94a115a50e045122
        secp_pubkey:
          type: string
          example: 00000000000000000000000017dcab1b1481610f6c7a7a98cf0370dc0ec704a6
    OracleBridgeParams:
      type: object
      required:
        - bridge_addr
        - oracle_multisig_address
        - external_chain_address
        - oracles
      properties:
        bridge_addr:
          type: string
          format: address
        oracle_multisig_address:
          type: string
          format: address
        external_chain_address:
          type: string
        oracles:
          type: array
          items:
            $ref: '#/components/schemas/Oracle'
    JettonBridgePrices:
      type: object
      required:
        - bridge_burn_fee
        - bridge_mint_fee
        - wallet_min_tons_for_storage
        - wallet_gas_consumption
        - minter_min_tons_for_storage
        - discover_gas_consumption
      properties:
        bridge_burn_fee:
          type: integer
          format: int64
        bridge_mint_fee:
          type: integer
          format: int64
        wallet_min_tons_for_storage:
          type: integer
          format: int64
        wallet_gas_consumption:
          type: integer
          format: int64
        minter_min_tons_for_storage:
          type: integer
          format: int64
        discover_gas_consumption:
          type: integer
          format: int64
    JettonBridgeParams:
      type: object
      required:
        - bridge_address
        - oracles_address
        - state_flags
        - oracles
      properties:
        bridge_address:
          type: string
          format: address
        oracles_address:
          type: string
          format: address
        state_flags:
          type: integer
        burn_bridge_fee:
          type: integer
          format: int64
        oracles:
          type: array
          items:
            $ref: '#/components/schemas/Oracle'
        external_chain_address:
          type: string
        prices:
          $ref: '#/components/schemas/JettonBridgePrices'
    Validator:
      type: object
      required:
        - address
        - adnl_address
        - stake
        - max_factor
      properties:
        address:
          type: string
          format: address
          example: 0:55e8809519cd3c49098c9ee45afdafcea7a894a74d0f628d94a115a50e045122
        adnl_address:
          type: string
          example: 10C1073837B93FDAAD594284CE8B8EFF7B9CF25427440EB2FC682762E1471365
        stake:
          type: integer
          format: int64
          example: 123456789
          x-js-format: bigint
        max_factor:
          type: integer
          format: int64
          example: 123456789
    Validators:
      type: object
      required:
        - validators
        - elect_at
        - elect_close
        - min_stake
        - total_stake
      properties:
        elect_at:
          type: integer
          format: int64
          example: 123456789
        elect_close:
          type: integer
          format: int64
          example: 123456789
        min_stake:
          type: integer
          format: int64
          x-js-format: bigint
          example: 123456789
        total_stake:
          type: integer
          format: int64
          x-js-format: bigint
          example: 123456789
        validators:
          type: array
          items:
            $ref: '#/components/schemas/Validator'
    AccountStorageInfo:
      type: object
      required:
        - used_cells
        - used_bits
        - used_public_cells
        - last_paid
        - due_payment
      properties:
        used_cells:
          type: integer
          format: int64
          example: 567
        used_bits:
          type: integer
          format: int64
          example: 567
        used_public_cells:
          type: integer
          format: int64
          example: 567
        last_paid:
          type: integer
          format: int64
          description: time of the last payment
          example: 1720860269
        due_payment:
          type: integer
          format: int64
          x-js-format: bigint
          example: 567
    BlockchainRawAccount:
      type: object
      required:
        - address
        - balance
        - status
        - last_transaction_lt
        - storage
      properties:
        address:
          type: string
          format: address
          example: 0:da6b1b6663a0e4d18cc8574ccd9db5296e367dd9324706f3bbd9eb1cd2caf0bf
        balance:
          type: integer
          format: int64
          x-js-format: bigint
          example: 123456789
        extra_balance:
          type: object
          additionalProperties:
            type: string
            # x-js-format: bigint ???
            # example ???
        code:
          type: string
          format: cell
          example: b5ee9c72410104010087000114ff00f4a413f4a0f2c80b0102012002030002d200dfa5ffff76a268698fe9ffe8e42c5267858f90e785ffe4f6aa6467c444ffb365ffc10802faf0807d014035e7a064b87d804077e7857fc10803dfd2407d014035e7a064b86467cd8903a32b9ba4410803ade68afd014035e7a045ea432b6363796103bb7b9363210c678b64b87d807d8040c249b3e4
        data:
          type: string
          format: cell
          example: b5ee9c7241010101002600004811fd096c0000000000000000000000000000000000000000000000000000000000000000cb78264d
        last_transaction_lt:
          type: integer
          format: int64
          x-js-format: bigint
          example: 123456789
        last_transaction_hash:
          type: string
          example: 088b436a846d92281734236967970612f87fbd64a2cd3573107948379e8e4161
        frozen_hash:
          type: string
          example: 088b436a846d92281734236967970612f87fbd64a2cd3573107948379e8e4161
        status:
          '$ref': '#/components/schemas/AccountStatus'
        storage:
          $ref: '#/components/schemas/AccountStorageInfo'
        libraries:
          type: array
          items:
            type: object
            required:
              - public
              - root
            properties:
              public:
                type: boolean
                example: true
              root:
                type: string
                format: cell
    Account:
      type: object
      required:
        - address
        - balance
        - status
        - last_activity
        - get_methods
        - is_wallet
      properties:
        address:
          type: string
          format: address
          example: 0:da6b1b6663a0e4d18cc8574ccd9db5296e367dd9324706f3bbd9eb1cd2caf0bf
        balance:
          type: integer
          format: int64
          example: 123456789
          x-js-format: bigint
        currencies_balance:
          description: "{'USD': 1, 'IDR': 1000}"
          type: object
          additionalProperties: true
          example: { }
        last_activity:
          type: integer
          description: unix timestamp
          format: int64
          example: 1720860269
        status:
          '$ref': '#/components/schemas/AccountStatus'
        interfaces:
          type: array
          items:
            type: string
            example: nft_sale
        name:
          type: string
          example: "Ton foundation"
        is_scam:
          type: boolean
          example: true
        icon:
          type: string
          example: "https://ton.org/logo.png"
        memo_required:
          type: boolean
          example: true
        get_methods:
          type: array
          items:
            type: string
          example: [ 'get_item_data' ]
        is_suspended:
          type: boolean
        is_wallet:
          type: boolean
    Accounts:
      type: object
      required:
        - accounts
      properties:
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/Account'
    GaslessConfig:
      type: object
      required:
        - gas_jettons
        - relay_address
      properties:
        relay_address:
          type: string
          format: address
          description: "sending excess to this address decreases the commission of a gasless transfer"
          example: 0:dfbd5be8497fdc0c9fcbdfc676864840ddf8ad6423d6d5657d9b0e8270d6c8ac
        gas_jettons:
          type: array
          description: "list of jettons, any of them can be used to pay for gas"
          items:
            type: object
            required:
              - master_id
            properties:
              master_id:
                type: string
                format: address
    SignRawMessage:
      type: object
      required:
        - address
        - amount
      properties:
        address:
          type: string
          format: address
          example: 0:da6b1b6663a0e4d18cc8574ccd9db5296e367dd9324706f3bbd9eb1cd2caf0bf
        amount:
          type: string
          # x-js-format: bigint
          # example: "1000000" nanocoins or decimal ?
          description: "Number of nanocoins to send. Decimal string."
        payload:
          type: string
          format: cell
          description: "Raw one-cell BoC encoded in hex."
        stateInit:
          type: string
          format: cell
          description: "Raw once-cell BoC encoded in hex."
    SignRawParams:
      type: object
      required:
        - messages
        - relay_address
        - commission
        - from
        - valid_until
      properties:
        relay_address:
          type: string
          format: address
          example: 0:da6b1b6663a0e4d18cc8574ccd9db5296e367dd9324706f3bbd9eb1cd2caf0bf
        commission:
          type: string
          x-js-format: bigint
          example: "1000000"
          description: "Commission for the transaction. In nanocoins."
        from:
          type: string
          format: address
          example: 0:da6b1b6663a0e4d18cc8574ccd9db5296e367dd9324706f3bbd9eb1cd2caf0bf
        valid_until:
          type: integer
          format: int64
          example: 1717397217
        messages:
          type: array
          items:
            $ref: '#/components/schemas/SignRawMessage'
    MethodExecutionResult:
      type: object
      required:
        - success
        - exit_code
        - stack
      properties:
        success:
          type: boolean
          example: true
        exit_code:
          type: integer
          example: 0
          description: tvm exit code
        stack:
          type: array
          items:
            $ref: "#/components/schemas/TvmStackRecord"
        decoded: { } # Free-form JSON value
    TvmStackRecord:
      type: object
      format: tuple-item
      required:
        - type
      properties:
        type:
          type: string
          example: "cell"
          enum:
            - cell
            - num
            - nan
            - "null"
            - tuple
        cell:
          type: string
          format: cell
        slice:
          type: string
          format: cell
        num:
          type: string
          example: ""
        tuple:
          type: array
          example: [ ]
          items:
            $ref: '#/components/schemas/TvmStackRecord'
    RawBlockchainConfig:
      type: object
      required:
        - config
      properties:
        config:
          type: object
          additionalProperties: true
          example: { }

    BlockchainConfig:
      type: object
      required:
        - raw
        - "0"
        - "1"
        - "2"
        - "4"
        - "44"
      properties:
        raw:
          type: string
          format: cell
          description: config boc in hex format
        "0":
          type: string
          format: address
          description: "config address"
        "1":
          type: string
          format: address
          description: "elector address"
        "2":
          type: string
          format: address
          description: "minter address"
        "3":
          type: string
          format: address
          description: "The address of the transaction fee collector."
        "4":
          type: string
          format: address
          description: "dns root address"
        "5":
          type: object
          required:
            - fee_burn_nom
            - fee_burn_denom
          properties:
            blackhole_addr:
              type: string
              format: address
            fee_burn_nom:
              type: integer
              format: int64
            fee_burn_denom:
              type: integer
              format: int64
        "6":
          type: object
          description: Minting fees of new currencies.
          required:
            - mint_new_price
            - mint_add_price
          properties:
            mint_new_price:
              type: integer
              format: int64
            mint_add_price:
              type: integer
              format: int64
        "7":
          type: object
          description: The volume of each of the additional currencies in circulation.
          required:
            - currencies
          properties:
            currencies:
              type: array
              items:
                type: object
                required:
                  - currency_id
                  - amount
                properties:
                  currency_id:
                    type: integer
                    format: int64
                  amount:
                    type: string
                    # x-js-format: bigint
                    # example: "1000000"
        "8":
          type: object
          description: The network version and additional capabilities supported by the validators.
          required:
            - version
            - capabilities
          properties:
            version:
              type: integer
              format: int64
            capabilities:
              type: integer
              format: int64
        "9":
          type: object
          description: List of mandatory parameters of the blockchain config.
          required:
            - mandatory_params
          properties:
            mandatory_params:
              type: array
              items:
                type: integer
                format: int32
        "10":
          type: object
          description: List of critical TON parameters, the change of which significantly affects the network, so more voting rounds are held.
          required:
            - critical_params
          properties:
            critical_params:
              type: array
              items:
                type: integer
                format: int32
        "11":
          type: object
          description: This parameter indicates under what conditions proposals to change the TON configuration are accepted.
          required:
            - normal_params
            - critical_params
          properties:
            normal_params:
              $ref: '#/components/schemas/ConfigProposalSetup'
            critical_params:
              $ref: '#/components/schemas/ConfigProposalSetup'
        "12":
          type: object
          description: Workchains in the TON Blockchain
          required:
            - workchains
          properties:
            workchains:
              type: array
              items:
                $ref: '#/components/schemas/WorkchainDescr'
        "13":
          type: object
          description: The cost of filing complaints about incorrect operation of validators.
          required:
            - deposit
            - bit_price
            - cell_price
          properties:
            deposit:
              type: integer
              format: int64
            bit_price:
              type: integer
              format: int64
            cell_price:
              type: integer
              format: int64
        "14":
          type: object
          description: The reward in nanoTons for block creation in the TON blockchain.
          required:
            - masterchain_block_fee
            - basechain_block_fee
          properties:
            masterchain_block_fee:
              type: integer
              format: int64
            basechain_block_fee:
              type: integer
              format: int64
        "15":
          type: object
          description: The reward in nanoTons for block creation in the TON blockchain.
          required:
            - validators_elected_for
            - elections_start_before
            - elections_end_before
            - stake_held_for
          properties:
            validators_elected_for:
              type: integer
              format: int64
              example: 65536
            elections_start_before:
              type: integer
              format: int64
              example: 32768
            elections_end_before:
              type: integer
              format: int64
              example: 8192
            stake_held_for:
              type: integer
              format: int64
              example: 32768
        "16":
          type: object
          description: The limits on the number of validators in the TON blockchain.
          required:
            - max_validators
            - max_main_validators
            - min_validators
          properties:
            max_validators:
              type: integer
              example: 400
            max_main_validators:
              type: integer
              example: 100
            min_validators:
              type: integer
              example: 75
        "17":
          type: object
          description: The stake parameters configuration in the TON blockchain.
          required:
            - min_stake
            - max_stake
            - min_total_stake
            - max_stake_factor
          properties:
            min_stake:
              type: string
              # x-js-format: bigint
              # example: "1000000"
            max_stake:
              type: string
              # x-js-format: bigint
              # example: "1000000"
            min_total_stake:
              type: string
              # x-js-format: bigint
              # example: "1000000"
            max_stake_factor:
              type: integer
              format: int64
        "18":
          type: object
          description: The prices for data storage.
          required:
            - storage_prices
          properties:
            storage_prices:
              type: array
              items:
                type: object
                required:
                  - utime_since
                  - bit_price_ps
                  - cell_price_ps
                  - mc_bit_price_ps
                  - mc_cell_price_ps
                properties:
                  utime_since:
                    type: integer
                    format: int64
                    example: 0
                  bit_price_ps:
                    type: integer
                    format: int64
                    example: 1
                  cell_price_ps:
                    type: integer
                    format: int64
                    example: 500
                  mc_bit_price_ps:
                    type: integer
                    format: int64
                    example: 1000
                  mc_cell_price_ps:
                    type: integer
                    format: int64
                    example: 500000
        "20":
          type: object
          description: The cost of computations in the masterchain. The complexity of any computation is estimated in gas units.
          required:
            - gas_limits_prices
          properties:
            gas_limits_prices:
              $ref: '#/components/schemas/GasLimitPrices'
        "21":
          type: object
          description: The cost of computations in the basechains. The complexity of any computation is estimated in gas units.
          required:
            - gas_limits_prices
          properties:
            gas_limits_prices:
              $ref: '#/components/schemas/GasLimitPrices'
        "22":
          type: object
          description: The limits on the block in the masterchain, upon reaching which the block is finalized and the callback of the remaining messages (if any) is carried over to the next block.
          required:
            - block_limits
          properties:
            block_limits:
              $ref: '#/components/schemas/BlockLimits'
        "23":
          type: object
          description: The limits on the block in the basechains, upon reaching which the block is finalized and the callback of the remaining messages (if any) is carried over to the next block.
          required:
            - block_limits
          properties:
            block_limits:
              $ref: '#/components/schemas/BlockLimits'
        "24":
          type: object
          description: The cost of sending messages in the masterchain of the TON blockchain.
          required:
            - msg_forward_prices
          properties:
            msg_forward_prices:
              $ref: '#/components/schemas/MsgForwardPrices'
        "25":
          type: object
          description: The cost of sending messages in the basechains of the TON blockchain.
          required:
            - msg_forward_prices
          properties:
            msg_forward_prices:
              $ref: '#/components/schemas/MsgForwardPrices'
        "28":
          type: object
          description: The configuration for the Catchain protocol.
          required:
            - mc_catchain_lifetime
            - shard_catchain_lifetime
            - shard_validators_lifetime
            - shard_validators_num
          properties:
            mc_catchain_lifetime:
              type: integer
              format: int64
              example: 1000000
            shard_catchain_lifetime:
              type: integer
              format: int64
              example: 1000000
            shard_validators_lifetime:
              type: integer
              format: int64
              example: 1000000
            shard_validators_num:
              type: integer
              format: int64
              example: 1000000
            flags:
              type: integer
              format: int
              example: 1000000
            shuffle_mc_validators:
              type: boolean
        "29":
          type: object
          description: The configuration for the consensus protocol above catchain.
          required:
            - round_candidates
            - next_candidate_delay_ms
            - consensus_timeout_ms
            - fast_attempts
            - attempt_duration
            - catchain_max_deps
            - max_block_bytes
            - max_collated_bytes
          properties:
            flags:
              type: integer
              format: int
              example: 0
            new_catchain_ids:
              type: boolean
              example: true
            round_candidates:
              type: integer
              format: int64
              example: 3
            next_candidate_delay_ms:
              type: integer
              format: int64
              example: 2000
            consensus_timeout_ms:
              type: integer
              format: int64
              example: 16000
            fast_attempts:
              type: integer
              format: int64
              example: 3
            attempt_duration:
              type: integer
              format: int64
              example: 8
            catchain_max_deps:
              type: integer
              format: int64
              example: 4
            max_block_bytes:
              type: integer
              format: int64
              example: 2097152
            max_collated_bytes:
              type: integer
              format: int64
              example: 2097152
            proto_version:
              type: integer
              format: int64
              example: 2
            catchain_max_blocks_coeff:
              type: integer
              format: int64
              example: 10000
        "31":
          type: object
          description: The configuration for the consensus protocol above catchain.
          required:
            - fundamental_smc_addr
          properties:
            fundamental_smc_addr:
              type: array
              items:
                type: string
                format: address
                example: -1:dd24c4a1f2b88f8b7053513b5cc6c5a31bc44b2a72dcb4d8c0338af0f0d37ec5
        "32":
          $ref: '#/components/schemas/ValidatorsSet'
        "33":
          $ref: '#/components/schemas/ValidatorsSet'
        "34":
          $ref: '#/components/schemas/ValidatorsSet'
        "35":
          $ref: '#/components/schemas/ValidatorsSet'
        "36":
          $ref: '#/components/schemas/ValidatorsSet'
        "37":
          $ref: '#/components/schemas/ValidatorsSet'
        "40":
          type: object
          description: The configuration for punishment for improper behavior (non-validation). In the absence of the parameter, the default fine size is 101 TON
          required:
            - misbehaviour_punishment_config
          properties:
            misbehaviour_punishment_config:
              $ref: '#/components/schemas/MisbehaviourPunishmentConfig'
        "43":
          type: object
          description: The size limits and some other characteristics of accounts and messages.
          required:
            - size_limits_config
          properties:
            size_limits_config:
              $ref: '#/components/schemas/SizeLimitsConfig'
        "44":
          type: object
          description: suspended accounts
          required:
            - accounts
            - suspended_until
          properties:
            accounts:
              type: array
              items:
                type: string
                format: address
                example: 0:0000000000000000000000000000000000000000000000000000000000000000
            suspended_until:
              type: integer
        "71":
          type: object
          description: Bridge parameters for wrapping TON in other networks.
          required:
            - oracle_bridge_params
          properties:
            oracle_bridge_params:
              $ref: '#/components/schemas/OracleBridgeParams'
        "72":
          type: object
          description: Bridge parameters for wrapping TON in other networks.
          required:
            - oracle_bridge_params
          properties:
            oracle_bridge_params:
              $ref: '#/components/schemas/OracleBridgeParams'
        "73":
          type: object
          description: Bridge parameters for wrapping TON in other networks.
          required:
            - oracle_bridge_params
          properties:
            oracle_bridge_params:
              $ref: '#/components/schemas/OracleBridgeParams'
        "79":
          type: object
          description: Bridge parameters for wrapping tokens from other networks into tokens on the TON network.
          required:
            - jetton_bridge_params
          properties:
            jetton_bridge_params:
              $ref: '#/components/schemas/JettonBridgeParams'
        "81":
          type: object
          description: Bridge parameters for wrapping tokens from other networks into tokens on the TON network.
          required:
            - jetton_bridge_params
          properties:
            jetton_bridge_params:
              $ref: '#/components/schemas/JettonBridgeParams'
        "82":
          type: object
          description: Bridge parameters for wrapping tokens from other networks into tokens on the TON network.
          required:
            - jetton_bridge_params
          properties:
            jetton_bridge_params:
              $ref: '#/components/schemas/JettonBridgeParams'
    DomainNames:
      type: object
      required:
        - domains
      properties:
        domains:
          type: array
          items:
            type: string
            example: vasya.ton
    DomainBid:
      type: object
      required:
        - success
        - value
        - txTime
        - bidder
        - txHash
      properties:
        success:
          type: boolean
          example: true
          default: false
        value:
          type: integer
          format: int64
          example: 1660050553
        txTime:
          type: integer
          format: int64
          example: 1660050553
        txHash:
          type: string
          example: 55e8809519cd3c49098c9ee45afdafcea7a894a74d0f628d94a115a50e045122
        bidder:
          $ref: '#/components/schemas/AccountAddress'
    DomainBids:
      type: object
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/DomainBid'
    JettonVerificationType:
      type: string
      enum:
        - whitelist
        - blacklist
        - none
    JettonPreview:
      type: object
      required:
        - address
        - name
        - symbol
        - decimals
        - verification
        - image
      properties:
        address:
          type: string
          format: address
          example: 0:0BB5A9F69043EEBDDA5AD2E946EB953242BD8F603FE795D90698CEEC6BFC60A0
        name:
          type: string
          example: Wrapped TON
        symbol:
          type: string
          example: WTON
        decimals:
          type: integer
          example: 9
        image:
          type: string
          example: https://cache.tonapi.io/images/jetton.jpg
        verification:
          $ref: '#/components/schemas/JettonVerificationType'
        custom_payload_api_uri: # todo: maybe remove
          type: string
    JettonBalance:
      type: object
      required:
        - balance
        - wallet_address
        - jetton
      properties:
        balance:
          type: string
          x-js-format: bigint
          example: "597968399"
        price:
          $ref: '#/components/schemas/TokenRates'
        wallet_address:
          $ref: '#/components/schemas/AccountAddress'
        jetton:
          $ref: '#/components/schemas/JettonPreview'
        extensions:
          type: array
          items:
            type: string
          example:
            - custom_payload
            - non_transferable
        lock:
          type: object
          required:
            - amount
            - till
          properties:
            amount:
              type: string
              x-js-format: bigint
              example: "597968399"
            till:
              type: integer
              format: int64
              example: 1678223064
    JettonsBalances:
      type: object
      required:
        - balances
      properties:
        balances:
          type: array
          items:
            $ref: '#/components/schemas/JettonBalance'
    Price:
      type: object
      required:
        - value
        - token_name
      properties:
        value:
          type: string
          x-js-format: bigint
          example: "123000000000"
        token_name:
          type: string
          example: TON
    ImagePreview:
      type: object
      required:
        - resolution
        - url
      properties:
        resolution:
          type: string
          example: "100x100"
        url:
          type: string
          example: "https://site.com/pic1.jpg"
    NftApprovedBy:
      type: array
      items:
        type: string
        example: getgems
        enum:
          - getgems
          - tonkeeper
    TrustType:
      type: string
      example: whitelist
      enum:
        - whitelist
        - graylist
        - blacklist
        - none
    Sale:
      type: object
      required:
        - address
        - market
        - price
      properties:
        address:
          type: string
          format: address
          example: 0:10C1073837B93FDAAD594284CE8B8EFF7B9CF25427440EB2FC682762E1471365
        market:
          $ref: '#/components/schemas/AccountAddress'
        owner:
          $ref: '#/components/schemas/AccountAddress'
        price:
          $ref: '#/components/schemas/Price'
    NftItem:
      type: object
      required:
        - address
        - index
        - verified
        - metadata
        - approved_by
        - trust
      properties:
        address:
          type: string
          format: address
          example: 0:E93E7D444180608B8520C00DC664383A387356FB6E16FDDF99DBE5E1415A574B
        index:
          type: integer
          format: int64
          example: 58
        owner:
          $ref: '#/components/schemas/AccountAddress'
        collection:
          type: object
          required:
            - address
            - name
            - description
          properties:
            address:
              type: string
              format: address
              example: 0:E93E7D444180608B8520C00DC664383A387356FB6E16FDDF99DBE5E1415A574B
            name:
              type: string
              example: TON Diamonds
            description:
              type: string
              example: "Best collection in TON network"
        verified:
          type: boolean
          description: "Collection master contract confirmed that this item is part of collection"
          example: true
        metadata:
          type: object
          additionalProperties: true
          example: { }
        sale:
          $ref: '#/components/schemas/Sale'
        previews:
          type: array
          items:
            $ref: '#/components/schemas/ImagePreview'
        dns:
          type: string
          example: crypto.ton
        approved_by:
          deprecated: true
          description: "please use trust field"
          $ref: '#/components/schemas/NftApprovedBy'
        include_cnft:
          type: boolean
          example: false
        trust:
          $ref: '#/components/schemas/TrustType'
    NftItems:
      type: object
      required:
        - nft_items
      properties:
        nft_items:
          type: array
          items:
            $ref: '#/components/schemas/NftItem'
    Multisigs:
      type: object
      required:
        - multisigs
      properties:
        multisigs:
          type: array
          items:
            $ref: '#/components/schemas/Multisig'
    Multisig:
      type: object
      required:
        - address
        - seqno
        - threshold
        - signers
        - proposers
        - orders
      properties:
        address:
          type: string
          format: address
          example: "0:da6b1b6663a0e4d18cc8574ccd9db5296e367dd9324706f3bbd9eb1cd2caf0bf"
        seqno:
          type: integer
          format: int64
          example: 1
        threshold:
          type: integer
          format: int32
        signers:
          type: array
          items:
            type: string
            format: address
            example: "0:da6b1b6663a0e4d18cc8574ccd9db5296e367dd9324706f3bbd9eb1cd2caf0bf"
        proposers:
          type: array
          items:
            type: string
            format: address
            example: "0:da6b1b6663a0e4d18cc8574ccd9db5296e367dd9324706f3bbd9eb1cd2caf0bf"
        orders:
          type: array
          items:
            $ref: '#/components/schemas/MultisigOrder'
    MultisigOrder:
      type: object
      required:
        - address
        - order_seqno
        - threshold
        - sent_for_execution
        - signers
        - approvals_num
        - expiration_date
        - risk
        - creation_date
        - signed_by
      properties:
        address:
          type: string
          format: address
          example: "0:da6b1b6663a0e4d18cc8574ccd9db5296e367dd9324706f3bbd9eb1cd2caf0bf"
        order_seqno:
          type: integer
          format: int64
          example: 1
        threshold:
          type: integer
          format: int32
        sent_for_execution:
          type: boolean
          example: false
        signers:
          type: array
          items:
            type: string
            format: address
            example: "0:da6b1b6663a0e4d18cc8574ccd9db5296e367dd9324706f3bbd9eb1cd2caf0bf"
        approvals_num:
          type: integer
          format: int32
        expiration_date:
          type: integer
          format: int64
        risk:
          $ref: '#/components/schemas/Risk'
        creation_date:
          type: integer
          format: int64
        signed_by:
          type: array
          items:
            type: string
            format: address
            example: "0:da6b1b6663a0e4d18cc8574ccd9db5296e367dd9324706f3bbd9eb1cd2caf0bf"
    Refund:
      type: object
      required:
        - type
        - origin
      properties:
        type:
          type: string
          example: DNS.ton
          enum:
            - DNS.ton
            - DNS.tg
            - GetGems
        origin:
          type: string
          example: "0:da6b1b6663a0e4d18cc8574ccd9db5296e367dd9324706f3bbd9eb1cd2caf0bf"
    ValueFlow:
      type: object
      required:
        - account
        - ton
        - fees
      properties:
        account:
          $ref: '#/components/schemas/AccountAddress'
        ton:
          type: integer
          format: int64
          x-js-format: bigint
          example: 80
        fees:
          type: integer
          format: int64
          x-js-format: bigint
          example: 10
        jettons:
          type: array
          items:
            type: object
            required:
              - account
              - quantity
              - jetton
            properties:
              account:
                $ref: '#/components/schemas/AccountAddress'
              jetton:
                $ref: '#/components/schemas/JettonPreview'
              quantity:
                type: integer
                format: int64
                x-js-format: bigint
                example: 10
    Action:
      type: object
      required:
        - type
        - status
        - simple_preview
        - base_transactions
      properties:
        type:
          type: string
          example: "TonTransfer"
          enum:
            - TonTransfer
            - JettonTransfer
            - JettonBurn
            - JettonMint
            - NftItemTransfer
            - ContractDeploy
            - Subscribe
            - UnSubscribe
            - AuctionBid
            - NftPurchase
            - DepositStake
            - WithdrawStake
            - WithdrawStakeRequest
            - JettonSwap
            - SmartContractExec
            - ElectionsRecoverStake
            - ElectionsDepositStake
            - DomainRenew
            - InscriptionTransfer
            - InscriptionMint
            - Unknown
        status:
          type: string
          example: "ok"
          enum:
            - ok
            - failed
        TonTransfer:
          $ref: '#/components/schemas/TonTransferAction'
        ContractDeploy:
          $ref: '#/components/schemas/ContractDeployAction'
        JettonTransfer:
          $ref: '#/components/schemas/JettonTransferAction'
        JettonBurn:
          $ref: '#/components/schemas/JettonBurnAction'
        JettonMint:
          $ref: '#/components/schemas/JettonMintAction'
        NftItemTransfer:
          $ref: '#/components/schemas/NftItemTransferAction'
        Subscribe:
          $ref: '#/components/schemas/SubscriptionAction'
        UnSubscribe:
          $ref: '#/components/schemas/UnSubscriptionAction'
        AuctionBid:
          $ref: '#/components/schemas/AuctionBidAction'
        NftPurchase:
          $ref: '#/components/schemas/NftPurchaseAction'
        DepositStake:
          $ref: '#/components/schemas/DepositStakeAction'
        WithdrawStake:
          $ref: '#/components/schemas/WithdrawStakeAction'
        WithdrawStakeRequest:
          $ref: '#/components/schemas/WithdrawStakeRequestAction'
        ElectionsDepositStake:
          $ref: '#/components/schemas/ElectionsDepositStakeAction'
        ElectionsRecoverStake:
          $ref: '#/components/schemas/ElectionsRecoverStakeAction'
        JettonSwap:
          $ref: '#/components/schemas/JettonSwapAction'
        SmartContractExec:
          $ref: '#/components/schemas/SmartContractAction'
        DomainRenew:
          $ref: '#/components/schemas/DomainRenewAction'
        InscriptionTransfer:
          $ref: '#/components/schemas/InscriptionTransferAction'
        InscriptionMint:
          $ref: '#/components/schemas/InscriptionMintAction'
        simple_preview:
          $ref: '#/components/schemas/ActionSimplePreview'
        base_transactions:
          type: array
          items:
            type: string
            description: "transaction hash"
            example: e8b0e3fee4a26bd2317ac1f9952fcdc87dc08fdb617656b5202416323337372e
    TonTransferAction:
      type: object
      required:
        - sender
        - recipient
        - amount
      properties:
        sender:
          $ref: '#/components/schemas/AccountAddress'
        recipient:
          $ref: '#/components/schemas/AccountAddress'
        amount:
          type: integer
          description: amount in nanotons
          format: int64
          example: 123456789
          x-js-format: bigint
        comment:
          type: string
          example: "Hi! This is your salary. \nFrom accounting with love."
        encrypted_comment:
          $ref: '#/components/schemas/EncryptedComment'
        refund:
          $ref: '#/components/schemas/Refund'
    SmartContractAction:
      type: object
      required:
        - executor
        - contract
        - ton_attached
        - operation
      properties:
        executor:
          $ref: '#/components/schemas/AccountAddress'
        contract:
          $ref: '#/components/schemas/AccountAddress'
        ton_attached:
          type: integer
          description: amount in nanotons
          format: int64
          example: 123456789
          x-js-format: bigint
        operation:
          type: string
          example: "NftTransfer or 0x35d95a12"
        payload:
          type: string
          # example ??, maybe cell?
        refund:
          $ref: '#/components/schemas/Refund'
    DomainRenewAction:
      type: object
      required:
        - domain
        - contract_address
        - renewer
      properties:
        domain:
          type: string
          example: "vasya.ton"
        contract_address:
          type: string
          format: address
          example: "0:da6b1b6663a0e4d18cc8574ccd9db5296e367dd9324706f3bbd9eb1cd2caf0bf"
        renewer:
          $ref: '#/components/schemas/AccountAddress'
    InscriptionMintAction:
      type: object
      required:
        - type
        - ticker
        - recipient
        - amount
        - decimals
      properties:
        recipient:
          $ref: '#/components/schemas/AccountAddress'
        amount:
          type: string
          x-js-format: bigint
          description: amount in minimal particles
          example: "123456789"
        type:
          type: string
          enum:
            - ton20
            - gram20
          example: "ton20"
        ticker:
          type: string
          example: "nano"
        decimals:
          type: integer
          example: 9
    InscriptionTransferAction:
      type: object
      required:
        - sender
        - recipient
        - amount
        - type
        - ticker
        - decimals
      properties:
        sender:
          $ref: '#/components/schemas/AccountAddress'
        recipient:
          $ref: '#/components/schemas/AccountAddress'
        amount:
          type: string
          x-js-format: bigint
          description: amount in minimal particles
          example: "123456789"
        comment:
          type: string
          example: "Hi! This is your salary. \nFrom accounting with love."
        type:
          type: string
          enum:
            - ton20
            - gram20
          example: "ton20"
        ticker:
          type: string
          example: "nano"
        decimals:
          type: integer
          example: 9
    NftItemTransferAction:
      type: object
      required:
        - nft
      properties:
        sender:
          $ref: '#/components/schemas/AccountAddress'
        recipient:
          $ref: '#/components/schemas/AccountAddress'
        nft:
          type: string
          example: ""
        comment:
          type: string
          example: "Hi! This is your salary. \nFrom accounting with love."
        encrypted_comment:
          $ref: '#/components/schemas/EncryptedComment'
        payload:
          type: string
          description: raw hex encoded payload
          example: '0234de3e21d21b3ee21f3'
        refund:
          $ref: '#/components/schemas/Refund'
    JettonTransferAction:
      type: object
      required:
        - amount
        - jetton
        - senders_wallet
        - recipients_wallet
      properties:
        sender:
          $ref: '#/components/schemas/AccountAddress'
        recipient:
          $ref: '#/components/schemas/AccountAddress'
        senders_wallet:
          type: string
          format: address
          example: 0:E93E7D444180608B8520C00DC664383A387356FB6E16FDDF99DBE5E1415A574B
        recipients_wallet:
          type: string
          format: address
          example: 0:E93E7D444180608B8520C00DC664383A387356FB6E16FDDF99DBE5E1415A574B
        amount:
          type: string
          x-js-format: bigint
          example: "1000000000"
          description: amount in quanta of tokens
        comment:
          type: string
          example: "Hi! This is your salary. \nFrom accounting with love."
        encrypted_comment:
          $ref: '#/components/schemas/EncryptedComment'
        refund:
          $ref: '#/components/schemas/Refund'
        jetton:
          $ref: '#/components/schemas/JettonPreview'
    JettonBurnAction:
      type: object
      required:
        - amount
        - jetton
        - sender
        - senders_wallet
      properties:
        sender:
          $ref: '#/components/schemas/AccountAddress'
        senders_wallet:
          type: string
          format: address
          example: 0:E93E7D444180608B8520C00DC664383A387356FB6E16FDDF99DBE5E1415A574B
        amount:
          type: string
          x-js-format: bigint
          example: "1000000000"
          description: amount in quanta of tokens
        jetton:
          $ref: '#/components/schemas/JettonPreview'
    JettonMintAction:
      type: object
      required:
        - amount
        - jetton
        - recipient
        - recipients_wallet
      properties:
        recipient:
          $ref: '#/components/schemas/AccountAddress'
        recipients_wallet:
          type: string
          format: address
          example: 0:E93E7D444180608B8520C00DC664383A387356FB6E16FDDF99DBE5E1415A574B
        amount:
          type: string
          x-js-format: bigint
          example: "1000000000"
          description: amount in quanta of tokens
        jetton:
          $ref: '#/components/schemas/JettonPreview'
    ContractDeployAction:
      type: object
      required:
        - address
        - interfaces
      properties:
        address:
          type: string
          format: address
          example: "0:da6b1b6663a0e4d18cc8574ccd9db5296e367dd9324706f3bbd9eb1cd2caf0bf"
        interfaces:
          type: array
          items:
            type: string
          example: [ "nft_item", "nft_royalty" ]
    SubscriptionAction:
      type: object
      required:
        - subscriber
        - subscription
        - beneficiary
        - amount
        - initial
      properties:
        subscriber:
          $ref: '#/components/schemas/AccountAddress'
        subscription:
          type: string
          format: address
          example: "0:da6b1b6663a0e4d18cc8574ccd9db5296e367dd9324706f3bbd9eb1cd2caf0bf"
        beneficiary:
          $ref: '#/components/schemas/AccountAddress'
        amount:
          type: integer
          format: int64
          example: 1000000000
          x-js-format: bigint
        initial:
          type: boolean
          example: false
    UnSubscriptionAction:
      type: object
      required:
        - subscriber
        - subscription
        - beneficiary
      properties:
        subscriber:
          $ref: '#/components/schemas/AccountAddress'
        subscription:
          type: string
          format: address
          example: "0:da6b1b6663a0e4d18cc8574ccd9db5296e367dd9324706f3bbd9eb1cd2caf0bf"
        beneficiary:
          $ref: '#/components/schemas/AccountAddress'
    AuctionBidAction:
      type: object
      required:
        - amount
        - bidder
        - auction
        - auction_type
      properties:
        auction_type:
          type: string
          enum:
            - DNS.ton
            - DNS.tg
            - NUMBER.tg
            - getgems
        amount:
          $ref: '#/components/schemas/Price'
        nft:
          $ref: '#/components/schemas/NftItem'
        bidder:
          $ref: '#/components/schemas/AccountAddress'
        auction:
          $ref: '#/components/schemas/AccountAddress'
    DepositStakeAction:
      description: "validator's participation in elections"
      type: object
      required:
        - amount
        - staker
        - pool
        - implementation
      properties:
        amount:
          type: integer
          format: int64
          x-js-format: bigint
          example: 1660050553
        staker:
          $ref: '#/components/schemas/AccountAddress'
        pool:
          $ref: '#/components/schemas/AccountAddress'
        implementation:
          $ref: '#/components/schemas/PoolImplementationType'
    WithdrawStakeAction:
      description: "validator's participation in elections"
      type: object
      required:
        - amount
        - staker
        - pool
        - implementation
      properties:
        amount:
          type: integer
          format: int64
          example: 1660050553
          x-js-format: bigint
        staker:
          $ref: '#/components/schemas/AccountAddress'
        pool:
          $ref: '#/components/schemas/AccountAddress'
        implementation:
          $ref: '#/components/schemas/PoolImplementationType'
    WithdrawStakeRequestAction:
      description: "validator's participation in elections"
      type: object
      required:
        - staker
        - pool
        - implementation
      properties:
        amount:
          type: integer
          format: int64
          example: 1660050553
          x-js-format: bigint
        staker:
          $ref: '#/components/schemas/AccountAddress'
        pool:
          $ref: '#/components/schemas/AccountAddress'
        implementation:
          $ref: '#/components/schemas/PoolImplementationType'
    ElectionsRecoverStakeAction:
      type: object
      required:
        - amount
        - staker
      properties:
        amount:
          type: integer
          format: int64
          example: 1660050553
          x-js-format: bigint
        staker:
          $ref: '#/components/schemas/AccountAddress'
    ElectionsDepositStakeAction:
      type: object
      required:
        - amount
        - staker
      properties:
        amount:
          type: integer
          format: int64
          example: 1660050553
          x-js-format: bigint
        staker:
          $ref: '#/components/schemas/AccountAddress'
    JettonSwapAction:
      type: object
      required:
        - dex
        - amount_in
        - amount_out
        - user_wallet
        - router
      properties:
        dex:
          type: string
          enum:
            - stonfi
            - dedust
            - megatonfi
        amount_in:
          type: string
          x-js-format: bigint
          example: "1660050553"
        amount_out:
          type: string
          x-js-format: bigint
          example: "1660050553"
        ton_in:
          type: integer
          example: 1000000000
          format: int64
          x-js-format: bigint
        ton_out:
          type: integer
          example: 2000000000
          format: int64
          x-js-format: bigint
        user_wallet:
          $ref: '#/components/schemas/AccountAddress'
        router:
          $ref: '#/components/schemas/AccountAddress'
        jetton_master_in:
          $ref: '#/components/schemas/JettonPreview'
        jetton_master_out:
          $ref: '#/components/schemas/JettonPreview'
    NftPurchaseAction:
      type: object
      required:
        - amount
        - seller
        - buyer
        - auction_type
        - nft
      properties:
        auction_type:
          type: string
          enum:
            - DNS.ton
            - DNS.tg
            - NUMBER.tg
            - getgems
        amount:
          $ref: '#/components/schemas/Price'
        nft:
          $ref: '#/components/schemas/NftItem'
        seller:
          $ref: '#/components/schemas/AccountAddress'
        buyer:
          $ref: '#/components/schemas/AccountAddress'
    ActionSimplePreview:
      type: object
      description: shortly describes what this action is about.
      required:
        - name
        - description
        - accounts
      properties:
        name:
          type: string
          example: "Ton Transfer"
        description:
          type: string
          example: "Transferring 5 Ton"
        action_image:
          type: string
          description: a link to an image for this particular action.
        value:
          type: string
          example: "5 Ton"
        value_image:
          type: string
          description: a link to an image that depicts this action's asset.
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/AccountAddress'
    AccountEvent:
      type: object
      description: An event is built on top of a trace which is a series of transactions caused by one inbound message. TonAPI looks for known patterns inside the trace and splits the trace into actions, where a single action represents a meaningful high-level operation like a Jetton Transfer or an NFT Purchase. Actions are expected to be shown to users. It is advised not to build any logic on top of actions because actions can be changed at any time.
      required:
        - event_id
        - timestamp
        - actions
        - account
        - is_scam
        - lt
        - in_progress
        - extra
      properties:
        event_id:
          type: string
          example: e8b0e3fee4a26bd2317ac1f9952fcdc87dc08fdb617656b5202416323337372e
        account:
          $ref: '#/components/schemas/AccountAddress'
        timestamp:
          type: integer
          format: int64
          example: 1234567890
        actions:
          type: array
          items:
            $ref: '#/components/schemas/Action'
        is_scam:
          type: boolean
          description: scam
          example: false
        lt:
          type: integer
          format: int64
          example: 25713146000001
          x-js-format: bigint
        in_progress:
          type: boolean
          example: false
          description: Event is not finished yet. Transactions still happening
        extra:
          description: TODO
          type: integer
          format: int64
          example: 3
    AccountEvents:
      type: object
      required:
        - events
        - next_from
      properties:
        events:
          type: array
          items:
            $ref: '#/components/schemas/AccountEvent'
        next_from:
          type: integer
          format: int64
          example: 25713146000001
    TraceID:
      type: object
      required:
        - id
        - utime
      properties:
        id:
          type: string
          example: 55e8809519cd3c49098c9ee45afdafcea7a894a74d0f628d94a115a50e045122
        utime:
          type: integer
          format: int64
          example: 1645544908
    TraceIDs:
      type: object
      required:
        - traces
      properties:
        traces:
          type: array
          items:
            $ref: '#/components/schemas/TraceID'
    ApyHistory:
      type: object
      required:
        - apy
        - time
      properties:
        apy:
          type: number
        time:
          type: integer
    Subscription:
      type: object
      required:
        - address
        - wallet_address
        - beneficiary_address
        - amount
        - period
        - start_time
        - timeout
        - last_payment_time
        - last_request_time
        - subscription_id
        - failed_attempts
      properties:
        address:
          type: string
          format: address
          example: 0:dea8f638b789172ce36d10a20318125e52c649aa84893cd77858224fe2b9b0ee
        wallet_address:
          type: string
          format: address
          example: 0:567DE86AF2B6A557D7085807CF7C26338124987A5179344F0D0FA2657EB710F1
        beneficiary_address:
          type: string
          format: address
          example: 0:c704dadfabac88eab58e340de03080df81ff76636431f48624ad6e26fb2da0a4
        amount:
          type: integer
          format: int64
          example: 1000000000
        period:
          type: integer
          format: int64
          example: 2592000
        start_time:
          type: integer
          format: int64
          example: 1653996832
        timeout:
          type: integer
          format: int64
          example: 10800
        last_payment_time:
          type: integer
          format: int64
          example: 1653996834
        last_request_time:
          type: integer
          format: int64
          example: 0
        subscription_id:
          type: integer
          format: int64
          example: 217477
        failed_attempts:
          type: integer
          format: int32
          example: 0
    Subscriptions:
      type: object
      required:
        - subscriptions
      properties:
        subscriptions:
          type: array
          items:
            $ref: '#/components/schemas/Subscription'
    Auction:
      type: object
      required:
        - domain
        - owner
        - price
        - bids
        - date
      properties:
        domain:
          type: string
          example: wallet.ton
        owner:
          type: string
          format: address
          example: 0:c704dadfabac88eab58e340de03080df81ff76636431f48624ad6e26fb2da0a4
        price:
          type: integer
          format: int64
          example: 1660050553
          x-js-format: bigint
        bids:
          type: integer
          format: int64
          example: 1660050553
          x-js-format: bigint
        date:
          type: integer
          format: int64
          example: 1660050553
    Auctions:
      type: object
      required:
        - data
        - total
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Auction'
        total:
          type: integer
          format: int64
          example: 1660050553
    WalletDNS:
      type: object
      required:
        - address
        - is_wallet
        - has_method_pubkey
        - has_method_seqno
        - names
        - account
      properties:
        address:
          type: string
          format: address
          example: "0:da6b1b6663a0e4d18cc8574ccd9db5296e367dd9324706f3bbd9eb1cd2caf0bf"
        account:
          $ref: '#/components/schemas/AccountAddress'
        is_wallet:
          type: boolean
          example: true
        has_method_pubkey:
          type: boolean
          example: true
        has_method_seqno:
          type: boolean
          example: true
        names:
          type: array
          items:
            type: string
            example: "name"
    DomainInfo:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        expiring_at:
          type: integer
          format: int64
          description: date of expiring. optional. not all domain in ton has expiration date
        item:
          $ref: '#/components/schemas/NftItem'
    DnsRecord:
      type: object
      required:
        - sites
      properties:
        wallet:
          $ref: '#/components/schemas/WalletDNS'
        next_resolver:
          type: string
          format: address
          example: "0:da6b1b6663a0e4d18cc8574ccd9db5296e367dd9324706f3bbd9eb1cd2caf0bf"
        sites:
          type: array
          items:
            type: string
            example: "http://12234.ton"
        storage:
          type: string
          description: "tonstorage bag id"
          example: "da6b1b6663a0e4d18cc8574ccd9db5296e367dd9324706f3bbd9eb1cd2caf0bf"
    NftCollection:
      type: object
      required:
        - address
        - next_item_index
        - raw_collection_content
        - approved_by
      properties:
        address:
          type: string
          format: address
          example: 0:FD595F36B4C1535BEC8461490D38EBB9AE3C38DD6ACE17CA63ABE2C6608BE159
        next_item_index:
          type: integer
          format: int64
          example: 1
        owner:
          $ref: '#/components/schemas/AccountAddress'
        raw_collection_content:
          type: string
          format: cell
        metadata:
          type: object
          additionalProperties: true
          example: { }
        previews:
          type: array
          items:
            $ref: '#/components/schemas/ImagePreview'
        approved_by:
          $ref: '#/components/schemas/NftApprovedBy'
    NftCollections:
      type: object
      required:
        - nft_collections
      properties:
        nft_collections:
          type: array
          items:
            $ref: '#/components/schemas/NftCollection'
    Trace:
      type: object
      required:
        - transaction
        - interfaces
      properties:
        transaction:
          $ref: '#/components/schemas/Transaction'
        interfaces:
          type: array
          items:
            type: string
          example: [ "wallet", "tep62_item" ]
        children:
          type: array
          items:
            $ref: '#/components/schemas/Trace'
        emulated:
          type: boolean
          example: false
    MessageConsequences:
      type: object
      required:
        - trace
        - risk
        - event
      properties:
        trace:
          $ref: '#/components/schemas/Trace'
        risk:
          $ref: '#/components/schemas/Risk'
        event:
          $ref: '#/components/schemas/AccountEvent'
    Risk:
      type: object
      description: Risk specifies assets that could be lost if a message would be sent to a malicious smart contract. It makes sense to understand the risk BEFORE sending a message to the blockchain.
      required:
        - transfer_all_remaining_balance
        - ton
        - jettons
        - nfts
      properties:
        transfer_all_remaining_balance:
          type: boolean
          description: transfer all the remaining balance of the wallet.
          example: true
        ton:
          type: integer
          format: int64
          example: 500
          x-js-format: bigint
        jettons:
          type: array
          items:
            $ref: '#/components/schemas/JettonQuantity'
        nfts:
          type: array
          items:
            $ref: '#/components/schemas/NftItem'
    JettonQuantity:
      type: object
      required:
        - quantity
        - wallet_address
        - jetton
      properties:
        quantity:
          type: string
          x-js-format: bigint
          example: "597968399"
        wallet_address:
          $ref: '#/components/schemas/AccountAddress'
        jetton:
          $ref: '#/components/schemas/JettonPreview'
    DecodedMessage:
      type: object
      required:
        - destination
        - destination_wallet_version
      properties:
        destination:
          $ref: '#/components/schemas/AccountAddress'
        destination_wallet_version:
          type: string
          example: "v3R2"
        ext_in_msg_decoded:
          type: object
          properties:
            wallet_v3:
              type: object
              required:
                - subwallet_id
                - valid_until
                - seqno
                - op
                - raw_messages
              properties:
                subwallet_id:
                  type: integer
                  format: int64
                  example: 1
                valid_until:
                  type: integer
                  format: int64
                  example: 1
                seqno:
                  type: integer
                  format: int64
                  example: 1
                raw_messages:
                  type: array
                  items:
                    $ref: '#/components/schemas/DecodedRawMessage'
            wallet_v4:
              type: object
              required:
                - subwallet_id
                - valid_until
                - seqno
                - op
                - raw_messages
              properties:
                subwallet_id:
                  type: integer
                  format: int64
                  example: 1
                valid_until:
                  type: integer
                  format: int64
                  example: 1
                seqno:
                  type: integer
                  format: int64
                  example: 1
                op:
                  type: integer
                  format: int32
                  example: 1
                raw_messages:
                  type: array
                  items:
                    $ref: '#/components/schemas/DecodedRawMessage'
            wallet_v5:
              type: object
              required:
                - raw_messages
              properties:
                raw_messages:
                  type: array
                  items:
                    $ref: '#/components/schemas/DecodedRawMessage'
            wallet_highload_v2:
              type: object
              required:
                - subwallet_id
                - bounded_query_id
                - raw_messages
              properties:
                subwallet_id:
                  type: integer
                  format: int64
                  example: 1
                bounded_query_id:
                  type: string
                  example: "34254528475294857"
                raw_messages:
                  type: array
                  items:
                    $ref: '#/components/schemas/DecodedRawMessage'
    DecodedRawMessage:
      type: object
      required:
        - message
        - mode
      properties:
        message:
          type: object
          required:
            - boc
          properties:
            boc:
              type: string
              format: cell
            decoded_op_name:
              type: string
              example: "nft_transfer"
            op_code:
              type: string
              x-js-format: bigint
              example: "0xdeadbeaf"
            decoded_body: { } # Free-form JSON value
        mode:
          type: integer
          example: 2
    Event:
      type: object
      required:
        - event_id
        - timestamp
        - actions
        - value_flow
        - is_scam
        - lt
        - in_progress
      properties:
        event_id:
          type: string
          example: e8b0e3fee4a26bd2317ac1f9952fcdc87dc08fdb617656b5202416323337372e
        timestamp:
          type: integer
          format: int64
          example: 1234567890
        actions:
          type: array
          items:
            $ref: '#/components/schemas/Action'
        value_flow:
          type: array
          items:
            $ref: '#/components/schemas/ValueFlow'
        is_scam:
          type: boolean
          description: scam
          example: false
        lt:
          type: integer
          format: int64
          example: 25713146000001
          x-js-format: bigint
        in_progress:
          type: boolean
          example: false
          description: Event is not finished yet. Transactions still happening
    JettonMetadata:
      type: object
      required:
        - address
        - name
        - symbol
        - decimals
      properties:
        address:
          type: string
          format: address
          example: 0:0BB5A9F69043EEBDDA5AD2E946EB953242BD8F603FE795D90698CEEC6BFC60A0
        name:
          type: string
          example: Wrapped TON
        symbol:
          type: string
          example: WTON
        decimals:
          type: string
          example: "9"
        image:
          type: string
          example: "https://cache.tonapi.io/images/jetton.jpg"
        description:
          type: string
          example: Wrapped Toncoin
        social:
          type: array
          items:
            type: string
            example: [ "https://t.me/durov_coin", "https://twitter.com/durov_coin" ]
        websites:
          type: array
          items:
            type: string
            example: [ "https://durov.coin", "ton://durov-coin.ton" ]
        catalogs:
          type: array
          items:
            type: string
            example: [ "https://coinmarketcap.com/currencies/drv/", "https://www.coingecko.com/en/coins/durov" ]
        custom_payload_api_uri:
          type: string
          example: "https://claim-api.tonapi.io/jettons/TESTMINT"
    InscriptionBalances:
      type: object
      required:
        - inscriptions
      properties:
        inscriptions:
          type: array
          items:
            $ref: '#/components/schemas/InscriptionBalance'
    InscriptionBalance:
      type: object
      required:
        - type
        - ticker
        - balance
        - decimals
      properties:
        type:
          type: string
          enum:
            - ton20
            - gram20
          example: "ton20"
        ticker:
          type: string
          example: "nano"
        balance:
          type: string
          x-js-format: bigint
          example: "1000000000"
        decimals:
          type: integer
          example: 9
    Jettons:
      type: object
      required:
        - jettons
      properties:
        jettons:
          type: array
          items:
            $ref: '#/components/schemas/JettonInfo'
    JettonInfo:
      type: object
      required:
        - mintable
        - total_supply
        - metadata
        - verification
        - holders_count
      properties:
        mintable:
          type: boolean
          example: true
        total_supply:
          type: string
          x-js-format: bigint
          example: "5887105890579978"
        admin:
          $ref: '#/components/schemas/AccountAddress'
        metadata:
          $ref: '#/components/schemas/JettonMetadata'
        verification:
          $ref: '#/components/schemas/JettonVerificationType'
        holders_count:
          type: integer
          format: int32
          example: 2000
    JettonHolders:
      type: object
      required:
        - addresses
        - total
      properties:
        addresses:
          type: array
          items:
            type: object
            required:
              - address
              - owner
              - balance
            properties:
              address:
                type: string
                format: address
                example: 0:10C1073837B93FDAAD594284CE8B8EFF7B9CF25427440EB2FC682762E1471365
              owner:
                $ref: '#/components/schemas/AccountAddress'
              balance:
                type: string
                x-js-format: bigint
                example: "168856200518084"
                description: balance in the smallest jetton's units
        total:
          type: integer
          format: int64
          description: total number of holders
          example: 2000
    JettonTransferPayload:
      type: object
      required:
        - payload
      properties:
        custom_payload:
          type: string
          # format: ???
          example: "b5ee9c72410212010001b40009460395b521c9251151ae7987e03c544bd275d6cd42c2d157f840beb14d5454b96718000d012205817002020328480101fd7f6a648d4f771d7f0abc1707e4e806b19de1801f65eb8c133a4cfb0c33d847000b22012004052848010147da975b922d89192f4c9b68a640daa6764ec398c93cec025e17f0c1852a711a0009220120061122012007082848010170d9fb0423cbef6c2cf1f3811a2f640daf8c9a326b6f8816c1b993e90d88e2100006220120090a28480101f6df1d75f6b9e45f224b2cb4fc2286d927d47b468b6dbf1fedc4316290ec2ae900042201200b102201200c0f2201200d"
          description: "hex-encoded BoC"
        state_init:
          type: string
          # format: ???
          example: "b5ee9c72410212010001b40009460395b521c9251151ae7987e03c544bd275d6cd42c2d157f840beb14d5454b96718000d012205817002020328480101fd7f6a648d4f771d7f0abc1707e4e806b19de1801f65eb8c133a4cfb0c33d847000b22012004052848010147da975b922d89192f4c9b68a640daa6764ec398c93cec025e17f0c1852a711a0009220120061122012007082848010170d9fb0423cbef6c2cf1f3811a2f640daf8c9a326b6f8816c1b993e90d88e2100006220120090a28480101f6df1d75f6b9e45f224b2cb4fc2286d927d47b468b6dbf1fedc4316290ec2ae900042201200b102201200c0f2201200d"
          description: "hex-encoded BoC"
    AccountStaking:
      type: object
      required:
        - pools
      properties:
        pools:
          type: array
          items:
            $ref: '#/components/schemas/AccountStakingInfo'
    AccountStakingInfo:
      type: object
      required:
        - pool
        - amount
        - pending_deposit
        - pending_withdraw
        - ready_withdraw
      properties:
        pool:
          type: string
          example: "EQBI-wGVp_x0VFEjd7m9cEUD3tJ_bnxMSp0Tb9qz757ATEAM"
        amount:
          type: integer
          format: int64
          example: 10050000000000
          x-js-format: bigint
        pending_deposit:
          type: integer
          format: int64
          example: 500000000000
          x-js-format: bigint
        pending_withdraw:
          type: integer
          format: int64
          example: 500000000000
          x-js-format: bigint
        ready_withdraw:
          type: integer
          format: int64
          example: 500000000000
          x-js-format: bigint
    PoolInfo:
      type: object
      required:
        - address
        - total_amount
        - implementation
        - apy
        - name
        - min_stake
        - cycle_start
        - cycle_end
        - verified
        - current_nominators
        - max_nominators
        - nominators_stake
        - validator_stake
      properties:
        address:
          type: string
          format: address
          example: "0:48fb0195a7fc7454512377b9bd704503ded27f6e7c4c4a9d136fdab3ef9ec04c"
        name:
          type: string
          example: "Tonkeeper pool"
        total_amount:
          type: integer
          format: int64
          x-js-format: bigint
        implementation:
          $ref: '#/components/schemas/PoolImplementationType'
        apy:
          type: number
          description: APY in percent
          example: 5.31
        min_stake:
          type: integer
          format: int64
          x-js-format: bigint
          example: 5000000000
        cycle_start:
          type: integer
          description: current nomination cycle beginning timestamp
          format: int64
          example: 1678223064
        cycle_end:
          type: integer
          description: current nomination cycle ending timestamp
          format: int64
          example: 1678223064
        verified:
          type: boolean
          example: true
          description: this pool has verified source code or managed by trusted company
        current_nominators:
          type: integer
          example: 10
          description: current number of nominators
        max_nominators:
          type: integer
          example: 100
          description: maximum number of nominators
        liquid_jetton_master:
          type: string
          format: address
          example: "0:4a91d32d0289bda9813ae00ff7640e6c38fdce76e4583dd6afc463b70c7d767c"
          description: "for liquid staking master account of jetton"
        nominators_stake:
          type: integer
          format: int64
          x-js-format: bigint
          example: 5000000000
          description: "total stake of all nominators"
        validator_stake:
          type: integer
          format: int64
          x-js-format: bigint
          example: 5000000000
          description: "stake of validator"
        cycle_length:
          type: integer
          format: int64
    PoolImplementation:
      type: object
      required:
        - name
        - description
        - url
        - socials
      properties:
        name:
          type: string
          example: TON Whales
        description:
          type: string
          example: "Oldest pool with minimal staking amount 50 TON"
        url:
          type: string
          example: "https://tonvalidators.org/"
        socials:
          type: array
          items:
            type: string
            example: "https://t.me/tonwhales"
    StorageProvider:
      type: object
      required:
        - address
        - accept_new_contracts
        - rate_per_mb_day
        - max_span
        - minimal_file_size
        - maximal_file_size
      properties:
        address:
          type: string
          format: address
          example: 0:FD595F36B4C1535BEC8461490D38EBB9AE3C38DD6ACE17CA63ABE2C6608BE159
        accept_new_contracts:
          type: boolean
          example: true
        rate_per_mb_day:
          type: integer
          format: int64
          x-js-format: bigint
          example: 50000000
        max_span:
          type: integer
          format: int64
          example: 604800
        minimal_file_size:
          type: integer
          format: int64
          example: 64
        maximal_file_size:
          type: integer
          format: int64
          example: 10485760
    FoundAccounts:
      type: object
      required:
        - addresses
      properties:
        addresses:
          type: array
          items:
            type: object
            required:
              - address
              - name
              - preview
            properties:
              address:
                type: string
                format: address
              name:
                type: string
                example: "blah_blah.ton"
              preview:
                type: string
                example: "https://cache.tonapi.io/images/media.jpg"
    DnsExpiring:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            type: object
            required:
              - expiring_at
              - name
            properties:
              expiring_at:
                type: integer
                format: int64
                example: 1678275313
              name:
                type: string
                example: "blah_blah.ton"
              dns_item:
                $ref: '#/components/schemas/NftItem'
    AccountInfoByStateInit:
      type: object
      required:
        - public_key
        - address
      properties:
        public_key:
          type: string
          example: "NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODQ3..."
        address:
          type: string
          format: address
          example: "0:97146a46acc2654y27947f14c4a4b14273e954f78bc017790b41208b0043200b"
    Seqno:
      type: object
      required:
        - seqno
      properties:
        seqno:
          type: integer
          format: int32
    BlockRaw:
      type: object
      required:
        - workchain
        - shard
        - seqno
        - root_hash
        - file_hash
      properties:
        workchain:
          type: integer
          example: 4294967295
          format: int32
        shard:
          type: string
          # x-js-format: bigint ??
          example: "800000000000000"
        seqno:
          type: integer
          example: 30699640
          format: int32
        root_hash:
          type: string
          example: 131D0C65055F04E9C19D687B51BC70F952FD9CA6F02C2801D3B89964A779DF85
        file_hash:
          type: string
          example: A6A0BD6608672B11B79538A50B2204E748305C12AA0DED9C16CF0006CE3AF8DB
    InitStateRaw:
      type: object
      required:
        - workchain
        - root_hash
        - file_hash
      properties:
        workchain:
          type: integer
          example: 4294967295
          format: int32
        root_hash:
          type: string
          example: 131D0C65055F04E9C19D687B51BC70F952FD9CA6F02C2801D3B89964A779DF85
        file_hash:
          type: string
          example: A6A0BD6608672B11B79538A50B2204E748305C12AA0DED9C16CF0006CE3AF8DB
    EncryptedComment:
      type: object
      required:
        - encryption_type
        - cipher_text
      properties:
        encryption_type:
          type: string
          example: "simple"
        cipher_text:
          type: string
          example: "A6A0BD6608672B...CE3AF8DB"
    BlockchainAccountInspect:
      type: object
      required:
        - code
        - code_hash
        - methods
      properties:
        code:
          type: string
          format: cell
        code_hash:
          type: string
        methods:
          type: array
          items:
            type: object
            required:
              - id
              - method
            properties:
              id:
                type: integer
                format: int64
              method:
                type: string
                example: "get_something"
        compiler:
          type: string
          enum:
            - func
    PoolImplementationType:
      type: string
      enum:
        - whales
        - tf
        - liquidTF
    TokenRates:
      type: object
      properties:
        prices:
          type: object
          additionalProperties:
            type: number
          example:
            TON: 1.3710752873163712
        diff_24h:
          type: object
          additionalProperties:
            type: string
          example:
            TON: "-1.28%"
        diff_7d:
          type: object
          additionalProperties:
            type: string
          example:
            TON: "-2.74%"
        diff_30d:
          type: object
          additionalProperties:
            type: string
          example:
            TON: "-0.56%"
    MarketTonRates:
      type: object
      required:
        - market
        - usd_price
        - last_date_update
      properties:
        market:
          type: string
          example: "OKX"
        usd_price:
          type: number
          example: 5.20
        last_date_update:
          type: integer
          format: int64
          example: 1668436763

  responses:
    Error:
      description: Some error during request processing
      content:
        application/json:
          schema:
            type: object
            required:
              - error
            properties:
              error:
                type: string
              error-key:
                type: string
              error-details:
                type: string
