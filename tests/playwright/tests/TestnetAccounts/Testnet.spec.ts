import { test, expect } from '@playwright/test';

//Add one testnet account 
test.setTimeout(4 * 60 * 1000);

test('Add 1 testnet', async ({ page }) => {
  await page.goto('/');
  await page.getByRole('button', { name: 'Get started' }).click();
  await page.getByRole('button', { name: 'Testnet Account Import wallet' }).click();
  await expect(page.getByRole('heading', { name: 'Enter your recovery phrase' })).toBeVisible();
  await expect(page.locator('h2')).toContainText('Enter your recovery phrase');
  await expect(page.getByText('To restore access to your')).toBeVisible();
  await expect(page.locator('#react-portal-modal-container')).toContainText('To restore access to your wallet, enter the 24 secret recovery words given to you when you created your wallet.');
  await page.getByLabel('1:', { exact: true }).click();
  await page.getByLabel('1:', { exact: true }).fill(process.env.TON_MNEMONIC_ANANAS);
  await page.getByRole('button', { name: 'Continue' }).click();
  await expect(page.getByText('0QBW‚Ä¶lsqP ¬∑ 0 TON')).toBeVisible();
  await expect(page.locator('div:nth-child(5) > .sc-jNMdxs')).toBeVisible();
  await expect(page.getByText('0QD-‚Ä¶agbX')).toBeVisible();
  await expect(page.locator('#react-portal-modal-container')).toContainText('0QD-‚Ä¶agbX');
  await page.getByRole('button', { name: 'Continue' }).click();
  await page.getByLabel('Password', { exact: true }).fill('1234567');
  await page.getByLabel('Re-enter password').click();
  await page.getByLabel('Re-enter password').fill('1234567');
  await page.getByRole('button', { name: 'Continue' }).click();
  await page.getByLabel('Wallet name').fill('Ananas');
  await page.getByRole('button', { name: 'Save' }).click();
  await expect(page.getByRole('link', { name: 'Testnet' })).toBeVisible();
  await expect(page.locator('#root')).toContainText('Testnet');
  await expect(page.getByText('Ananas').first()).toBeVisible();
  await expect(page.getByText('0QD-‚Ä¶agbX').first()).toBeVisible();
  await expect(page.locator('#root')).toContainText('0QD-‚Ä¶agbX');
  await expect(page.locator('#root')).toContainText('W5');
  await expect(page.getByText('W5').first()).toBeVisible();
  await expect(page.locator('div').filter({ hasText: /^Ananas0QD-‚Ä¶agbXW5$/ }).locator('path')).toBeVisible();
  await expect(page.getByText('üçç')).toBeVisible();
  await expect(page.locator('div').filter({ hasText: /^Dashboard$/ })).toBeVisible();
  await expect(page.locator('div').filter({ hasText: /^Discover$/ })).toBeVisible();
  await expect(page.getByRole('button', { name: 'Ananas Testnet 0QD-‚Ä¶agbX W5' })).toBeVisible();
  await expect(page.locator('#root')).toContainText('0QD-‚Ä¶agbX');
  await expect(page.locator('#root')).toContainText('W5');
  await expect(page.locator('#root')).toContainText('0QAT‚Ä¶ddQF');
  await expect(page.locator('#root')).toContainText('W5 beta');
  await expect(page.locator('#root')).toContainText('0QD2‚Ä¶G4so');
  await expect(page.locator('#root')).toContainText('v4R2');
  await expect(page.locator('#root')).toContainText('0QDj‚Ä¶pFAl');
  await expect(page.locator('#root')).toContainText('v3R2');
  await page.getByRole('link', { name: 'Settings' }).click();
  await page.getByText('Delete Account').click();
  await page
    .locator('div')
    .filter({ hasText: /^I have a backup copy of recovery phrase$/ })
    .locator('div')
    .click();
  await page.getByRole('button', { name: 'Delete wallet data' }).click();
});

//Add two testnet accounts to the list

test('Add 2 testnets', async ({ page }) => {
  await page.goto('/');
  await page.getByRole('button', { name: 'Get started' }).click();
  await page.getByRole('button', { name: 'Testnet Account Import wallet' }).click();
  await page.getByLabel('1:', { exact: true }).fill(process.env.TON_MNEMONIC_ANANAS);
  await page.getByRole('button', { name: 'Continue' }).click();
  await expect(page.getByText('0QBW‚Ä¶lsqP ¬∑ 0 TON')).toBeVisible();
  await expect(page.getByText('0QD-‚Ä¶agbX')).toBeVisible();
  await page.getByRole('button', { name: 'Continue' }).click();
  await page.getByLabel('Password', { exact: true }).fill('1234567');
  await page.getByLabel('Re-enter password').click();
  await page.getByLabel('Re-enter password').fill('1234567');
  await page.getByRole('button', { name: 'Continue' }).click();
  await page.getByLabel('Wallet name').fill('Ananas');
  await page.getByRole('button', { name: 'Save' }).click();
  await expect(page.getByRole('link', { name: 'Testnet' })).toBeVisible();
  await expect(page.locator('#root')).toContainText('Testnet');
  await expect(page.getByText('Ananas').first()).toBeVisible();
  await expect(page.getByText('0QD-‚Ä¶agbX').first()).toBeVisible();
  await expect(page.locator('#root')).toContainText('0QD-‚Ä¶agbX');
  await expect(page.locator('#root')).toContainText('W5');
  await expect(page.getByText('W5').first()).toBeVisible();
  await expect(page.locator('div').filter({ hasText: /^Ananas0QD-‚Ä¶agbXW5$/ }).locator('path')).toBeVisible();
  await expect(page.getByText('üçç')).toBeVisible();
  await expect(page.locator('div').filter({ hasText: /^Dashboard$/ })).toBeVisible();
  await expect(page.locator('div').filter({ hasText: /^Discover$/ })).toBeVisible();
  await expect(page.getByRole('button', { name: 'Ananas Testnet 0QD-‚Ä¶agbX W5' })).toBeVisible();
  await expect(page.locator('#root')).toContainText('0QD-‚Ä¶agbX');
  await expect(page.locator('#root')).toContainText('W5');
  await expect(page.locator('#root')).toContainText('0QAT‚Ä¶ddQF');
  await expect(page.locator('#root')).toContainText('W5 beta');
  await expect(page.locator('#root')).toContainText('0QD2‚Ä¶G4so');
  await expect(page.locator('#root')).toContainText('v4R2');
  await expect(page.locator('#root')).toContainText('0QDj‚Ä¶pFAl');
  await expect(page.locator('#root')).toContainText('v3R2');
  await page.locator('#react-portal-modal-container').getByRole('button').first().click();
  await page.getByText('Add Wallet').click();
  await page.getByRole('button', { name: 'Testnet Account Import wallet' }).click();
  await page.getByLabel('1:', { exact: true }).click();
  await page.getByLabel('1:', { exact: true }).fill(process.env.TON_MNEMONIC_24);
  await page.getByRole('button', { name: 'Continue' }).click();
  await expect(page.getByText('0QDC‚Ä¶QPPc ¬∑ 0 TON')).toBeVisible();
  await expect(page.locator('#react-portal-modal-container')).toContainText('0QDC‚Ä¶QPPc ¬∑ 0 TON');
  await expect(page.getByText('0QDm‚Ä¶Unvx ¬∑ 0 TON')).toBeVisible();
  await expect(page.getByText('0QAG‚Ä¶g5mE ¬∑ 0 TON')).toBeVisible();
  await expect(page.getByText('0QC0‚Ä¶65WC ¬∑ 0 TON')).toBeVisible();
  await expect(page.getByText('0QCk‚Ä¶ycj6 ¬∑ 0 TON')).toBeVisible();
  await page.getByRole('button', { name: 'Continue' }).click();
  await page.getByLabel('Password').fill('1234567');
  await page.locator('div:nth-child(2) > .sc-gGmKOd > .sc-jgHCeW > .sc-eJMOVy > .sc-fbkieD > .overflow-hidden > div > .sc-fWSCoS').click();
  await page.getByRole('button', { name: 'Confirm' }).click();
  await expect(page.getByRole('link', { name: 'Testnet' })).toBeVisible();
  await expect(page.getByRole('button', { name: 'üë≥‚Äç‚ôÇÔ∏è Account 2 Testnet' })).toBeVisible();
  await expect(page.locator('#root')).toContainText('Testnet');
  await expect(page.locator('#root')).toContainText('Account 2');
  await expect(page.getByText('0QDC‚Ä¶QPPc')).toBeVisible();
  await page.getByRole('button', { name: 'üë≥‚Äç‚ôÇÔ∏è Account 2 Testnet' }).getByRole('button').click();
  await page.getByRole('button', { name: 'Add' }).nth(2).click();
  await page.getByRole('button', { name: 'Add' }).nth(1).click();
  await expect(page.getByText('v3R20QC0‚Ä¶65WC ¬∑ 0 TON')).toBeVisible();
  await expect(page.getByText('v4R20QAG‚Ä¶g5mE ¬∑ 0 TON')).toBeVisible();
  await expect(page.getByText('W50QDC‚Ä¶QPPc ¬∑ 0 TON')).toBeVisible();
  await page.getByRole('button', { name: 'Hide' }).first().click();
  await page.getByRole('button', { name: 'Open' }).first().click();
  await expect(page.getByText('Account 20QAG‚Ä¶g5mEv4R2üë≥‚Äç‚ôÇÔ∏è')).toBeVisible();
  await expect(page.locator('#root')).toContainText('Account 20QAG‚Ä¶g5mEv4R2üë≥‚Äç‚ôÇÔ∏è');
  await page.locator('div').filter({ hasText: /^Preferences$/ }).click();
  await page.locator('div').filter({ hasText: /^Sign Out of all Accounts$/ }).first().click();
  await page.locator('div').filter({ hasText: /^I have a backup copy of recovery phrase$/ }).locator('div').click();
  await page.getByRole('button', { name: 'Delete wallet data' }).click();
  await expect(page.getByRole('button', { name: 'Get started' })).toBeVisible();
});

test('Mainnet + testnet', async ({ page }) => {
  await page.goto('/');
  await page.getByRole('button', { name: 'Get started' }).click();
  await page.getByRole('button', { name: 'Existing Wallet Import wallet' }).click();
  await page.getByLabel('1:', { exact: true }).click();
  await page.getByLabel('1:', { exact: true }).fill(process.env.TON_MNEMONIC_ANANAS);
  await page.getByRole('button', { name: 'Continue' }).click();
  await page.getByRole('button', { name: 'Continue' }).click();
  await page.getByLabel('Password', { exact: true }).fill('123456??');
  await page.getByLabel('Re-enter password').click();
  await page.getByLabel('Re-enter password').fill('123456??');
  await page.getByRole('button', { name: 'Continue' }).click();
  await page.getByRole('button', { name: 'Save' }).click();
  await expect(page.getByText('Account 1UQBA‚Ä¶OP8VW5üçç')).toBeVisible();
  await expect(page.getByRole('button', { name: 'Account 1 UQBA‚Ä¶OP8V W5 UQDH‚Ä¶' })).toBeVisible();
  await expect(page.locator('#root')).toContainText('UQBA‚Ä¶OP8V');
  await expect(page.locator('#root')).toContainText('UQDH‚Ä¶TkZ5');
  await expect(page.locator('#root')).toContainText('UQD2‚Ä¶GzCi');
  await expect(page.locator('#root')).toContainText('UQDj‚Ä¶pOuv');
  await expect(page.locator('#root')).toContainText('UQBW‚Ä¶lnEF');
  await page.locator('div').filter({ hasText: /^Add Wallet$/ }).click();
  await page.getByRole('button', { name: 'Testnet Account Import wallet' }).click();
  await page.getByLabel('1:', { exact: true }).click();
  await page.getByLabel('1:', { exact: true }).fill(process.env.TON_MNEMONIC_ANANAS);
  await page.getByRole('button', { name: 'Continue' }).click();
  await expect(page.locator('#react-portal-modal-container')).toContainText('v3R20QDj‚Ä¶pFAl');
  await expect(page.locator('#react-portal-modal-container')).toContainText('v4R20QD2‚Ä¶G4so');
  await expect(page.locator('#react-portal-modal-container')).toContainText('0QAT‚Ä¶ddQF');
  await expect(page.locator('#react-portal-modal-container')).toContainText('W50QD-‚Ä¶agbX');
  await page.getByRole('button', { name: 'Continue' }).click();
  await page.getByLabel('Password').fill('123456??');
  await page.getByRole('button', { name: 'Confirm' }).click();
  await page.getByRole('button', { name: 'Save' }).click();
  await expect(page.getByRole('heading', { name: 'Congratulations! You‚Äôve set' })).toBeVisible();
  await expect(page.getByText('Account 10QD-‚Ä¶agbXW5üçç')).toBeVisible();
  await expect(page.locator('#root')).toContainText('0QD-‚Ä¶agbX');
  await expect(page.locator('#root')).toContainText('0QAT‚Ä¶ddQF');
  await expect(page.locator('#root')).toContainText('0QD2‚Ä¶G4so');
  await expect(page.locator('#root')).toContainText('0QDj‚Ä¶pFAl');
  await expect(page.getByRole('button', { name: 'üçç Account 1 Testnet 0QD-‚Ä¶' })).toBeVisible();
  await expect(page.getByRole('link', { name: 'Testnet' })).toBeVisible();
});