import { test, expect } from '@playwright/test';

test('test', async ({ page }) => {
  await page.goto('/');
  await page.getByRole('button', { name: 'Get started' }).click();
  await page.getByRole('button', { name: 'Existing Wallet Import wallet' }).click();
  await page.getByLabel('1:', { exact: true }).click();
  await page.getByLabel('1:', { exact: true }).fill(process.env.TON_MNEMONIC_ANANAS);
  await page.getByRole('button', { name: 'Continue' }).click();
  await page.getByRole('button', { name: 'Continue' }).click();
  await page.locator('#create-password').fill('a]HmC.;MAcQJ[+Y@&r!-3h');
  await page.locator('#create-password-confirm').fill('a]HmC.;MAcQJ[+Y@&r!-3h');
  await page.getByRole('button', { name: 'Continue' }).click();
  await page.getByRole('button', { name: 'Save' }).click();
  await page.getByRole('button', { name: 'Multi Send' }).click();
  await expect(page.locator('div').filter({ hasText: /^New Multi Send$/ })).toBeVisible();
  await expect(page.locator('div').filter({ hasText: /^New List$/ })).toBeVisible();
  await expect(page.locator('div').filter({ hasText: /^Import CSV$/ })).toBeVisible();
  await page.locator('div').filter({ hasText: /^New List$/ }).click();
  await expect(page.locator('div').filter({ hasText: /^List 1$/ })).toBeVisible();
  await expect(page.getByText('TONExport .CSVImport .CSV')).toBeVisible();
  await expect(page.locator('input[name="rows\\.0\\.receiver"]')).toBeVisible();
  await expect(page.getByText('TONUSD').first()).toBeVisible();
  await expect(page.locator('input[name="rows\\.0\\.comment"]')).toBeVisible();
  await expect(page.locator('input[name="rows\\.1\\.receiver"]')).toBeVisible();
  await expect(page.locator('form').getByRole('button').first()).toBeVisible();
  await expect(page.getByRole('button', { name: 'Add More' })).toBeVisible();
  await page.getByRole('button', { name: 'Add More' }).click();
  await expect(page.locator('input[name="rows\\.2\\.receiver"]')).toBeVisible();
  await expect(page.getByRole('button', { name: 'Save List' })).toBeVisible();
  await page.getByRole('button', { name: 'Save List' }).click();
  await expect(page.getByText('Save this List?')).toBeVisible();
  await expect(page.getByText('Save the list with addresses')).toBeVisible();
  await expect(page.locator('#react-portal-modal-container')).toContainText('Save the list with addresses, amounts, and comments for future use.');
  await expect(page.getByPlaceholder('List name')).toBeVisible();
  await expect(page.getByRole('button', { name: 'Close' })).toBeVisible();
  await page.getByRole('button', { name: 'Close' }).click();
  await page.locator('input[name="rows\\.0\\.receiver"]').click();
  await page.locator('input[name="rows\\.0\\.receiver"]').click();
  await page.locator('input[name="rows\\.0\\.receiver"]').fill('UQBvVIh4DhKs66NL7WLEUqY52Uw95agOP7AkQO3IFOgQbcZ6');
  await page.locator('input[name="rows\\.1\\.receiver"]').click();
  await page.locator('input[name="rows\\.1\\.receiver"]').fill('UQDJ3uzSvsW4TGnWfcmBOKpQBqRpMEbwsJJ66ci4bdOISXO9');
  await page.locator('input[name="rows\\.2\\.receiver"]').click();
  await page.locator('input[name="rows\\.2\\.receiver"]').fill('UQBvVIh4DhKs66NL7WLEUqY52Uw95agOP7AkQO3IFOgQbcZ6');
  await page.locator('[id="\\:r0\\:"]').click();
  await page.locator('[id="\\:r0\\:"]').fill('0.01');
  await page.locator('[id="\\:r2\\:"]').click();
  await page.locator('[id="\\:r2\\:"]').fill('0.02');
  await page.locator('[id="\\:r4\\:"]').click();
  await page.locator('[id="\\:r4\\:"]').fill('0.03');
  await page.locator('input[name="rows\\.0\\.comment"]').click();
  await page.locator('input[name="rows\\.0\\.comment"]').fill('one');
  await page.locator('input[name="rows\\.1\\.comment"]').click();
  await page.locator('input[name="rows\\.1\\.comment"]').fill('two');
  await page.locator('input[name="rows\\.2\\.comment"]').click();
  await page.locator('input[name="rows\\.2\\.comment"]').fill('three');
  await page.getByRole('button', { name: 'Save List' }).click();
  await expect(page.getByText('wallets Â· 0.06 TON')).toBeVisible();
  await page.getByRole('button', { name: 'Save', exact: true }).click();
  await page.getByRole('button', { name: 'Continue with Pro' }).click();
  await expect(page.getByText('Tonkeeper Pro', { exact: true })).toBeVisible();
  await expect(page.getByRole('button', { name: 'Buy Pro' }).first()).toBeVisible();
  await page.locator('#react-portal-modal-container').getByRole('button').first().click();
  await page.locator('div').filter({ hasText: /^List 1$/ }).getByRole('button').click();
  await expect(page.locator('.sc-eggLLm > div:nth-child(3)')).toBeVisible();
  await page.locator('.sc-eggLLm > div:nth-child(3)').click();
  await page.getByRole('button', { name: 'Delete List' }).click();
  await expect(page.getByText('Delete\'List 1\'?')).toBeVisible();
  await expect(page.getByText('This action is irreversible,')).toBeVisible();
  await expect(page.locator('#react-portal-modal-container')).toContainText('This action is irreversible, and all data will be lost.');
  await expect(page.getByRole('button', { name: 'Cancel' })).toBeVisible();
  await page.getByRole('button', { name: 'Delete', exact: true }).click();
  await page.locator('div').filter({ hasText: /^New Multi Send$/ }).getByRole('button').click();
  await page.getByText('Preferences').click();
  await page.locator('div').filter({ hasText: /^Sign Out$/ }).nth(1).click();
  await page.locator('div').filter({ hasText: /^I have a backup copy of recovery phrase$/ }).locator('div').click();
  await page.getByRole('button', { name: 'Delete wallet data' }).click();
});