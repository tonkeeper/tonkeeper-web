name: PR
on:
    pull_request:

env:
    node-version: 20.11.1

permissions:
    pull-requests: write

jobs:
    desktop-build:
        name: desktop-build
        strategy:
            matrix:
                include:
                - os: macos-13
                  command: make:arm
                  tag: arm
                  dist: /apps/desktop/out/make
                - os: windows-latest
                  command: make:intel
                  tag: x64
                  dist: /apps/desktop/out/make/squirrel.windows
        runs-on: ${{ matrix.os }}
        timeout-minutes: 30
        env:
            APPLE_API_KEY: ${{ github.workspace }}/AuthKey.p8
            APPLE_API_KEY_ID: ${{ secrets.APPLE_API_KEY_ID }}
            APPLE_API_ISSUER: ${{ secrets.APPLE_API_ISSUER }}
            DEBUG: electron*

        steps:
            - name: Checkout to git repository
              uses: actions/checkout@v4

            - name: Set up Node
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ env.node-version }}

            - name: Enable Corepack
              run: |
                  corepack enable

            - name: Decode service account into a file
              if: runner.os == 'macOS'
              env:
                  CREDENTIALS: ${{ secrets.APPLE_API_KEY }}
              run: |
                  echo $CREDENTIALS | base64 -d > ${{ github.workspace }}/AuthKey.p8

            - name: Configure keychain
              if: runner.os == 'macOS'
              uses: apple-actions/import-codesign-certs@v3
              with:
                  p12-file-base64: ${{ secrets.IDENTITY_P12_B64 }}
                  p12-password: ${{ secrets.IDENTITY_PASSPHRASE }}

            - name: Yarn cache
              uses: actions/cache@v4
              with:
                  path: ./.yarn
                  key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-yarn-

            - name: Run install
              uses: borales/actions-yarn@v5
              with:
                  cmd: install

            - name: Run build packages
              uses: borales/actions-yarn@v5
              with:
                  cmd: build:pkg

            - name: Run build intel distributive
              uses: borales/actions-yarn@v5
              with:
                  cmd: ${{ matrix.command }}
                  dir: 'apps/desktop'

            - name: Upload zip distributives to artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: Tonkeeper-mac-${{ matrix.tag }}-zip
                  retention-days: 10
                  path: |
                      ${{ github.workspace }}/apps/desktop/out/make/zip/**/*.zip

            - name: Upload mac DMG (optional)
              if: runner.os == 'macOS'
              uses: actions/upload-artifact@v4
              with:
                  name: Tonkeeper-mac-${{ matrix.tag }}-dmg
                  retention-days: 10
                  path: |
                      ${{ github.workspace }}/apps/desktop/out/make/*.dmg
                      ${{ github.workspace }}/apps/desktop/out/make/**/dmg/**/*.dmg


            -   name: List Squirrel output
                if: runner.os == 'Windows'
                run: |
                    dir /s /b ${{ github.workspace }}\apps\desktop\out\make\squirrel.windows

            -   name: Upload Windows Squirrel artifacts (RELEASES + full nupkg)
                if: runner.os == 'Windows'
                uses: actions/upload-artifact@v4
                with:
                    name: Tonkeeper-win-x64-squirrel
                    retention-days: 10
                    if-no-files-found: error
                    path: |
                        ${{ github.workspace }}\apps\desktop\out\make\squirrel.windows\RELEASES
                        ${{ github.workspace }}\apps\desktop\out\make\squirrel.windows\*-full.nupkg
                        ${{ github.workspace }}\apps\desktop\out\make\squirrel.windows\*-delta.nupkg

            -   name: Upload Windows Setup (optional)
                if: runner.os == 'Windows'
                uses: actions/upload-artifact@v4
                with:
                    name: Tonkeeper-win-x64-setup
                    retention-days: 10
                    if-no-files-found: error
                    path: |
                        ${{ github.workspace }}\apps\desktop\out\make\squirrel.windows\*.exe
            - name: Clean-up credentials
              if: always() && runner.os == 'macOS'
              run: rm -f "$GITHUB_WORKSPACE/AuthKey.p8"
